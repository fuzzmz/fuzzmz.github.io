<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Fuzzmz | ramblings on tech, life, and randomness by Serban Constantin</title><link href="https://fuzz.me.uk/" rel="alternate"></link><link href="http://feeds.feedburner.com/fuzzmeuk/main.xml" rel="self"></link><id>https://fuzz.me.uk/</id><updated>2016-04-01T00:00:00+03:00</updated><entry><title>Burn itÂ all</title><link href="https://fuzz.me.uk/burn-it-all/" rel="alternate"></link><updated>2016-04-01T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2016-04-01:burn-it-all/</id><summary type="html">&lt;p&gt;It is a known fact that some of the hardware we sell gets either a bit too hot, or a bit too loud, but I never until now thought that we&amp;rsquo;re throwing out money in the (cooler) wind&amp;hellip; at least until we received the following email from one of our field engineers, the people who are in direct contact with our customers and help diagnose their&amp;nbsp;issues.&lt;/p&gt;
&lt;p&gt;What follows is a sanitized email from one of them, published with consent and&amp;nbsp;sanitized.&lt;/p&gt;
&lt;hr/&gt;
&lt;blockquote&gt;
&lt;p&gt;All,&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d like to share a small story that currently ends with one experimental, somewhat incomplete,
uncalibrated, but possibly helpful line of cryptic U-Boot environment to keep the suspense&amp;nbsp;going:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;silentfan=i2c mw 2f 0.1 80; i2c mw 2f 58.1 1; i2c mw 2f 0.1 82; i2c mw 2f 10.1 34; i2c mw 2f 11.1
34; i2c mw 2f 7.1 3f; i2c mw 2f 1.1 f; i2c mw 2f 2.1 f; i2c mw 2f 5.1 f; i2c mw 2f 6.1 f; i2c mw 2f 0.1 80&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The story starts with an &lt;span class="caps"&gt;BOARD1&lt;/span&gt;, involves early and late &lt;span class="caps"&gt;BOARD2&lt;/span&gt;, and goes back to
a &lt;span class="caps"&gt;BOARD3&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Once upon a time an engineer received a &lt;span class="caps"&gt;BOARD1&lt;/span&gt; and got some very explicit comments in the cubicle office
environment for turning it on because of the noise it made. So he came up with a simple cardboard
shield for the flat front fan to ensure that all the air actually went through the SoC heatsink properly.
That way, he could disconnect two of the three fans in the back and add a resistor cable to the front fan
to slow it down. The &lt;span class="caps"&gt;BOARD1&lt;/span&gt; was ok&amp;nbsp;then.&lt;/p&gt;
&lt;p&gt;Time passes and along comes the first &lt;span class="caps"&gt;BOARD2&lt;/span&gt; which looked like the early &lt;span class="caps"&gt;BOARD1&lt;/span&gt; inside the box. After
turning it on for the very first time, it got turned off &lt;span class="caps"&gt;VERY&lt;/span&gt; quickly because it was much worse. The same
cardboard shield and modification was added. It was bearable then.
When another engineer visited the office with an unmodified &lt;span class="caps"&gt;BOARD2&lt;/span&gt; and used it in open space, he got
nearly threatened with violence.
Then new BOARD2s with a black airflow shield over the heatsink happened, which was a really great idea.
The fans used were not, so that one also got modified by replacing the back fans with quiet ones and
disconnecting the useless front fan completely. Again it was ok&amp;nbsp;then.&lt;/p&gt;
&lt;p&gt;Along the way the engineer discovered that a &lt;span class="caps"&gt;BOM&lt;/span&gt; mistake had been made for the &lt;span class="caps"&gt;BOARD2&lt;/span&gt; that caused &lt;span class="caps"&gt;I2C&lt;/span&gt;
to be effectively partially non-functional without software patches to the &lt;span class="caps"&gt;SDK&lt;/span&gt;. Two resistors were
missing. Adding software patches to the &lt;span class="caps"&gt;SDK&lt;/span&gt; for U-Boot and Linux, all &lt;span class="caps"&gt;I2C&lt;/span&gt; magically worked, and, e.g,
temp sensors could suddenly be used. This was important because some customers wanted to know
much more about the thermal side of our high end chips and jet engine fans didn&amp;rsquo;t position us well
against Intel. Also, over 100 of the BOARD2s were to be modified also to be quiet by buying many few
fans and resistors to address a specific market. The new part number for such systems is &lt;span class="caps"&gt;XXXX&lt;/span&gt;.
The engineer that started the idea didn&amp;rsquo;t really like the extra effort and cost that someone would have to
spend to make this happen, so he thought about the topic some more, to see if there was a simpler way
to make the system&amp;nbsp;quiet.&lt;/p&gt;
&lt;p&gt;Along comes a new special customer opportunity asking for a &lt;span class="caps"&gt;BOARD1&lt;/span&gt; in an application space where you can&amp;rsquo;t
sell by going there with a noisy box. So a &lt;span class="caps"&gt;BOARD1&lt;/span&gt; was found to be modified, but the engineer was still thinking
about inexpensive options to make BOARD2s office use compatible.
Wasn&amp;rsquo;t there a device in there called &lt;span class="caps"&gt;W83793G&lt;/span&gt; in both the &lt;span class="caps"&gt;BOARD2&lt;/span&gt; and &lt;span class="caps"&gt;BOARD1&lt;/span&gt; schematics called &amp;ldquo;Winbond H/W
Monitor&amp;rdquo;? Wasn&amp;rsquo;t that device capable of doing &lt;span class="caps"&gt;PWM&lt;/span&gt; fan control? Wasn&amp;rsquo;t it also capable of measuring
temp and doing autonomous fan control properly? Couldn&amp;rsquo;t that chip be configured to do the right thing
about fans and&amp;nbsp;noise?&lt;/p&gt;
&lt;p&gt;So he looked at the different boards available to him and found the following&amp;nbsp;situation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;BOARD1&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;The &lt;span class="caps"&gt;W83793G&lt;/span&gt; is sufficiently wired up in the &lt;span class="caps"&gt;MODEL1&lt;/span&gt; to be used for autonomous fan
control. It controls both fan &lt;span class="caps"&gt;PWM&lt;/span&gt; lines and can measure chip temp if properly
configured. Default pin config settings are not quite ok, but good&amp;nbsp;enough.&lt;/li&gt;
&lt;li&gt;The &lt;span class="caps"&gt;MODEL1&lt;/span&gt; BOARD2s don&amp;rsquo;t have the &lt;span class="caps"&gt;PWM&lt;/span&gt; fans though. They only have fans with the tacho
signal, so there is nothing to&amp;nbsp;control&lt;/li&gt;
&lt;li&gt;The BOARD1s don&amp;rsquo;t have the black shield that current BOARD2s have, so the back fans
can&amp;rsquo;t be used to create suction through the main heat sink, eliminating all usefulness of
fan control. This can be remedied with a simple piece of U-shaped cardboard to fill the
gap between heat sink and back fans&amp;hellip; which permits disconnecting the front fan&amp;nbsp;completely.&lt;/li&gt;
&lt;li&gt;The old &lt;span class="caps"&gt;MODEL1&lt;/span&gt; did have the four wire &lt;span class="caps"&gt;PWM&lt;/span&gt; fans, but such an old board can
only serve as spare parts box to&amp;nbsp;strip.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;BOARD2&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;The &lt;span class="caps"&gt;BOARD2&lt;/span&gt; comes with the back airflow shield that is needed for proper heat sink
temp control through the back fans. The front fan is totally pointless due to the  black
airflow shield, but we still connect it and pay for&amp;nbsp;it&lt;/li&gt;
&lt;li&gt;The fan &lt;span class="caps"&gt;PWM&lt;/span&gt; lines to the &lt;span class="caps"&gt;W83793G&lt;/span&gt; are wired up, so fan speed can be&amp;nbsp;controlled&lt;/li&gt;
&lt;li&gt;The &lt;span class="caps"&gt;W83793G&lt;/span&gt; is accessible with &lt;span class="caps"&gt;I2C&lt;/span&gt; &lt;span class="caps"&gt;SW&lt;/span&gt; patches applied to the &lt;span class="caps"&gt;SDK&lt;/span&gt;, despite not being
quite accessible as the schematics suggest. But &lt;span class="caps"&gt;XX&lt;/span&gt; schematics can be a bit strange
anyway at times as it seems&amp;nbsp;&amp;hellip;&lt;/li&gt;
&lt;li&gt;It is shipped with four wire &lt;span class="caps"&gt;PWM&lt;/span&gt; fans that are not perfectly quiet, but quite bearable
when speed is&amp;nbsp;reduced&lt;/li&gt;
&lt;li&gt;&amp;hellip; but the temp diodes are disconnected from the &lt;span class="caps"&gt;W83793G&lt;/span&gt; by choice of &lt;span class="caps"&gt;BOM&lt;/span&gt;, so
automatic control in &lt;span class="caps"&gt;HW&lt;/span&gt; is impossible. Linux could in theory do software based fan
control but our &lt;span class="caps"&gt;SDK&lt;/span&gt;&amp;nbsp;doesn&amp;rsquo;t.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So we have &lt;span class="caps"&gt;BOARD1&lt;/span&gt; which would be perfectly capable of being quiet by doing automatic fan control if it
had the &lt;span class="caps"&gt;PWM&lt;/span&gt; fans and the black airflow shield &amp;hellip; but doesn&amp;rsquo;t. &lt;em&gt;sigh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;And we have BOARD2s which would be perfectly capable of being quiet by doing automatic fan control if
they had four resistors in a different place on the &lt;span class="caps"&gt;PCB&lt;/span&gt; &amp;hellip; but don&amp;rsquo;t. &lt;em&gt;sigh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The moral of the story is: We could have saved money on fans and leave a much better impression at
customers by doing it right with minimal extra review and&amp;nbsp;changes.&lt;/p&gt;
&lt;p&gt;Yes, the &lt;span class="caps"&gt;W83793G&lt;/span&gt; is a pretty obsolete part these days and other pure &lt;span class="caps"&gt;HW&lt;/span&gt; means may be better now,
but the fact that I found now that we had only 95% of the solution in place leads me to the final&amp;nbsp;question.&lt;/p&gt;
&lt;p&gt;Couldn&amp;rsquo;t we have thought noise and airflow through before we issue a production manufacturing
order for such boards? We are actively paying for useless &lt;span class="caps"&gt;BOM&lt;/span&gt; that could have been &lt;span class="caps"&gt;VERY&lt;/span&gt;&amp;nbsp;useful.&lt;/p&gt;
&lt;p&gt;Coming back to the start: So what is the U-Boot environment line about? If you take &lt;span class="caps"&gt;PWM&lt;/span&gt; fans and put
them into a &lt;span class="caps"&gt;BOARD1&lt;/span&gt;, add the U-cardboard shape in the back to be like the &lt;span class="caps"&gt;BOARD2&lt;/span&gt; black airflow shield,
disconnect the front fan completely, and then run the line &amp;hellip; you end up with a reasonable&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;And now I probably should figure out if there is a reasonable way to do &lt;span class="caps"&gt;SW&lt;/span&gt; based fan control on the &lt;span class="caps"&gt;BOARD2&lt;/span&gt;
under Linux. Too late for the many BOARD2s to be modified &amp;hellip; Oh well more money down the drain&amp;nbsp;&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;BR&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="design"></category><category term="wtf"></category></entry><entry><title>Green URLÂ bar</title><link href="https://fuzz.me.uk/https-now-green/" rel="alternate"></link><updated>2016-03-09T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2016-03-09:https-now-green/</id><summary type="html">&lt;p&gt;&lt;img class="img-responsive" src="/images/https-now-green/fuzzmz-green.png" style="float:left; padding-right:10px"/&gt;&lt;/p&gt;
&lt;p&gt;The blog is now green! Well, better said, parts of the &lt;span class="caps"&gt;URL&lt;/span&gt; bar are now green because this is being served to you by way of a magical &lt;span class="caps"&gt;HTTPS&lt;/span&gt;&amp;nbsp;connection.&lt;/p&gt;
&lt;p&gt;Despite this space being a collection of static web pages, and despite the fact that I&amp;rsquo;m not using any tracking or advertising, I still think it&amp;rsquo;s a good idea to serve content over a secure connection, partly because this way the content can&amp;rsquo;t be tampered with or ads injected into it by ISPs or other 3rd parties (in most&amp;nbsp;cases).&lt;/p&gt;
&lt;p&gt;Thanks to the great people at &lt;a href="https://kloudsec.com/github-pages"&gt;Kloudsec&lt;/a&gt; who auto-provision and auto-renew LetsEncrypt certs for Github Pages with custom domains. You can find out more about them &lt;a href="https://gist.github.com/coolaj86/e07d42f5961c68fc1fc8#gistcomment-1717078"&gt;here&lt;/a&gt;.&lt;/p&gt;</summary><category term="https"></category><category term="security"></category></entry><entry><title>Making private testsÂ public</title><link href="https://fuzz.me.uk/making-private-tests-public/" rel="alternate"></link><updated>2016-03-09T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2016-03-09:making-private-tests-public/</id><summary type="html">&lt;p&gt;Say you&amp;rsquo;ve been developing a tool for your company or your own use, and want to make the source public. As any good coder, you&amp;rsquo;ve also written some tests, but guess what, those tests can&amp;rsquo;t be easily made&amp;nbsp;available.&lt;/p&gt;
&lt;blockquote class="twitter-tweet" data-lang="en"&gt;&lt;p dir="ltr" lang="en"&gt;Or better said, the tests rely on non-free tools and a specific configuration for them to&amp;nbsp;boot.&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a href="https://twitter.com/fuzzmz/status/707493366766895105"&gt;March 9, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async="" charset="utf-8" src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;
&lt;p&gt;To give some more context, the tests are specific to a tool I wrote for migrating history from AccuRev to git. The problem here is that AccuRev is a tool which isn&amp;rsquo;t widely available, and to make things even more fun, we&amp;rsquo;re talking about migrating history, so we need to have a known good state in the tests in order to check the migration was done&amp;nbsp;successfully.&lt;/p&gt;
&lt;p&gt;Bellow is a simple test which will fail if the user doesn&amp;rsquo;t have AccuRev installed on his&amp;nbsp;machine:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_accurev_login_error_handling&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;accurev_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'badtest'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'badtest'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s a simple one, but we can get into even more complicated ones, like comparing the history obtained by the migration script to a known good&amp;nbsp;configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_get_history&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;set_fixture&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;historyfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;set_fixture&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;modhist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;set_fixture&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;acchist&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_history&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Test_gitmigrate_testhist'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acchist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modhist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fout&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fout&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writelines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:])&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;filecmp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modhist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;historyfile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem here is that even if the developer has AccuRev installed on his system, there&amp;rsquo;s no way for me to provide him with a valid stream history which will allow the tests to pass because, well, it&amp;rsquo;s history, which contains information like the user who commited the code, when it was commited, what the message was and so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m wondering what&amp;rsquo;s the proper way to make the tests for such a project&amp;nbsp;available.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Should I make them public and just note that they&amp;rsquo;ll&amp;nbsp;fail?&lt;/li&gt;
&lt;li&gt;Write a guide on how to modify the tests in order for them to work? But then, doesn&amp;rsquo;t this pose the risk of sabotaging your own tests, so that they&amp;rsquo;ll always pass no mater&amp;nbsp;what?&lt;/li&gt;
&lt;li&gt;Simply mark all AccuRev specific tests are failable and tell possible contributors to enable them if they have AccuRev? But then I&amp;rsquo;ll have to be careful during pull requests to not merge any of the changes done to make the tests work for their specific&amp;nbsp;environment.&lt;/li&gt;
&lt;li&gt;Not publish any tests at all? Or just leave in the very generic python&amp;nbsp;ones?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know that this is mitigated to some level by the fact that if someone is interested in this migration script they&amp;rsquo;re most likely going to have all the software installed, but it&amp;rsquo;s still a bit of a headache. Not to mention not being able to have automated testing via Travis-&lt;span class="caps"&gt;CI&lt;/span&gt; once the code is made public, which means even more fun with running manual tests in case of a pull&amp;nbsp;request.&lt;/p&gt;
&lt;p&gt;So, how would you handle this? Hit me up on Twitter (just reply to the tweets embedded above) or leave me your thoughts on the bellow &lt;i class="fa fa-google-plus"&gt;&lt;/i&gt;&amp;nbsp;post.&lt;/p&gt;
&lt;script src="https://apis.google.com/js/plusone.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;div class="g-post" data-href="https://plus.google.com/+SerbanConstantin/posts/DMMDpNHAtTx"&gt;&lt;/div&gt;</summary><category term="git"></category><category term="AccuRev"></category><category term="scm"></category></entry><entry><title>Google Photos Shared AlbumsÂ annoyances</title><link href="https://fuzz.me.uk/google-photos-shared-albums-annoyances/" rel="alternate"></link><updated>2015-12-11T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-12-11:google-photos-shared-albums-annoyances/</id><summary type="html">&lt;p&gt;This feature is a nice starting point for &lt;i class="fa fa-google"&gt;&lt;/i&gt;oogle Photos going social, but it needs a bit more feature for it to be truly awesome (see what you did, I&amp;rsquo;m almost agreeing with &lt;a href="http://www.theverge.com/2015/12/10/9873520/google-photos-shared-albums-vs-apple" title="Google Photos&amp;rsquo; new shared albums aren&amp;rsquo;t designed for a social world"&gt;The Verge&lt;/a&gt;&amp;nbsp;here!).&lt;/p&gt;
&lt;p&gt;After playing with the new feature for a bit I&amp;rsquo;ve found the&amp;nbsp;following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Controls appear to be all-or-nothing. I can control whether an album allows people to add or not, but no way to give people different links with different controls to the same&amp;nbsp;album&lt;/li&gt;
&lt;li&gt;There&amp;rsquo;s no way to remove a person from a shared&amp;nbsp;album&lt;/li&gt;
&lt;li&gt;A contributor can add/remove their own photos, but cannot remove other&amp;nbsp;people&amp;rsquo;s&lt;/li&gt;
&lt;li&gt;The owner &lt;em&gt;can&lt;/em&gt; remove other people&amp;rsquo;s photos that were added to the&amp;nbsp;album&lt;/li&gt;
&lt;li&gt;If a contributor joins an album, adds photos, then leaves the album, all of their photos are removed with&amp;nbsp;them&lt;/li&gt;
&lt;li&gt;The owner (and presumably anyone else) has the option to add any of the photos from a shared album to their&amp;nbsp;library&lt;/li&gt;
&lt;li&gt;Each picture gets labeled with the person who added its&amp;nbsp;name&lt;/li&gt;
&lt;li&gt;There&amp;rsquo;s no notification that someone left an&amp;nbsp;album&lt;/li&gt;
&lt;li&gt;If you turn &amp;ldquo;collaborate&amp;rdquo; off on a previously shared album, it removes all other people that have joined &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; their&amp;nbsp;photos&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was hoping that turning collaborate off might &amp;ldquo;freeze&amp;rdquo; the album in its current state, and still allow people to get notifications if I added photos, but it looks like this is not the&amp;nbsp;case.&lt;/p&gt;
&lt;p&gt;One other feature that I&amp;rsquo;d personally really like to see would be the ability to tap someone&amp;rsquo;s picture (which is present in the list of who&amp;rsquo;s in the album at the top) and see all the photos they&amp;nbsp;added.&lt;/p&gt;</summary><category term="Android"></category><category term="Google"></category><category term="Photos"></category></entry><entry><title>Oh kernel, myÂ kernel</title><link href="https://fuzz.me.uk/oh-kernel-my-kernel/" rel="alternate"></link><updated>2015-12-10T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-12-10:oh-kernel-my-kernel/</id><summary type="html">&lt;h1 id="upstream-fast-and-large-android-slow"&gt;Upstream fast and large, Android&amp;nbsp;slow&lt;/h1&gt;
&lt;p&gt;One of the most cited reasons for this is that Android kernels still carry a lot of custom patches which are not available in the upstream&amp;nbsp;kernel.&lt;/p&gt;
&lt;p&gt;Say that an upstream developer introduces an &lt;span class="caps"&gt;API&lt;/span&gt; change; the first step he should do after this is to check that all existing code compiles and works without regressions. However, he&amp;rsquo;s not obligated to take custom kernel modules (like grsecurity, rt or Android) into account, nor is he responsible for third party&amp;nbsp;drivers.&lt;/p&gt;
&lt;p&gt;As such, all of the workload of bringing in upstream changes to the Android kernel lays solely on Google developers, and considering the fast pace of kernel development this task is time&amp;nbsp;consuming.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="except-thats-not-it"&gt;&lt;i class="fa fa-exclamation"&gt;&lt;/i&gt;Except that&amp;rsquo;s not&amp;nbsp;it&lt;/h1&gt;
&lt;p&gt;The problem is that all of the above simply isn&amp;rsquo;t that accurate. For example, for an Android device running Linux 3.18, there are only 700 patches to Android-ify your kernel (adding modules like cpufreq_interactive, binder, SElinux fixes, etc.). You can see the list of kernel branches supported &lt;a href="https://android.googlesource.com/kernel/common.git/+refs/" title="Refs - kernel/common.git - Git at Google"&gt;here&lt;/a&gt; to get an idea on how much, or little, they differ from&amp;nbsp;upstream.&lt;/p&gt;
&lt;p&gt;One of the reasons might be that SoC vendor brings up the kernel on a new chip (so Qualcomm for example ensures that everything is working on the &lt;span class="caps"&gt;SD808&lt;/span&gt;/810). The vendor invests and a lot of time and money in making sure everything is stable. The issue here is that the kernel changes a lot of hands: upstream (Linus) provides the base kernel, Google provides the core Android patches on top of a specific version (3.10, 3.14, 3.18, 4.1), the SoC vendor brings up their chip with their own set of patches, and then the actual device &lt;span class="caps"&gt;OEM&lt;/span&gt; will apply the final changes on top to support a specific&amp;nbsp;device.&lt;/p&gt;
&lt;p&gt;This means that SoC vendors don&amp;rsquo;t really have an incentive to bring new kernels to an existing chip. Also note that the development time from when a SoC starts getting worked on and when it&amp;rsquo;s released is pretty long, so your kernel might have actually been not that old when it was selected. It&amp;rsquo;s much easier from a SoC vendor perspective to deal with a new kernel when you&amp;rsquo;re working on bringup for a new SoC. Likewise, even if the SoC vendor upgrades a kernel, the &lt;span class="caps"&gt;OEM&lt;/span&gt; would have to pick that up, rebase their device-specific patches on top o it, then go through all the testing and bug fixing that&amp;nbsp;entails.&lt;/p&gt;
&lt;p&gt;Realistically that won&amp;rsquo;t happen though, as the SoC vendor is already doing bringup on the next generation of chips, and the &lt;span class="caps"&gt;OEM&lt;/span&gt; is working on their next&amp;nbsp;devices.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="does-it-matter-though"&gt;Does it matter&amp;nbsp;though?&lt;/h1&gt;
&lt;p&gt;Well, it doesn&amp;rsquo;t really matter if you&amp;rsquo;re running 3.10 when upstream is at 4.4. If you&amp;rsquo;re on a desktop and there are bugfixes or new drivers that improve some piece of hardware in your system, great, a new kernel might improve your life significantly. For your phone though, the kernel has been developed specifically for your device because the hardware isn&amp;rsquo;t&amp;nbsp;interchangeable.&lt;/p&gt;
&lt;p&gt;If there are better drivers or bugfixes from 4.4, they&amp;rsquo;ve probably been backported to your device on 3.10 - and yes, those will come in with your standard OTAs. You don&amp;rsquo;t need a full kernel version bump to take advantage of&amp;nbsp;those.&lt;/p&gt;
&lt;p&gt;In fact you don&amp;rsquo;t want a full kernel version bump because all of your device and SoC specific code can break in mysterious ways. Watch as some mmc refactoring upstream randomly breaks your wifi driver! Missed one armv8 patch? Boom, random &lt;span class="caps"&gt;SIMD&lt;/span&gt; register corruption that causes programs to randomly segfault. People are especially sensitive to kernel stability on their phones, so the kernels need to be rock solid. Backporting patches to a kernel the SoC vendor has spent a lot of time on making stable is always the safer&amp;nbsp;route.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="but-what-about-pcs"&gt;But what about&amp;nbsp;PCs?&lt;/h1&gt;
&lt;p&gt;The only reason that this is agnostic to Android devices, and not say, desktop &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;rsquo;s, is because of how drivers/modules are implemented on&amp;nbsp;Android.&lt;/p&gt;
&lt;p&gt;Because there is no standardized bootloader on Android, the kernel cannot go about detecting hardware on the platform, and drivers need to be baked into the kernel itself (and thus, loses modularity). This is why it&amp;rsquo;s such an intensive process to upgrade the kernel, as drivers are statically written in, rather than dynamically being&amp;nbsp;linked.&lt;/p&gt;
&lt;p&gt;In short, this would be much less of a problem if there were a standardized bootloader, and easy hardware detection in Android Kernel. Once that happens, dynamic linking of modules could be implemented, and much less customization would need to be done to the kernel&amp;nbsp;itself.&lt;/p&gt;
&lt;p&gt;In theory, implementing dynamic linking would also be the gateway for Google to provide universal updates to Android devices. It is because of these deep, inflexible changes that Google cannot even begin to push universal&amp;nbsp;updates.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="read-more"&gt;Read&amp;nbsp;more&lt;/h1&gt;
&lt;p&gt;If you&amp;rsquo;ve reached this point and still want more, then you can read &lt;a href="https://lwn.net/Articles/662147/" title="Running a mainline kernel on a cellphone"&gt;Running a mainline kernel on a cellphone&lt;/a&gt; by Jonathan Corbet on the strugles and fun you&amp;rsquo;d have to face in having the latest and&amp;nbsp;greatest.&lt;/p&gt;</summary><category term="Android"></category><category term="kernel"></category><category term="linux"></category></entry><entry><title>ForÂ now</title><link href="https://fuzz.me.uk/for-now/" rel="alternate"></link><updated>2015-04-06T20:42:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-04-06:for-now/</id><summary type="html">&lt;p&gt;We are each of us responsible for our own happiness. No one can make 
another person &lt;em&gt;be&lt;/em&gt; happy; all you can do is strive for your own 
happiness, and hope someone wants to share in it with&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;Thanks for a great&amp;nbsp;trip.&lt;/p&gt;</summary><category term="rants"></category><category term="self"></category></entry><entry><title>Travis-CI articleÂ publishing</title><link href="https://fuzz.me.uk/travis-article-publish/" rel="alternate"></link><updated>2015-03-25T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-03-25:travis-article-publish/</id><summary type="html">&lt;h1 id="configuring-the-job"&gt;Configuring the&amp;nbsp;job&lt;/h1&gt;
&lt;p&gt;I&amp;rsquo;m not going to go through the whole set-up of having Pelican up and running, nor about how to configure GitHub pages in order to publish your blog, though those are some nice ideas for future articles &lt;i class="fa fa-lightbulb-o"&gt;&lt;/i&gt;.&lt;/p&gt;
&lt;p&gt;The publishing flow would be as&amp;nbsp;follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a separate &lt;code&gt;article/article-name&lt;/code&gt; branch on which to work on the&amp;nbsp;article&lt;/li&gt;
&lt;li&gt;Submit a pull request to the &lt;code&gt;source&lt;/code&gt; branch once the article is&amp;nbsp;finished&lt;/li&gt;
&lt;li&gt;On pull request merge run a Travis &lt;span class="caps"&gt;CI&lt;/span&gt; job to get the latest changes, publish using Pelican and push the output back to the &lt;code&gt;master&lt;/code&gt; branch in order to make the changes&amp;nbsp;public.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I am fully aware that this sounds so much more complicated compared to publishing an article using &lt;i class="fa fa-wordpress"&gt;&lt;/i&gt; &lt;a href="https://en.wordpress.com/" title="WordPress.com: Create a free website or blog"&gt;Wordpress&lt;/a&gt; for example, but it fits well into my mostly command line world, &lt;i class="fa fa-git"&gt;&lt;/i&gt; and &lt;i class="fa fa-github"&gt;&lt;/i&gt; love and general&amp;nbsp;geekiness.&lt;/p&gt;
&lt;p&gt;The actual implementation can be split in&amp;nbsp;two:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Getting Travis &lt;span class="caps"&gt;CI&lt;/span&gt; to notice that a merge was&amp;nbsp;made&lt;/li&gt;
&lt;li&gt;Telling Travis &lt;span class="caps"&gt;CI&lt;/span&gt; what to do once &lt;code&gt;1&lt;/code&gt; happens&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="1-travis-integration"&gt;1. Travis&amp;nbsp;integration&lt;/h2&gt;
&lt;p&gt;Actually setting up Travis &lt;span class="caps"&gt;CI&lt;/span&gt; is pretty easy and &lt;a href="http://docs.travis-ci.com/user/getting-started/" title="Travis CI: Getting started"&gt;their docs&lt;/a&gt; are amazing, so in short you flip a setting in your GitHub repository options and add a &lt;code&gt;.travis.yml&lt;/code&gt; file which basically configures how a Travis &lt;span class="caps"&gt;CI&lt;/span&gt; job&amp;nbsp;works.&lt;/p&gt;
&lt;p&gt;My &lt;a href="http://goo.gl/KJj2jU"&gt;&lt;code&gt;.travis.yml&lt;/code&gt;&lt;/a&gt; file is as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'2.7'&lt;/span&gt;
&lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;
&lt;span class="n"&gt;before_install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"export TRAVIS_COMMIT_MSG=\"$(git log --format=%B -n 1 | head -c23)\""&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;txt&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;&lt;span class="sr"&gt;/fuzzmz/&lt;/span&gt;&lt;span class="n"&gt;pelicanfly&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;awesome&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;4.3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt; &lt;span class="s2"&gt;"Serban Constantin"&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;email&lt;/span&gt; &lt;span class="n"&gt;serban&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;constantin&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;gmail&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;com&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;global&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;secure&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;M88dgw5e8vf2W9wXgTJCxPsFfQSjkXeHrPfiyllyd7ypPY0AynIbsLGlvS0d6ZKPlXgHNaVQqRcvGSvobLb5FuADyamvPKNLf&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;LmUOuRh0aiK91s&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;kVo9&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;qobl9a4kgY2n5flbZpWAyOYDlMdwZHl9B9uBK1i5KtZMT1j&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;FKAEk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This file tells us that the scripts will run on Python 2.7, and to only run when changes happen to the &lt;code&gt;source&lt;/code&gt; branch.&lt;/p&gt;
&lt;p&gt;The next step is to tell Travis that before installing our required packages he should export the git commit message which prompted the build to the &lt;code&gt;TRAVIS_COMMIT_MSG&lt;/code&gt; variable, which will then be used when pushing the &lt;span class="caps"&gt;HTML&lt;/span&gt; files to the &lt;code&gt;master&lt;/code&gt; branch (see &lt;i class="fa fa-code-fork"&gt;&lt;/i&gt; &lt;a href="https://github.com/fuzzmz/fuzzmz.github.io/pull/12" title="Fix missing author and commit message #12"&gt;Fix missing author and commit message&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;After that we go ahead and install all the packages required to publish the blog (Pelican, Markdown, etc), as well as a custom fork of one of the packages and configure git so that the correct author is displayed in the repository &lt;code&gt;master&lt;/code&gt; branch after pushing the published content to&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;We then go ahead and actually publish the content via &lt;code&gt;make publish&lt;/code&gt; and push it to GitHub using &lt;code&gt;make github&lt;/code&gt;, functions which will get explained a bit further&amp;nbsp;down.&lt;/p&gt;
&lt;p&gt;One more thing that needs done is to have a way to let Travis push the changes back to the repo. This is done by &lt;a href="https://github.com/settings/applications"&gt;generating a token&lt;/a&gt; on GitHub and encoding it using the &lt;a href="https://github.com/travis-ci/travis.rb#installation"&gt;travis ruby application&lt;/a&gt; so that others can&amp;rsquo;t use said token to push to my&amp;nbsp;repository.&lt;/p&gt;
&lt;p&gt;The last thing that needs to be done is to disable pull request builds in Travis &lt;span class="caps"&gt;CI&lt;/span&gt; to prevent the blog being updated by a pull&amp;nbsp;request.&lt;/p&gt;
&lt;p&gt;&lt;img alt="disable pull request" class="img-responsive" src="/images/travis-article-publish/travis-pull-request.png"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="2-travis-commands"&gt;2. Travis&amp;nbsp;commands&lt;/h2&gt;
&lt;p&gt;The actual steps to publish the blog and push it back to GitHub are detailed in the &lt;code&gt;Makefile&lt;/code&gt; and called via &lt;code&gt;make publish&lt;/code&gt; and &lt;code&gt;make github&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;PELICAN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pelican&lt;/span&gt;

&lt;span class="n"&gt;BASEDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CURDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;INPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASEDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;
&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASEDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;CONFFILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASEDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;

&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="err"&gt;!&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;rm&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;rf&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;publish&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PELICAN&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;INPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CONFFILE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="s2"&gt;"${TRAVIS_COMMIT_MSG}"&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OUTPUTDIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nd"&gt;@git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fq&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;GH_TOKEN&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nd"&gt;@github.com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TRAVIS_REPO_SLUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;code&gt;Makefile&lt;/code&gt; we define the current directory, the directory which holds the articles in markdown, the output directory which will store the generated &lt;span class="caps"&gt;HTML&lt;/span&gt; files as well as the path to the Pelican configuration&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;To publish the blog we simply run&amp;nbsp;Pelican.&lt;/p&gt;
&lt;p&gt;To push the changes to the repo so they become live we use &lt;code&gt;ghp-import&lt;/code&gt; to simplify the process of committing the files and setting the correct branch (&lt;code&gt;master&lt;/code&gt; in this case) and commit message, and then do a &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s it, now you just have to wait for the Travis &lt;span class="caps"&gt;CI&lt;/span&gt; build to take place, after which your content will be automatically made&amp;nbsp;available.&lt;/p&gt;
&lt;p&gt;Oh, and there&amp;rsquo;s also an associated pull request for this article, &lt;i class="fa fa-code-fork"&gt;&lt;/i&gt; &lt;a href="https://github.com/fuzzmz/fuzzmz.github.io/pull/13" title="add Travis-CI publishing article"&gt;add Travis-&lt;span class="caps"&gt;CI&lt;/span&gt; publishing article&lt;/a&gt;.&lt;/p&gt;</summary><category term="git"></category><category term="Travis-CI"></category><category term="GitHub"></category></entry><entry><title>Force vs.Â phone</title><link href="https://fuzz.me.uk/force-phone/" rel="alternate"></link><updated>2015-01-22T20:30:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-01-22:force-phone/</id><summary type="html">&lt;p&gt;I&amp;rsquo;ve been recently reading how it&amp;rsquo;s supposedly better to have a phone with a removable battery, because in case of a fall energy is dissipated by the popping back&amp;nbsp;case.&lt;/p&gt;
&lt;h1 id="structural-engineering-time"&gt;&lt;i class="fa fa-lightbulb-o"&gt;&lt;/i&gt; Structural engineering&amp;nbsp;time!&lt;/h1&gt;
&lt;p&gt;The back of a phone contributes to its strength and stiffness until it pops off. Actually, it won&amp;rsquo;t contribute until the phone has flexed enough to use up the play between the back cover and the phone, but that usually happens right away. A non-removable cover always contributes and it generally contributes more because it&amp;rsquo;s better connected to the rest of the device and is often made of a stronger and stiffer material. If they were the same thickness, a phone you couldn&amp;rsquo;t open would usually be&amp;nbsp;stronger.&lt;/p&gt;
&lt;p&gt;In practice, phones with removable covers are usually thicker and have an interior back cover. The double back wall makes a big difference. So does thickness, as we&amp;rsquo;ll see&amp;nbsp;below.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="strength"&gt;Strength&lt;/h2&gt;
&lt;p&gt;Is how much force the phone can take before it starts to permanently deform &amp;ndash; when the iPhone 6 Plus (or Sony Xperia Z Ultra) bend in someone&amp;rsquo;s pocket, it&amp;rsquo;s a strength issue. If phones are treated as homogeneous rectangular prisms, strength is proportional to the square of the thickness. Of course, we just said that they weren&amp;rsquo;t homogeneous prisms, but it&amp;rsquo;s a useful&amp;nbsp;guideline.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="stiffness"&gt;Stiffness&lt;/h2&gt;
&lt;p&gt;Is (approximately) how resistant the phone is to non-permanent bending. The test where you apply a force to the phone&amp;rsquo;s back until the screen cracks is actually a stiffness test, because that kind of screen cracking is deformation-controlled. The screen&amp;rsquo;s own strength is involved, but not the phone&amp;rsquo;s. Just its stiffness. It&amp;rsquo;s proportional to the cube of the phone&amp;rsquo;s thickness, so going thinner is even worse when it comes to this particular test. The bending in the phone creates forces in the screen that are pit against the screen&amp;rsquo;s&amp;nbsp;strength.&lt;/p&gt;
&lt;p&gt;Longer phones will have higher forces on them (linearly proportional to the phone&amp;rsquo;s height, in the case of that screen cracking test), which hurts the iPhone a little more when it comes to in-pocket&amp;nbsp;bending.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="impacts"&gt;Impacts&lt;/h2&gt;
&lt;p&gt;Are more complicated. The ideal is probably for the phone&amp;rsquo;s edge to deform a bit like a crumple zone. Deformation can pop the back cover off &amp;ndash; that&amp;rsquo;s why it looks like that helps. It doesn&amp;rsquo;t absorb much energy though. It only helps because it means that the phone is deforming and that is what absorbs energy. After that, the forces will go into the stiffest part of the phone and that&amp;rsquo;s often the screen. If there are imperfections, a small number of cracks will start at those and the screen fails. Without imperfections you have a greater chance that the glass will distribute the forces more evenly and not visibly&amp;nbsp;crack.&lt;/p&gt;</summary><category term="physics"></category><category term="phones"></category></entry><entry><title>Geek at theÂ gym</title><link href="https://fuzz.me.uk/geek-at-gym/" rel="alternate"></link><updated>2015-01-18T21:22:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-01-18:geek-at-gym/</id><summary type="html">&lt;p&gt;What happens when a geek wants to go to a specific gym class but always finds it fully booked? Well, I decided to abuse their reservation page and write a quick and dirty script which tries to make a&amp;nbsp;reservation.&lt;/p&gt;
&lt;p&gt;Before we dive in the code I want to warn you again that this was a very quick project built for one specific gym class, so there are a lot of hardcoded things in it. It could use a clean-up and better structure, but hey, it worked for what I needed it&amp;nbsp;for.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="the-flow"&gt;The&amp;nbsp;flow&lt;/h1&gt;
&lt;p&gt;The flow of the script is the&amp;nbsp;following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;login&lt;/code&gt; - based on the user email and pin log in to the&amp;nbsp;site&lt;/li&gt;
&lt;li&gt;&lt;code&gt;grab session cookie&lt;/code&gt; - the reservation request requires a valid session&amp;nbsp;cookie&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make reservation&lt;/code&gt; - actually make the reservation for the specific&amp;nbsp;class&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Basically, this can be written&amp;nbsp;as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;memberemail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"random@random.com"&lt;/span&gt;
    &lt;span class="n"&gt;memberpin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt;
    &lt;span class="n"&gt;classid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7890&lt;/span&gt;
    &lt;span class="n"&gt;cookie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memberemail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memberpin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;make_reservation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memberemail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memberpin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;classid&lt;/code&gt; for a specific class can be found by going to the reservation page for your particular gym location and looking at the source code. Also note the &lt;code&gt;centerid&lt;/code&gt; string corresponding to your&amp;nbsp;gym.&lt;/p&gt;
&lt;p&gt;For example, the monday morning cycling class has the following&amp;nbsp;info:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"37752"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"classId"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"402"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"centerId"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The easiest way to get this info is to just search for &lt;code&gt;classId&lt;/code&gt; in the page source and match that with the class you want to&amp;nbsp;attend.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="1-login"&gt;1.&amp;nbsp;Login&lt;/h2&gt;
&lt;p&gt;In order to log in to the site we perform a post request to &lt;code&gt;http://www.worldclass.ro/includes/ajax/login-user.php&lt;/code&gt; with the username and password and from the response we steal the session&amp;nbsp;cookie.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We need the &lt;code&gt;urllib&lt;/code&gt; and &lt;code&gt;urllib2&lt;/code&gt; libraries in order to perform requests against the Worldclass gym&amp;nbsp;website.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;memberemail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;memberpin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://www.worldclass.ro/includes/ajax/login-user.php"&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;memberemail&lt;/span&gt;
    &lt;span class="n"&gt;pin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;memberpin&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Our login function in which we define the login page url and the user email and password (pin) used to&amp;nbsp;authenticate.&lt;/p&gt;
&lt;p&gt;In order to get the session cookie we need to pass the email and pin to the login page. To do this we uncode them and do a post request against the&amp;nbsp;page.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;raw_params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'pin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlencode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# encode the params&lt;/span&gt;
    &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# form the request&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# open the page with our parameters&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="2-get-session-cookie"&gt;2. Get session&amp;nbsp;cookie&lt;/h2&gt;
&lt;p&gt;The post returns more than just what we need (the session id cookie), so we&amp;rsquo;ll need to perform some aditional steps to get&amp;nbsp;it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="s1"&gt;'Set-Cookie'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# grab all returned cookies&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'='&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# find start of the PHPSESSID cookie&lt;/span&gt;
    &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# find the end of the PHPSESSID cookie&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# return our session cookie&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="3-make-reservation"&gt;3. Make&amp;nbsp;reservation&lt;/h2&gt;
&lt;p&gt;Now that we have the session cookie we can make the reservation to our desired class (defined by the &lt;code&gt;classid&lt;/code&gt; variable).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_reservation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;classid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'http://www.worldclass.ro/includes/ajax/_book_class.php'&lt;/span&gt;
    &lt;span class="n"&gt;classid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;classid&lt;/span&gt;
    &lt;span class="n"&gt;centerid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;402&lt;/span&gt;
    &lt;span class="n"&gt;memberemail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;email&lt;/span&gt;
    &lt;span class="n"&gt;memberpin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pin&lt;/span&gt;
    &lt;span class="n"&gt;outlook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"undefined"&lt;/span&gt;
    &lt;span class="n"&gt;clubname&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Health Academy at the Grand"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As you can see, the request for the booking page needs a bit more information than the login one. The only things that you should change directly are the &lt;code&gt;centerid&lt;/code&gt; and &lt;code&gt;clubname&lt;/code&gt; variables.&lt;/p&gt;
&lt;p&gt;Once this is done we can start building our&amp;nbsp;request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;raw_params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'classId'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;classid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s1"&gt;'centerId'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;centerid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s1"&gt;'memberEmail'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;memberemail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s1"&gt;'memberPin'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;memberpin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s1"&gt;'outlook'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;outlook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s1"&gt;'clubName'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;clubname&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before performing the request we need to also add the session cookie to prove that we&amp;rsquo;re indeed an actual user; after that we can perform the&amp;nbsp;request.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="n"&gt;cookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlencode&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'PHPSESSID'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cookie&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c1"&gt;# encode the cookie&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlencode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;raw_params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# encode the parameters&lt;/span&gt;
    &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'Cookie'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;# add our cookie to the request header&lt;/span&gt;

    &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# form our request&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# perform the reqest&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# print the output to see if things are ok&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That&amp;rsquo;s it. Now all you have to do is put this script in crontab to be run every night starting from a fwe minutes before the bookings open until a few minutes after they&amp;nbsp;start.&lt;/p&gt;
&lt;hr/&gt;
&lt;h1 id="todo-and-code-repository_1"&gt;&lt;span class="caps"&gt;TODO&lt;/span&gt; and &lt;i class="fa fa-github"&gt;&lt;/i&gt; code&amp;nbsp;repository&lt;/h1&gt;
&lt;p&gt;The script could be improved to simplify ease of use. The following changes could make things&amp;nbsp;easier:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Automatically match the &lt;code&gt;classid&lt;/code&gt; and &lt;code&gt;centerid&lt;/code&gt; based on user selection from a list instead of having the user look in the page source&amp;nbsp;code;&lt;/li&gt;
&lt;li&gt;Check if the booking was succesful and if not try&amp;nbsp;again;&lt;/li&gt;
&lt;li&gt;Instead of relying on the crontab/task scheduler to run the script every x minutes, move that logic in the script. That way it just needs to be started once and it&amp;rsquo;ll keep running and retrying until the reservation is correct or a set timeout is&amp;nbsp;reached.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Feel free to fork and submit pull requests. You can find the code on &lt;a href="https://github.com/fuzzmz/WorldclassGymBooking"&gt;&lt;i class="fa fa-github"&gt;&lt;/i&gt;fuzzmz/WorldclassGymBooking&lt;/a&gt;.&lt;/p&gt;</summary><category term="python"></category><category term="coding"></category></entry><entry><title>Breathe</title><link href="https://fuzz.me.uk/breathe/" rel="alternate"></link><updated>2015-01-17T22:54:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2015-01-17:breathe/</id><summary type="html">&lt;p&gt;Imagine if you will a moment in your life when you were struck dumb by the awe inspiring beauty of something: the green flash of a sunset, the stillness of the quiet woods, the first snowflake of winter, what have you.Image you experience that every&amp;nbsp;day.&lt;/p&gt;
&lt;p&gt;Then, after a while, the world shifts to tones of grey&amp;hellip; sounds become flat, and every time you look at that sunset sorrow washes over you. You know that it&amp;rsquo;s beautiful, but you can&amp;rsquo;t feel it any longer. That&amp;rsquo;s&amp;nbsp;depression.&lt;/p&gt;
&lt;p&gt;Your entire frame of emotion is shifted down. The lows are deeper, the highs aren&amp;rsquo;t as high, and you remember when it wasn&amp;rsquo;t this&amp;nbsp;way.&lt;/p&gt;
&lt;p&gt;And there is a deep seated intuition that you are emotionally &amp;ldquo;flawed&amp;rdquo;&amp;nbsp;somehow.&lt;/p&gt;</summary><category term="rants"></category><category term="self"></category></entry><entry><title>WTF PHP BBQ</title><link href="https://fuzz.me.uk/wtf-php-bbq/" rel="alternate"></link><updated>2014-11-10T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-11-10:wtf-php-bbq/</id><summary type="html">&lt;p&gt;Despite me trying to keep an open mind about all programming languages, I just can&amp;rsquo;t stand &lt;span class="caps"&gt;PHP&lt;/span&gt; with its broken defaults and weird-ass quirks. As usual, I&amp;rsquo;ll link to &lt;a href="http://eev.ee/blog/2012/04/09/php-a-fractal-of-bad-design/"&gt;&lt;span class="caps"&gt;PHP&lt;/span&gt;: a fractal of bad design&lt;/a&gt; for an all-encompassing article on why &lt;span class="caps"&gt;PHP&lt;/span&gt; sucks, but let me just tell you one of my recent fun times with &lt;span class="caps"&gt;PHP&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Say you have an encrypted link to a &lt;span class="caps"&gt;SOAP&lt;/span&gt; service provided by a 3&lt;sup&gt;rd&lt;/sup&gt; party and you want to connect to it. It&amp;rsquo;s as simple as setting up a SoapClient object to connect using https,&amp;nbsp;right?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;soap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;new&lt;/span&gt; &lt;span class="nt"&gt;SoapClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'https://soap.example.com/service.wsdl'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That snippet of code is perfectly functional, except that it fails to do one important thing, and that is to provide some semblance of security. You see, by default &lt;span class="caps"&gt;PHP&lt;/span&gt; performs &lt;strong&gt;absolutely no default validation&lt;/strong&gt; of any kind. It&amp;rsquo;ll accept self-signed certificates, certificates for the wrong server, etc. Basically, default is completely&amp;nbsp;insecure.&lt;/p&gt;
&lt;p&gt;Now, the way to do it is to override the stream it uses (and how many people know about that?), until you stumble through and configure a particular stream type and mistype a parameter (which is a string, not a function/method call, and therefore not actually validated against anything) and then test it you find out it&amp;rsquo;s still&amp;nbsp;broken&amp;hellip;&lt;/p&gt;
&lt;p&gt;Having to do unexpected work to get a secure connection working properly means the average code on the internet does it wrong and assumes, wrongly, the first piece of code would be secure. It&amp;nbsp;isn&amp;rsquo;t.&lt;/p&gt;
&lt;p&gt;The actual solution, and not the 1 liner available above, would be something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;stream_context_create&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
  &lt;span class="nt"&gt;array&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'ssl'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;array&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="s1"&gt;'verify_peer'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;TRUE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'allow_self_signed'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;FALSE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'capath'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'/etc/ssl/certs'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;   &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Valid&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;Ubuntu&lt;/span&gt; &lt;span class="nt"&gt;at&lt;/span&gt; &lt;span class="nt"&gt;least&lt;/span&gt;
    &lt;span class="s1"&gt;'verify_depth'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'CN_match'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'soap.example.com'&lt;/span&gt;
  &lt;span class="o"&gt;)));&lt;/span&gt;
&lt;span class="o"&gt;$&lt;/span&gt;&lt;span class="nt"&gt;soap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nt"&gt;new&lt;/span&gt; &lt;span class="nt"&gt;SoapClient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="nt"&gt;https&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="nt"&gt;soap&lt;/span&gt;&lt;span class="nc"&gt;.example.com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;service&lt;/span&gt;&lt;span class="nc"&gt;.wsdl&lt;/span&gt;&lt;span class="s1"&gt;',array('&lt;/span&gt;&lt;span class="nt"&gt;stream_context&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;$&lt;/span&gt;&lt;span class="nt"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Assuming&lt;/span&gt; &lt;span class="nt"&gt;everything&lt;/span&gt; &lt;span class="nt"&gt;above&lt;/span&gt; &lt;span class="nt"&gt;is&lt;/span&gt; &lt;span class="nt"&gt;done&lt;/span&gt; &lt;span class="nt"&gt;correctly&lt;/span&gt; &lt;span class="nt"&gt;this&lt;/span&gt; &lt;span class="nt"&gt;should&lt;/span&gt; &lt;span class="nt"&gt;be&lt;/span&gt; &lt;span class="nt"&gt;secure&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;You&lt;/span&gt; &lt;span class="nt"&gt;absolutely&lt;/span&gt; &lt;span class="nt"&gt;-must-&lt;/span&gt; &lt;span class="nt"&gt;validate&lt;/span&gt; &lt;span class="nt"&gt;there&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;no&lt;/span&gt; &lt;span class="nt"&gt;errors&lt;/span&gt; &lt;span class="nt"&gt;in&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;above&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But hey, at least &lt;code&gt;"verify_peer" =&amp;gt; TRUE&lt;/code&gt; is now the default. It is the default if you have a recent version, which, unless you control the whole stack you will be stuck on a server that defaults to &lt;code&gt;FALSE&lt;/code&gt; so if there is any chance that code you&amp;rsquo;ve written will be run on an unknown version you still have to code it specifically the way you need it&amp;nbsp;configured.&lt;/p&gt;
&lt;p&gt;Yay &lt;span class="caps"&gt;PHP&lt;/span&gt;!&amp;nbsp;:puke:&lt;/p&gt;</summary><category term="security"></category><category term="coding"></category><category term="php"></category></entry><entry><title>Kano Kit - a cute Raspberry PiÂ setup</title><link href="https://fuzz.me.uk/kano-kit/" rel="alternate"></link><updated>2014-11-05T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-11-05:kano-kit/</id><summary type="html">&lt;p&gt;&lt;img alt="Kano Kit" class="img-responsive" src="/images/kano-kit/kano-1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I just received my new toy, the &lt;a href="http://kano.me/"&gt;Kano Kit&lt;/a&gt;, which consists of a Raspberry Pi, a case for it, a keyboard, a &lt;span class="caps"&gt;USB&lt;/span&gt; WiFi dongle, speaker and charger (plus asorted&amp;nbsp;cables).&lt;/p&gt;
&lt;p&gt;I have to be honest, I didn&amp;rsquo;t really think about what I&amp;rsquo;d use it for for too much, I just really liked the keyboard (it can be used either as bluetooth keyboard or as an &lt;span class="caps"&gt;RF&lt;/span&gt; one via the included adaptor). It also has the advantage of being compatible with both my Nexus 5 and 7, which means that if I have some big email to type I can just use that instead of the on-screen&amp;nbsp;keyboard.&lt;/p&gt;
&lt;iframe class="imgur-album" frameborder="0" height="550" src="//imgur.com/a/2HhAT/embed?background=f2f2f2&amp;amp;text=1a1a1a&amp;amp;link=4e76c9" width="100%"&gt;&lt;/iframe&gt;
&lt;p&gt;The Kano comes with its own Linux distribution, but I didn&amp;rsquo;t get to try that as I have no screen to connect it to. Instead, I just installed Raspbian on the Kano memory card (after taking a backup of the current &lt;span class="caps"&gt;OS&lt;/span&gt;) and then remotely configured the Pi (thank god for &lt;span class="caps"&gt;DHCP&lt;/span&gt; and &lt;span class="caps"&gt;SSH&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;The plan now is to connect an external drive to it and use it as a &lt;span class="caps"&gt;DLNA&lt;/span&gt;/UPnP server to stream &lt;span class="caps"&gt;TV&lt;/span&gt; shows and movies to my laptop and tablet, as well as set it up to automagically acquire the new episodes once they&amp;rsquo;re&amp;nbsp;available.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll write more about this little experiment as it goes on, but until then I still have some packages to install and configs to&amp;nbsp;make.&lt;/p&gt;</summary><category term="raspberry pi"></category><category term="linux"></category><category term="arm"></category></entry><entry><title>Rants of a platformÂ engineer</title><link href="https://fuzz.me.uk/rants-of-a-platform-engineer/" rel="alternate"></link><updated>2014-10-24T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-10-24:rants-of-a-platform-engineer/</id><summary type="html">&lt;p&gt;Hi, I&amp;rsquo;m Fuzzmz and I part of my job description is software build and release engineer. If you&amp;rsquo;ve recently played with &lt;a href="http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=CW-LS-ARM7"&gt;CodeWarrior Development Studio for QorIQ &lt;span class="caps"&gt;LS&lt;/span&gt; series for &lt;span class="caps"&gt;ARM&lt;/span&gt; v7 &lt;span class="caps"&gt;ISA&lt;/span&gt;&lt;/a&gt; or for Power Architecture you should know that the final product builds were done by&amp;nbsp;me.&lt;/p&gt;
&lt;p&gt;This means that what I and the rest of my team does is handle the build process, where all components get integrated to form the final product, as well as handling the build and integration system. What follows are a few thoughts based on my experiences and struggles faced so far during my&amp;nbsp;job.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;I guess a nicer way to name my job would be &lt;em&gt;platform engineering&lt;/em&gt;, as we are tasked with taking care of a part of the systems which power scalability, fault tolerance, and developer&amp;nbsp;productivity.&lt;/p&gt;
&lt;p&gt;Please note though that the following bullet points aren&amp;rsquo;t meant to apply to everyone, nor are all of them in use at my job, though we strive to make things as smooth as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;So, without further ado, here are the guidelines we try to adhere&amp;nbsp;to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Systems are provisioned via&amp;nbsp;code&lt;/li&gt;
&lt;li&gt;Engineers with production responsibilities are embedded with feature&amp;nbsp;teams&lt;/li&gt;
&lt;li&gt;Monitoring and alert configuration is centralized and easily accessible to the people who need&amp;nbsp;them&lt;/li&gt;
&lt;li&gt;Systems are self-healing without human&amp;nbsp;involvement&lt;/li&gt;
&lt;li&gt;Everyday administration tasks are handled through automated&amp;nbsp;systems&lt;/li&gt;
&lt;li&gt;Configuration data is stored in an auditable central&amp;nbsp;repository&lt;/li&gt;
&lt;li&gt;Applications are presented with a fresh, consistent runtime regardless of deployment&amp;nbsp;environment&lt;/li&gt;
&lt;li&gt;Any system that must be deployed more often than monthly does so faster than you can get a cup of&amp;nbsp;coffee&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h3 id="1-systems-are-provisioned-via-code"&gt;1. Systems are provisioned via&amp;nbsp;code&lt;/h3&gt;
&lt;p&gt;This is the foundation of everything. Whether it&amp;rsquo;s Chef or Puppet, bash scripts or even &lt;span class="caps"&gt;VM&lt;/span&gt; snapshots, every developer&amp;rsquo;s time and skills should be more valuable than just manually provisioning stuff. Couple that with the inherent systems documentation that you get from reading Chef cookbooks for example and you&amp;rsquo;ve got the foundational building block for everything else you do. You just shouldn&amp;rsquo;t &lt;em&gt;have&lt;/em&gt; time to do&amp;nbsp;otherwise.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="2-engineers-with-production-responsibilities-are-embedded-with-feature-teams"&gt;2. Engineers with production responsibilities are embedded with feature&amp;nbsp;teams&lt;/h3&gt;
&lt;p&gt;Despite having a team dedicated to shipping the final product (hi to all of the release engineering guys out there), they don&amp;rsquo;t have time to ship everybody else&amp;rsquo;s stuff,&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;You hire smart people everywhere so who better to know the requirements, pitfalls and shortcuts in building their specific pieces of code? Give them ownership of their own deliverables and rely on the platform team to enable them with tooling and, if needed, assistance in making their deployments possible. This will ensure that they are always in the loop when it comes to the outcome of their builds and deliverable&amp;nbsp;sanity.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="3-monitoring-and-alert-configuration-is-centralized-and-easily-accessible-to-the-people-who-need-them"&gt;3. Monitoring and alert configuration is centralized and easily accessible to the people who need&amp;nbsp;them&lt;/h3&gt;
&lt;p&gt;Centralized logging and monitoring of system statistics has two major pluses: developer velocity and system self-documentation. &lt;span class="caps"&gt;SSH&lt;/span&gt; may be necessary in the odd edge case, but if somebody has to log into a machine just to read their logs, they&amp;rsquo;re going to be slower when they do it or not do it at all. Make sure that your devs can readily know when something&amp;rsquo;s wrong, or when a fault somewhere else in the .org might affect&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Also, every data point counts when it comes to logging, so having the record of Things That Have Needed Monitoring can help inform future&amp;nbsp;decisions.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="4-systems-are-self-healing-without-human-involvement"&gt;4. Systems are self-healing without human&amp;nbsp;involvement&lt;/h3&gt;
&lt;p&gt;Do you enjoy waking up to a log full of errors? Or emails from colleagues bitching that something isn&amp;rsquo;t quite&amp;nbsp;working?&lt;/p&gt;
&lt;p&gt;In a sane environment, the steps to recover from failure should be well-documented and extremely digital &amp;mdash; you should be able to document them as a bunch of&amp;nbsp;if-thens.&lt;/p&gt;
&lt;p&gt;Now, I&amp;rsquo;m pretty sure a healthy environment already has lots of if-then processors lying around. They&amp;rsquo;re called computers. You can rent one that can complete all the if-thens that most failures could ever need for two cents an hour in &lt;span class="caps"&gt;AWS&lt;/span&gt;. It&amp;rsquo;s cheaper than having a meat processor doing the moral equivalent (and then calling you when he or she gets off-book) and more&amp;nbsp;reliable.&lt;/p&gt;
&lt;p&gt;An issue that needs to be escalated out-of-hours to a developer should require a postmortem. Turn the results into Python and have it send you an email telling you what it &lt;strong&gt;did&lt;/strong&gt;, not what you &lt;em&gt;need to do&lt;/em&gt;. Then save the shouting, screaming and flailing around for when something is really&amp;nbsp;wrong.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="5-everyday-administration-tasks-are-handled-through-automated-systems"&gt;5. Everyday administration tasks are handled through automated&amp;nbsp;systems&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve heard this item expressed in an even more aggressive manner: &lt;em&gt;no developer should need &lt;span class="caps"&gt;SSH&lt;/span&gt; access to a production system&lt;/em&gt;. I think that&amp;rsquo;s overkill. No matter how much monitoring you stack up, there are some issues that require getting in there and perturbing electrons&amp;nbsp;directly.&lt;/p&gt;
&lt;p&gt;But everyday tasks? See point 4. You&amp;rsquo;ve got if-then machines all over the place. Use&amp;nbsp;them.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="6-configuration-data-is-stored-in-an-auditable-central-repository"&gt;6. Configuration data is stored in an auditable central&amp;nbsp;repository&lt;/h3&gt;
&lt;p&gt;This should be pretty explicit. Your Chef or Puppet configs? Store them in git, or whatever else &lt;span class="caps"&gt;DCVS&lt;/span&gt; you want. Your build scripts? Git. Your per-app configs? Git. And so on and so&amp;nbsp;forth.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="7-applications-are-presented-with-a-fresh-consistent-runtime-regardless-of-deployment-environment"&gt;7. Applications are presented with a fresh, consistent runtime regardless of deployment&amp;nbsp;environment&lt;/h3&gt;
&lt;p&gt;Now, I also handle the installers for the products I cover. And let me tell you, installing on Linux is a bitch, especially when you can&amp;rsquo;t use native packages and have lots and lots of&amp;nbsp;dependencies.&lt;/p&gt;
&lt;p&gt;Granted, I&amp;rsquo;d love nothing more than just offering a pre-configured &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; container with all of our files and binaries in it, but we&amp;rsquo;re still far away from that (the disadvantages of having an &lt;span class="caps"&gt;IDE&lt;/span&gt; which requires a &lt;span class="caps"&gt;GUI&lt;/span&gt; as opposed to a command line&amp;nbsp;suite).&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s nothing worse than plopped down on a machine that&amp;rsquo;s been running for a year-plus, with who-knows-how-many missing patches that dev and test have. This is silly. Give every application a new sandbox and shed no tears when it gets blown away. And if a sandbox is not possible, then make sure that the environment is as close to your tested &lt;em&gt;standard&lt;/em&gt; as&amp;nbsp;possible.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="8-any-system-that-must-be-deployed-more-often-than-monthly-does-so-faster-than-you-can-get-a-cup-of-coffee"&gt;8. Any system that must be deployed more often than monthly does so faster than you can get a cup of&amp;nbsp;coffee&lt;/h3&gt;
&lt;p&gt;Please note: this isn&amp;rsquo;t an excuse for really slow coffee&amp;nbsp;machines.&lt;/p&gt;
&lt;p&gt;Fast deploys are critical both for developer productivity and for production safety. Everybody knows that distractions cause many developers to lose their flow. Script everything, and test from time to&amp;nbsp;time.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;, rant over. Not sure how to end this, so I&amp;rsquo;ll just point you to the comments form&amp;nbsp;bellow.&lt;/p&gt;</summary><category term="devops"></category><category term="rants"></category></entry><entry><title>Patch yourÂ shell</title><link href="https://fuzz.me.uk/patch-your-shell/" rel="alternate"></link><updated>2014-09-26T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-09-26:patch-your-shell/</id><summary type="html">&lt;p&gt;If you&amp;rsquo;ve kept an ear to the Internet for the past two days or so you&amp;rsquo;ve most likely heard about the latest exploit running wild, Shellshock, it basically is remote code execution via Bash. You can find more information about the exploit &lt;a href="http://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, most distros will issue patches to fix this, but if you don&amp;rsquo;t want to wait for those, or if you&amp;rsquo;re running a distro that&amp;rsquo;s no longer supported you can patch Bash&amp;nbsp;yourself.&lt;/p&gt;
&lt;p&gt;For those running a Debian based distro (though this should work across the board) you can check if you&amp;rsquo;re vulnerable&amp;nbsp;using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ env &lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'() { ignore this;}; echo uhoh'&lt;/span&gt; bash -c /bin/true
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you get a response of &lt;code&gt;uhoh&lt;/code&gt; you&amp;rsquo;re&amp;nbsp;vulnerable.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;The&amp;nbsp;fix&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to download the latest Bash source, apply the available patches and then compile&amp;nbsp;everything.&lt;/p&gt;
&lt;p&gt;Just write the code bellow in an update_bash.sh file and run it as&amp;nbsp;root&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;
mkdir bash_source
&lt;span class="nb"&gt;cd&lt;/span&gt; bash_source
wget http://ftp.gnu.org/gnu/bash/bash-4.3.tar.gz
&lt;span class="c1"&gt;#download all patches&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="k"&gt;$(&lt;/span&gt;seq -f &lt;span class="s2"&gt;"%03g"&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; 29&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; wget http://ftp.gnu.org/gnu/bash/bash-4.3-patches/bash43-&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
tar zxvf bash-4.3.tar.gz
&lt;span class="nb"&gt;cd&lt;/span&gt; bash-4.3
&lt;span class="c1"&gt;#apply all patches&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="k"&gt;$(&lt;/span&gt;seq -f &lt;span class="s2"&gt;"%03g"&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; 29&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt; patch -p0 &amp;lt; ../bash43-&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="c1"&gt;#build and install&lt;/span&gt;
./configure
make
make install
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="nb"&gt;cd&lt;/span&gt; ..
rm -r bash_source
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can now retest to see if you&amp;rsquo;re&amp;nbsp;vulnerable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ env &lt;span class="nv"&gt;var&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'() { ignore this;}; echo uhoh'&lt;/span&gt; bash -c /bin/true
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you get the following response then you&amp;rsquo;re&amp;nbsp;safe.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ignoring&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt; &lt;span class="n"&gt;attempt&lt;/span&gt;
&lt;span class="n"&gt;bash&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;importing&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="n"&gt;definition&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="s1"&gt;'var'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please note though that the patches issued so far don&amp;rsquo;t completely fix the exploit, but make it harder for your system to be&amp;nbsp;compromised.&lt;/p&gt;</summary><category term="security"></category><category term="bash"></category><category term="shellshock"></category></entry><entry><title>Charge me,Â baby!</title><link href="https://fuzz.me.uk/charge-me-baby/" rel="alternate"></link><updated>2014-03-08T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-03-08:charge-me-baby/</id><summary type="html">&lt;p&gt;You know, with the number of smartphones increasing in the market I see more and more people spewing bullshit about batteries and how you should charge&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="featureimage" class="img-responsive" src="/images/charge-me-baby/batteries.jpg"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="batteries-in-an-ideal-world"&gt;Batteries in an ideal&amp;nbsp;world&lt;/h3&gt;
&lt;p&gt;When talking about batteries most of the confusion here comes from how differently battery packs are treated to single batteries. What you need to remember is that phones use single&amp;nbsp;batteries.&lt;/p&gt;
&lt;p&gt;In an ideal world, if you wanted your battery to last as long as possible you&amp;nbsp;would:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Never drain below 60%. &lt;span class="caps"&gt;CC&lt;/span&gt; charging wears the battery more than &lt;span class="caps"&gt;CV&lt;/span&gt; does, &lt;span class="caps"&gt;CC&lt;/span&gt; is used from 0 to&amp;nbsp;60.&lt;/li&gt;
&lt;li&gt;Turn the phone off for at least 30 minutes before charging to allow temperature to reach ambient and to avoid charge rate&amp;nbsp;fluctuation.&lt;/li&gt;
&lt;li&gt;Keep it on external power whenever possible to avoid unnecessary [dis]charging, which is of course unavoidable&amp;nbsp;wear.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;However, the difference between &lt;span class="caps"&gt;CC&lt;/span&gt; and &lt;span class="caps"&gt;CV&lt;/span&gt; is only really evident after some years of use, so it&amp;rsquo;s quite safe to just charge it whenever you can, with the provision that if it hits very low levels, charge it sooner rather than&amp;nbsp;later.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="lets-talk-about-myths"&gt;Let&amp;rsquo;s talk about&amp;nbsp;myths&lt;/h3&gt;
&lt;p&gt;The truth is that it doesn&amp;rsquo;t matter if the phone is reading 0, 20, 40 or 50% when you charge it. You&amp;rsquo;re in the &lt;span class="caps"&gt;CC&lt;/span&gt; charge domain regardless. 0% on an Android is usually about 3.0V. This is purely arbitrary and chosen as a balance between battery longevity and battery capacity: It&amp;rsquo;s configurable in the power management &lt;span class="caps"&gt;IC&lt;/span&gt; (set at factory, not aware of any devices which allow it to be changed in the field). Lithium polymer/ion cells are very unhappy below about 2.8V, they go that low and they will suffer&amp;nbsp;greatly.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s get&amp;nbsp;geeky!&lt;/p&gt;
&lt;p&gt;&lt;img alt="voltage_curve" class="img-responsive" src="/images/charge-me-baby/voltage_curve.png"/&gt;
&lt;strong&gt;Voltage curve for a typical&amp;nbsp;smartphone&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;See that elbow at 10%? That&amp;rsquo;s the very beginnings of the high damage domain. It doesn&amp;rsquo;t really start until lower than 0% (i.e. fully discharge, then leave for a month so self-discharge does the&amp;nbsp;rest).&lt;/p&gt;
&lt;p&gt;So we have three different statuses for the battery to be in. It&amp;rsquo;s either in the low damage domain at 60+%, a charge here will cause very little capacity reduction. There&amp;rsquo;s the medium damage domain between 0% and 60%, try to avoid this if possible, finally the high damage domain overlaps the medium, from 10% down to 2.8V, below 0%: Avoid this one at all&amp;nbsp;costs.&lt;/p&gt;
&lt;p&gt;There is one final domain, at about 2.2V, where the cell starts venting hydrogen or swelling if it can&amp;rsquo;t. It might even burst. Once at this point, you might as well get a new battery, because the next charge will find that - permanently - around a quarter of the cell&amp;rsquo;s original capacity is gone. Left for a year or so to discharge and vent, you could well be looking at a majority of the capacity never coming&amp;nbsp;back.&lt;/p&gt;
&lt;p&gt;So basically just use your phone and don&amp;rsquo;t let it get too low, but other than that, charge it whenever it&amp;rsquo;s&amp;nbsp;convenient.&lt;/p&gt;</summary><category term="batteries"></category><category term="charging"></category></entry><entry><title>Sugar, spice, and everythingÂ nice</title><link href="https://fuzz.me.uk/powerpuff-girls/" rel="alternate"></link><updated>2014-02-27T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-02-27:powerpuff-girls/</id><summary type="html">&lt;p&gt;&lt;img alt="featureimage" class="img-responsive" src="/images/powerpuff-girls/powerpuff_intro.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;If the title doesn&amp;rsquo;t say anything to you then I think it&amp;rsquo;s best to skip this article; otherwise be warned that what follows contains things which could be classified as&amp;nbsp;spoilers.&lt;/p&gt;
&lt;h3 id="huh-what-is-this"&gt;Huh, what is&amp;nbsp;this?&lt;/h3&gt;
&lt;p&gt;I admit, I was a pretty big fan of the Powerpuff Girls back in the day. Everything in the show, from the graphic style up to the voices and music was just amazing, so when I got the opportunity to watch the Powerpuff Girls reboot special, &lt;a href="http://trakt.tv/show/the-powerpuff-girls/specials/episode/8"&gt;Dance Pantsed&lt;/a&gt;, I was taken&amp;nbsp;aback.&lt;/p&gt;
&lt;p&gt;Out with the cutesy graphics and in with an edgy-er, more post-generation X style; gone were also the old voices, which is weird considering it&amp;rsquo;s mostly the same cast, and a new interpretation of the theme song tried to weasel its way into my brain, and things just felt&amp;nbsp;wrong.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="something-missing"&gt;Something&amp;nbsp;missing&lt;/h3&gt;
&lt;p&gt;&lt;img alt="something missing" class="img-responsive" src="/images/powerpuff-girls/powerpuff_missing.png"/&gt;&lt;/p&gt;
&lt;p&gt;I guess that that feeling was due to the way the girls are now imagined; despite the animation/graphical style as a whole being amazing, the girls themselves felt off: the voices were strange at first, and they weren&amp;rsquo;t as cutesy and childlike as I remembered them, though I guess 5 years time is a lot when it comes to growing&amp;nbsp;up.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s even weirder is that all the other characters besides them, and maybe to a lesser extent Mojo Jojo, seemed closer to the originals than the girls. Now, this might be intentional, as the new series is aimed at introducing the show to a whole new generation, so making the protagonists hip to cater to that demografic, while retaining the feeling of the supporting cast to please us older fans could lead to a&amp;nbsp;double-win.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t get me wrong, Blossom, Bubbles and Buttercup are still great characters, it&amp;rsquo;s just that if you&amp;rsquo;re expecting the same vibe from them you might be a little&amp;nbsp;disappointed.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="come-play-with-us"&gt;Come play with&amp;nbsp;us!&lt;/h3&gt;
&lt;p&gt;&lt;img alt="play with us" class="img-responsive" src="/images/powerpuff-girls/powerpuff_come_play.png"/&gt;&lt;/p&gt;
&lt;p&gt;But as the episode went on, the fan service kept going and going, and I found myself enjoying the show just as much as the old ones. Gags from past series kept popping up, as well as amazingly well served references to other pieces of pop culture which made me actually laugh out&amp;nbsp;loud.&lt;/p&gt;
&lt;p&gt;And this was the point when it all became clear: if the show keeps going on like this it will have high chances of making a following among us old(er)&amp;nbsp;farts.&lt;/p&gt;
&lt;p&gt;Just like the old Cartoon Network series had layers upon layers (think here of Cow and Chicken for example), so does the new rendition of The Powerpuff Girls, you just need to keep your eyes open. Plus, the episode even manages to bring a surprise&amp;nbsp;ending!&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="its-all-about-the-love"&gt;It&amp;rsquo;s all about the&amp;nbsp;love&lt;/h3&gt;
&lt;p&gt;The truth is that despite whatever I, or you, might think of this reboot, it was clearly made with a lot of love, for both the characters and history of the show, as well as for us, the viewers, so go ahead and watch&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="all ends well" class="img-responsive" src="/images/powerpuff-girls/powerpuff_love.png"/&gt;&lt;/p&gt;</summary><category term="cartoons"></category><category term="animation"></category><category term="TV shows"></category></entry><entry><title>Get your metric prefix out of my baseÂ 2</title><link href="https://fuzz.me.uk/metric-hdd/" rel="alternate"></link><updated>2014-02-25T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-02-25:metric-hdd/</id><summary type="html">&lt;p&gt;&lt;img alt="featureimage" class="img-responsive" src="/images/metric-hdd/samsung_ssd.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I got myself a really nice Samsung &lt;span class="caps"&gt;SSD&lt;/span&gt; to replace the slow as hell &lt;span class="caps"&gt;5400RPM&lt;/span&gt; &lt;span class="caps"&gt;WD&lt;/span&gt; I had as my main drive in my laptop, and seeing the size got me to thinking about base&amp;nbsp;conversion.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s do conversions!
&lt;div class="container"&gt;
&lt;blockquote&gt;&amp;ldquo;Real hardware works in base two, hard drive marketing fluff in base 10. That&amp;rsquo;s all the context knowledge you need.&amp;rdquo;&lt;/blockquote&gt;
&lt;div class="reference"&gt;
&lt;strong&gt;Some people say&amp;hellip;&lt;/strong&gt;
&lt;p&gt;Now ain&amp;rsquo;t that cute? But it&amp;rsquo;s&amp;nbsp;wrong!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;There is nothing in a hard drive that requires or even encourages capacity to come in powers of two. Heck, they don&amp;rsquo;t even have to have an even number of platters, or of active surfaces. Nor a power-of-two related number of cylinders, or number of sectors per track. The latter figure in fact varies from outer cylinder to inner. I am currently looking at a &amp;ldquo;4 &lt;span class="caps"&gt;TB&lt;/span&gt;&amp;rdquo; hard drive, or rather a 4 &lt;span class="caps"&gt;TB&lt;/span&gt; partition, which occupies the entire drive. Windows reports this as 4,000,650,883,072 bytes. Which power of 1024 would you prefer be used? 3.63 TiB, or 3725.9&amp;nbsp;GiB?&lt;/p&gt;
&lt;p&gt;Yes, the sectors are 512, now 4096, bytes each, but there&amp;rsquo;s really nothing in a hard drive that requires that either. 512 bytes is a legacy of early virtual memory operating systems that ran on hardware that used 512 byte pages; making your sector size the same as your page size is convenient. And making that a power of two is convenient for building &lt;span class="caps"&gt;DMA&lt;/span&gt; controllers that talk to the hard drive; you don&amp;rsquo;t have to implement the low-order 9 bits of memory address or transfer&amp;nbsp;length.&lt;/p&gt;
&lt;p&gt;There are numerous other examples in hardware storage capacity. The most obvious is a tape cartridge. The tape is generally as long as it can be and still fit in the cart. Its capacity is whatever fits on that length of tape. An &lt;span class="caps"&gt;LTO&lt;/span&gt;-4 cart has a native capacity of a little more than 800,000,000,000 bytes. There is nothing about it that encourages a capacity that&amp;rsquo;s related to a power of 1024. Or of 2, for that&amp;nbsp;matter.&lt;/p&gt;
&lt;p&gt;The same is true of clock rates: A &lt;span class="caps"&gt;CPU&lt;/span&gt; clocked at &amp;ldquo;2 GHz&amp;rdquo; is clocked at 2,000,000,000 Hz. Really. A &lt;span class="caps"&gt;NIC&lt;/span&gt; running at &amp;ldquo;100 megabits/sec&amp;rdquo; is running at 100,000,000 bits/sec. And so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;But there&amp;rsquo;s also &lt;span class="caps"&gt;RAM&lt;/span&gt;!&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;RAM&lt;/span&gt; is different. Because of the way it&amp;rsquo;s addressed, it is very convenient that the chips (and therefore DIMMs) have sizes that can be expressed as binary numbers with a whole lot of trailing zeroes. If you had 28 bits of address coming into a &lt;span class="caps"&gt;DIMM&lt;/span&gt;, but the &lt;span class="caps"&gt;DIMM&lt;/span&gt; only implemented 250,000,000 bytes instead of 268,435,456, then something in the system would have to keep track of which combinations of address bits weren&amp;rsquo;t really implemented in that &lt;span class="caps"&gt;DIMM&lt;/span&gt;. As it is, it is easy for multiple DIMMs to be aggregated into a single array that presents one block of physically contiguous addresses to the &lt;span class="caps"&gt;CPU&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In this, &lt;span class="caps"&gt;RAM&lt;/span&gt; is the exception, not the rule. Darn little else in computing has any technical reason for coming in &amp;ldquo;binary megabytes&amp;rdquo; or &amp;ldquo;binary&amp;nbsp;gigabytes&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;I would also add that hard drives have always been marked in powers-of-1000 capacities, going back to the original &lt;span class="caps"&gt;IBM&lt;/span&gt; &lt;span class="caps"&gt;RAMAC&lt;/span&gt; drive (capacity of 5 million characters, having 50 surfaces with a capacity of 100,000 characters each). At that time memory was expressed in &amp;ldquo;&lt;span class="caps"&gt;KB&lt;/span&gt;&amp;rdquo;, which meant 1024 bytes, this being subtly distinguishable&amp;mdash;if everyone was paying attention and whoever prepared the written materials didn&amp;rsquo;t &amp;ldquo;correct&amp;rdquo; things&amp;mdash;from &amp;ldquo;kB&amp;rdquo;, which meant 1000 bytes, the way &lt;span class="caps"&gt;SI&lt;/span&gt;&amp;nbsp;intended.&lt;/p&gt;
&lt;p&gt;Unfortunately the &lt;span class="caps"&gt;SI&lt;/span&gt; prefixes for mega, giga, and tera were already uppercased; m already meant &amp;ldquo;milli&amp;rdquo;, etc. Nevertheless the main memory makers, who of course got to the &amp;ldquo;mega&amp;rdquo; range many many years after the hard drives did, just went ahead and co-opted the M prefix to mean 1024&amp;sup2; even though the hard drive makers were already using it in its proper &lt;span class="caps"&gt;SI&lt;/span&gt; meaning. And repeat for giga and tera. It&amp;rsquo;s the &lt;span class="caps"&gt;RAM&lt;/span&gt; makers who ignored the&amp;nbsp;standards.&lt;/p&gt;</summary><category term="storage"></category><category term="maths"></category></entry><entry><title>DebuggingÂ fun</title><link href="https://fuzz.me.uk/debugging-fun/" rel="alternate"></link><updated>2014-02-07T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-02-07:debugging-fun/</id><summary type="html">&lt;p&gt;There are days when the universe seems to conspire against you. Playing with an &lt;span class="caps"&gt;ARM&lt;/span&gt;-embedded Linux system I consistently managed to make it hang, which meant that I had to get my hard-hat and pickaxe and go&amp;nbsp;deeper.&lt;/p&gt;
&lt;p&gt;After reproducing it a couple of times, I see it&amp;rsquo;s not just a hang, but a complete &lt;span class="caps"&gt;CPU&lt;/span&gt; deadlock. To boot, the misbehaving &lt;span class="caps"&gt;CPU&lt;/span&gt; core literally falls off the &lt;span class="caps"&gt;JTAG&lt;/span&gt; bus rendering debugging impossible. Running &lt;span class="caps"&gt;SMP&lt;/span&gt; Linux both cores disappear, but if just one core is used the other remains accessible. Through it I can see memory, but still have no idea what happened to the core that went &lt;span class="caps"&gt;AWOL&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;So the next steps are&amp;nbsp;to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extract the most recently reported program counter value from the missing core from &amp;lsquo;icepick&amp;rsquo; device via &lt;span class="caps"&gt;JTAG&lt;/span&gt;. This is normally used for non-invasive profiling but in my case the (hopefully recent) snapshot is all the insight we could get into the &lt;span class="caps"&gt;CPU&lt;/span&gt;&amp;rsquo;s internal&amp;nbsp;state.&lt;/li&gt;
&lt;li&gt;get an execution trace, and convince the debugger &lt;span class="caps"&gt;NOT&lt;/span&gt; to look up corresponding memory addresses for disassembly on the target. Remember; the target is ignoring the debugger and it times-out &amp;mdash;&amp;nbsp;nastily.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, with a trace on file the flow&amp;nbsp;is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Core 0: programs a peripheral not to issue any more&amp;nbsp;interrupts&lt;/li&gt;
&lt;li&gt;Core 0: Proceeds to power down the&amp;nbsp;peripheral&lt;/li&gt;
&lt;li&gt;Core 1: Handles an interrupt from the device that was pending from before and was&amp;nbsp;delayed&lt;/li&gt;
&lt;li&gt;Core 1: Writes some registers on the device; issues an Instruction Synchronization Barrier (isb) to&amp;nbsp;sync.&lt;/li&gt;
&lt;li&gt;Device is unpowered - no ack/nack to the transaction on the memory bus. Apparently no timeout from the bus itself either&amp;nbsp;:(&lt;/li&gt;
&lt;li&gt;&lt;span class="caps"&gt;ISB&lt;/span&gt; never completes - core 1 is&amp;nbsp;deadlocked&lt;/li&gt;
&lt;li&gt;presumably, normal cache-coherence traffic propagates the deadlock to the other&amp;nbsp;core.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Objdumping the .ko module for the device, I notice that it fails to call the standard linux &lt;span class="caps"&gt;API&lt;/span&gt; disable_irq() which pretty much targets this exact race scenario: is &lt;span class="caps"&gt;SMP&lt;/span&gt; safe, clears any pending interrupts, notes to ignore future spurious&amp;nbsp;ones.&lt;/p&gt;
&lt;p&gt;Basically this whole headache can be fixed by updating the device driver by inserting the appropriate &lt;span class="caps"&gt;API&lt;/span&gt; calls to actually enable and disable interrupts&amp;nbsp;properly.&lt;/p&gt;
&lt;p&gt;Now, the problem is explaining why it works fine before integration with my stuff but not after; well, as I found out it&amp;rsquo;s because of my tendency to optimize everything: this race is normally dormant but I jiggled the timing of certain code paths just enough that it become possible for the chance of the race causing issues raises from &amp;lsquo;never reliably observed&amp;rsquo; to &amp;lsquo;always after several minutes of running test&amp;nbsp;app&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;Theory-crafting a scenario where the same race could potentially occur helped &amp;mdash; essentially an unfortunately timed high-priority &lt;span class="caps"&gt;IRQ&lt;/span&gt; that is long running (such as maybe a touchscreen event and corresponding i2c work) can keep the &lt;span class="caps"&gt;RQ&lt;/span&gt; in the pending queue long enough for the device to be turned off underneath&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;On the downside, I still have no idea why accessing the powered-down device didn&amp;rsquo;t result in an asynch external abort, like ususally happens when clocking or power-domain code goes wrong. Could be a chipset bug and the controller for whatever memory bus this device hangs off didn&amp;rsquo;t timeout. That wouldn&amp;rsquo;t have solved the issue, but at least we could have traced back from a very visible linux kernel&amp;nbsp;panic.&lt;/p&gt;
&lt;p&gt;And people ask me why I love managed&amp;nbsp;environments&amp;hellip;&lt;/p&gt;</summary><category term="arm"></category><category term="linux"></category></entry><entry><title>Get your Google out of myÂ Nest!</title><link href="https://fuzz.me.uk/google-nest-fears/" rel="alternate"></link><updated>2014-01-15T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-01-15:google-nest-fears/</id><summary type="html">&lt;p&gt;As you might or might not know, Google is buying Nest (or better said, the company and people behind the Nest product line), and alongside those $3.2 billion that Google is paying came a flood of critique and&amp;nbsp;anger.&lt;/p&gt;
&lt;p&gt;The thing that makes the Nest products &lt;em&gt;&amp;ldquo;amazing&amp;rdquo;&lt;/em&gt; is that they&amp;rsquo;re one of the first consumer oriented products that go hand in with with the &lt;em&gt;internet of things&lt;/em&gt; moniker that seems to be all the rage; see, their learning thermostat and smart smoke detector are connected devices, which means that they gather data and monitor your usage (and presence) to automatically make things better, like heating your house when you&amp;rsquo;re around but cooling it when you&amp;rsquo;re not, so you end up using less&amp;nbsp;power.&lt;/p&gt;
&lt;p&gt;Now, all was fine and dandy when that data went to Nest, but now that Google has acquired them it&amp;rsquo;s time to get our&amp;nbsp;pitchforks!&lt;/p&gt;
&lt;hr/&gt;
&lt;blockquote&gt;
&lt;p&gt;So people are ok with Google creating a sophisticated algorithm of their life, utilizing &lt;span class="caps"&gt;GPS&lt;/span&gt; and other tracking technologies (which of course will be used to create customized ads to sell the user products and services) to save them a few bucks on their power bill&amp;hellip;yet people are paranoid about the &lt;span class="caps"&gt;NSA&lt;/span&gt;. Does not&amp;nbsp;compute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If the &lt;span class="caps"&gt;NSA&lt;/span&gt; tracking improved my life in an actual measurable way then I&amp;rsquo;d reassess my views on &lt;span class="caps"&gt;NSA&lt;/span&gt; tracking; as it stands now, I&amp;rsquo;m ok with the exchange between the personal information I chose to share with Google and the services they&amp;nbsp;provide.&lt;/p&gt;
&lt;p&gt;And here is the major flaw of your analogy: I am in charge of what to share with Google compared to what I share with the &lt;span class="caps"&gt;NSA&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But the &lt;span class="caps"&gt;NSA&lt;/span&gt; as part of the &lt;span class="caps"&gt;US&lt;/span&gt; Government is ultimately accountable to its citizens, whereas Google is only accountable to its&amp;nbsp;shareholders.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s nonsense. Google has to obey the law in all the countries it operates in, therefore it is accountable to a lot more people and bodies than only the shareholders, and that is a hell of a lot more than the &lt;span class="caps"&gt;NSA&lt;/span&gt; is accountable to, which appears to be basically&amp;nbsp;nobody.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&amp;rsquo;t you know that when it comes to Google you &lt;strong&gt;are&lt;/strong&gt; the product? They&amp;rsquo;ll just sell that data and make a pretty&amp;nbsp;penny!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is a really shitty if not false way of putting it. Google makes ~50% of its revenue off of ads it sells on its own sites: ~35% off of network ads, 8% off other, and 7% or so running&amp;nbsp;Motorola.&lt;/p&gt;
&lt;p&gt;It does not &amp;ldquo;sell&amp;rdquo; user data, it sells ads, primarily targeting users of Google&amp;rsquo;s services but also targeting people just browsing the internet in&amp;nbsp;general.&lt;/p&gt;
&lt;p&gt;It sells ad &lt;em&gt;space&lt;/em&gt;, mainly, much like a publication, and it sells them in a similar manner to how publications do. Sports pages in the newspaper don&amp;rsquo;t have feminine hygiene products among the ads, for instance. Google does the same for companies by targeting the ads they want to buy toward people and places that fit the&amp;nbsp;demographics.&lt;/p&gt;
&lt;p&gt;The distinction there is that Google retains the data it has been given or inferred about its users (all of which can be viewed on their Ad Preferences site). The ad tools Google has allows advertisers to choose demographics, but they don&amp;rsquo;t get access to raw user data ever. It&amp;rsquo;s not like going out and buying a mailing list, the advertisers get absolutely no personally identifiable information from their ad&amp;nbsp;viewers/clickers.&lt;/p&gt;
&lt;p&gt;Advertising company: yes. Data brokerage: no. The latter claim would be far more fairly made against Facebook or any of the other social networking companies than against&amp;nbsp;Google.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nest tracks! It has a microphone, to detect whether people are home, how many, etc. I do not worry that it&amp;rsquo;s a bug or anything, just that I do not feel right about G knowing the comings and&amp;nbsp;goings.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How confident are you that they don&amp;rsquo;t already have this information? Got a smartphone and home wifi? Any apps at all that use a Google&amp;nbsp;login?&lt;/p&gt;
&lt;p&gt;Realistically, more than a few companies know when the average American/European enters or leaves their home. A simple proximity sensor on a thermostat which can&amp;rsquo;t even distinguish individual people is basically irrelevant in that it provides negligible new&amp;nbsp;information.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;I&amp;rsquo;ve never quite understood what the scariness is about a company targeting me with good ads. And, especially as it&amp;rsquo;s a voluntary arrangement, I don&amp;rsquo;t see what the beef is. Google is actually far ahead here, providing services to let you pull all your data from them, as well as ask for all sorts of collected data to be&amp;nbsp;deleted.&lt;/p&gt;
&lt;p&gt;Like with any company I do business with, there&amp;rsquo;s a mutually beneficial relationship happening. I provide Google with something they find valuable and I&amp;rsquo;m ok with giving, and they provide me with someone I find valuable and they&amp;rsquo;re willing to&amp;nbsp;give.&lt;/p&gt;
&lt;p&gt;In this case, it&amp;rsquo;s valuable services in exchange for tailored ads. Try as a might&amp;hellip; I simply can&amp;rsquo;t find anything to be upset about&amp;nbsp;there.&lt;/p&gt;
&lt;p&gt;And, to be frank, this is how Google has operated literally for the last decade. And it&amp;rsquo;s never been a secret. Search, Mail, etc. have been open and upfront about the exchange of a quality service for ads. Google literally has billions of customers and handles billions of requests &lt;em&gt;a day&lt;/em&gt;. Clearly this simply is not, and has never been an issue. They have shown that they can handle the data responsibly, and customers have shown that they&amp;rsquo;re ok with the&amp;nbsp;balance.&lt;/p&gt;</summary><category term="google"></category><category term="privacy"></category><category term="nest"></category><category term="internet of things"></category></entry><entry><title>git and hg - the next holyÂ war?</title><link href="https://fuzz.me.uk/git-vs-hg/" rel="alternate"></link><updated>2014-01-12T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2014-01-12:git-vs-hg/</id><summary type="html">&lt;p&gt;When it comes to version control systems the darling child right now is &lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt;, and for good reasons: it&amp;rsquo;s fast, it&amp;rsquo;s easy to use (at least compared to the older version control systems out there) and allows for a real fast development process with lots of branching and relatively painless&amp;nbsp;merging.&lt;/p&gt;
&lt;p&gt;One of the downsides of git though is the fact that, until recently, it was relative hard to get running on Windows; and this is where Mercurial (hg from now on) came in: being written in Python it was easier to install on non-*nix systems as well as providing most of the same benefits as git does when comparing to older &lt;span class="caps"&gt;DVCS&lt;/span&gt;&amp;rsquo; out&amp;nbsp;there.&lt;/p&gt;
&lt;p&gt;The problem with Hg though is that it didn&amp;rsquo;t have the word of mouth git did (I mean, the Linux kernel uses git as its distributed version control system), was a bit&amp;nbsp;slower.&lt;/p&gt;
&lt;p&gt;An even larger issue is that git owes a lot of its popularity to &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;, which made collaborating on open source projects both easier and, more importantly cool. See, there is a Hg version of GitHub, &lt;a href="https://bitbucket.org/"&gt;BitBucket&lt;/a&gt;, but it has one major downside: it&amp;rsquo;s so much slower compared to GitHub. Part of this is due to Mercurial itself, but part of it is due to the way BitBucket itself is built; granted, the devs of BitBucket made a lot of changes to improve the speed of the website, and now it&amp;rsquo;s mostly on par with GitHub, but it&amp;rsquo;s a bit too&amp;nbsp;late.&lt;/p&gt;
&lt;p&gt;git now has a lot of mindshare. Pointy Haired Boss types have heard of it, so when an enterprise vendor comes along mentioning Git, it tickles their fancy, because PHBs often know that Git is &amp;ldquo;better than svn&amp;rdquo;&amp;mdash;which it is&amp;mdash;which is an automatic plus. If you present hg to a &lt;span class="caps"&gt;PHB&lt;/span&gt;, you&amp;rsquo;re going to get a blank stare. If Mercurial will ever see market penetration, it will be in orgs that haven&amp;rsquo;t calcified to the point where PHBs are a&amp;nbsp;thing.&lt;/p&gt;
&lt;p&gt;And it seems that git is extending. Eric Raymond posted &lt;a href="https://lists.gnu.org/archive/html/emacs-devel/2014-01/msg00005.html"&gt;this&lt;/a&gt; to the emacs-devel (Emacs uses bzr for source control) list, which&amp;nbsp;includes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git won the mindshare war. I regret this - I would have preferred Mercurial, but it too is not looking real healthy these days. I have made my peace with git&amp;rsquo;s victory and switched. I urge the Emacs project to do&amp;nbsp;likewise.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This mindshare also translates into better Googleability, 3rd party tools, books and so on, which further distances git from&amp;nbsp;Hg.&lt;/p&gt;
&lt;p&gt;One major and often neglected thing Mercurial does have over git though is the fact that is much easier to extend due to it being written in Python as opposed to C, and this might be exactly what might save Hg or, who knows, even push it in front of&amp;nbsp;git.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://code.facebook.com/posts/218678814984400/scaling-mercurial-at-facebook/"&gt;Facebook recently switched to Mercurial&lt;/a&gt; for its code repositories precisely because of this ease of improving Hg in-house, which is the largest win Hg got in a while, and hopefully this trend will go&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Granted, git could be improved as well, but writing C is usually requires more attention than Python and, especially when it comes to web services, tends to be harder to deploy and keep&amp;nbsp;working.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;What needs to be remembered though is that git and Mercurial aren&amp;rsquo;t the only contenders in town, and that there is a lot of legacy and entrenched &lt;span class="caps"&gt;DCVS&lt;/span&gt;&amp;rsquo; out&amp;nbsp;there.&lt;/p&gt;
&lt;p&gt;Based on data from &lt;a href="http://www.ohloh.net"&gt;Ohloh&lt;/a&gt;, a website which indexes a large number of open source projects, the split between code versioning systems is as&amp;nbsp;follows:&lt;/p&gt;
&lt;div class="compare_repositories"&gt;
&lt;div class="chart " data-highcharts-chart="0" datasrc="/repositories/chart" id="" style=" height:480px;"&gt;&lt;div class="highcharts-container" id="highcharts-0" style='position: relative; overflow: hidden; width: 780px; height: 480px; text-align: left; line-height: normal; z-index: 0; font-family: "Lucida Grande","Lucida Sans Unicode",Verdana,Arial,Helvetica,sans-serif; font-size: 12px; left: 0px; top: 0.850006px; cursor: auto;'&gt;&lt;svg height="480" version="1.1" width="780" xmlns="http://www.w3.org/2000/svg"&gt;&lt;desc&gt;Created with Highstock 1.3.0&lt;/desc&gt;&lt;defs&gt;&lt;clippath id="highcharts-1"&gt;&lt;rect fill="none" height="480" rx="0" ry="0" width="9999" x="0" y="0"&gt;&lt;/rect&gt;&lt;/clippath&gt;&lt;clippath id="highcharts-2"&gt;&lt;rect fill="none" height="455" width="760" x="0" y="0"&gt;&lt;/rect&gt;&lt;/clippath&gt;&lt;/defs&gt;&lt;rect fill="#FFFFFF" height="480" rx="5" ry="5" width="780" x="0" y="0"&gt;&lt;/rect&gt;&lt;g class="highcharts-series-group" zindex="3"&gt;&lt;g class="highcharts-series highcharts-tracker" clip-path="url(#highcharts-2)" style="cursor:pointer;" transform="translate(10,10)" visibility="visible" zindex="0.1"&gt;&lt;path d="M 398.91056570582685 12 C 393.91056570582685 12 393.39654942108484 20.43082288909674 392.68977702956477 31.408093623964536 L 391.9830046380447 42.385364358832334" fill="none" stroke="#2f7ed8" stroke-width="1" visibility="visible"&gt;&lt;/path&gt;&lt;path d="M 484.0757286120067 36 C 479.0757286120067 36 469.241324681223 40.063708460550174 464.5331492783767 50.00519146742762 L 459.8249738755304 59.94667447430507" fill="none" stroke="#0d233a" stroke-width="1" visibility="visible"&gt;&lt;/path&gt;&lt;path d="M 584.5779244121547 312.4100833472132 C 579.5779244121547 312.4100833472132 572.2032205077795 309.3094798055148 562.0630026392636 305.04614993567947 L 551.9227847707476 300.78282006584413" fill="none" stroke="#8bbc21" stroke-width="1" visibility="visible"&gt;&lt;/path&gt;&lt;path d="M 347.5346133513318 443.25079170107654 C 352.5346133513318 443.25079170107654 353.5495006177952 435.3154275735541 354.9449706091825 424.4043018982107 L 356.3404406005698 413.4931762228673" fill="none" stroke="#910000" stroke-width="1" visibility="visible"&gt;&lt;/path&gt;&lt;path d="M 159.73603090446304 205.39862321774487 C 164.73603090446304 205.39862321774487 172.69035770706952 206.25225376859032 183.62755706065337 207.42599577600282 L 194.56475641423722 208.59973778341532" fill="none" stroke="#1aadce" stroke-width="1" visibility="visible"&gt;&lt;/path&gt;&lt;path d="M 379.96201494751085 42.00000386826869 A 186.5 186.5 0 0 1 403.7691921079165 43.52087818746418 L 380 228.5 A 0 0 0 0 0 380 228.5 Z" fill="#2f7ed8" stroke="#FFFFFF" stroke-linejoin="round" stroke-width="1"&gt;&lt;/path&gt;&lt;path d="M 403.9541593143041 43.54473986516379 A 186.5 186.5 0 0 1 507.7786706209405 92.65132928752965 L 380 228.5 A 0 0 0 0 0 380 228.5 Z" fill="#0d233a" stroke="#FFFFFF" stroke-linejoin="round" stroke-width="1"&gt;&lt;/path&gt;&lt;path d="M 507.9144553796815 92.77917586118383 A 186.5 186.5 0 0 1 372.6903876743378 414.8566998195893 L 380 228.5 A 0 0 0 0 0 380 228.5 Z" fill="#8bbc21" stroke="#FFFFFF" stroke-linejoin="round" stroke-width="1"&gt;&lt;/path&gt;&lt;path d="M 372.5040346603835 414.84929703013984 A 186.5 186.5 0 0 1 340.53807033688184 410.77727808825523 L 380 228.5 A 0 0 0 0 0 380 228.5 Z" fill="#910000" stroke="#FFFFFF" stroke-linejoin="round" stroke-width="1"&gt;&lt;/path&gt;&lt;path d="M 340.35581282013635 410.73772502653765 A 186.5 186.5 0 0 1 379.74095524154967 42.000179904073036 L 380 228.5 A 0 0 0 0 0 380 228.5 Z" fill="#1aadce" stroke="#FFFFFF" stroke-linejoin="round" stroke-width="1"&gt;&lt;/path&gt;&lt;/g&gt;&lt;g class="highcharts-markers" transform="translate(10,10)" visibility="visible" zindex="0.1"&gt;&lt;/g&gt;&lt;/g&gt;&lt;g class="highcharts-data-labels highcharts-tracker" style="cursor:pointer;" transform="translate(10,10)" visibility="visible" zindex="6"&gt;&lt;g style="cursor:default;" transform="translate(404,2)" visibility="visible" zindex="1"&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:11px;color:#000000;line-height:14px;fill:#000000;' x="3" y="15" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="3"&gt;Bazaar&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 2%&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g style="cursor:default;" transform="translate(489,26)" visibility="visible" zindex="1"&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:11px;color:#000000;line-height:14px;fill:#000000;' x="3" y="15" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="3"&gt;&lt;span class="caps"&gt;CVS&lt;/span&gt;&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 9%&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g style="cursor:default;" transform="translate(590,302)" visibility="visible" zindex="1"&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:11px;color:#000000;line-height:14px;fill:#000000;' x="3" y="15" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="3"&gt;Git&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 38%&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g style="cursor:default;" transform="translate(267,433)" visibility="visible" zindex="1"&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:11px;color:#000000;line-height:14px;fill:#000000;' x="3" y="15" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="3"&gt;Mercurial&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 2%&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;g style="cursor:default;" transform="translate(63,195)" visibility="visible" zindex="1"&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:11px;color:#000000;line-height:14px;fill:#000000;' x="3" y="15" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="3"&gt;Subversion&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 46%&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/g&gt;&lt;g class="highcharts-legend" zindex="7"&gt;&lt;rect fill="none" height="7" rx="5" ry="5" stroke="#909090" stroke-width="1" visibility="hidden" width="7" x="0.5" y="0.5"&gt;&lt;/rect&gt;&lt;g clip-path="url(#highcharts-1)" zindex="1"&gt;&lt;g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;g class="highcharts-tooltip" opacity="0" style="cursor:default;padding:0;white-space:nowrap;" transform="translate(181,276)" visibility="hidden" zindex="8"&gt;&lt;rect fill="none" fill-opacity="0.85" height="36" isshadow="true" rx="3" ry="3" stroke="black" stroke-opacity="0.049999999999999996" stroke-width="5" transform="translate(1, 1)" width="173" x="0.5" y="0.5"&gt;&lt;/rect&gt;&lt;rect fill="none" fill-opacity="0.85" height="36" isshadow="true" rx="3" ry="3" stroke="black" stroke-opacity="0.09999999999999999" stroke-width="3" transform="translate(1, 1)" width="173" x="0.5" y="0.5"&gt;&lt;/rect&gt;&lt;rect fill="none" fill-opacity="0.85" height="36" isshadow="true" rx="3" ry="3" stroke="black" stroke-opacity="0.15" stroke-width="1" transform="translate(1, 1)" width="173" x="0.5" y="0.5"&gt;&lt;/rect&gt;&lt;rect anchorx="186.85602718729723" anchory="20.50312042236328" fill="rgb(255,255,255)" fill-opacity="0.85" height="36" rx="3" ry="3" stroke="#1aadce" stroke-width="1" width="173" x="0.5" y="0.5"&gt;&lt;/rect&gt;&lt;text style='font-family:"Lucida Grande", "Lucida Sans Unicode", Verdana, Arial, Helvetica, sans-serif;font-size:12px;color:#333333;fill:#333333;' x="8" y="21" zindex="1"&gt;&lt;tspan style="font-weight:bold" x="8"&gt;Subversion&lt;/tspan&gt;&lt;tspan dx="0"&gt;: 292,340 (46%)&lt;/tspan&gt;&lt;/text&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Google Trends also shows how the popularity of each system changed over&amp;nbsp;time:&lt;/p&gt;
&lt;script src="//www.google.com/trends/embed.js?hl=en-US&amp;amp;q=/m/05vqwg,+/m/08441_&amp;amp;cmpt=q&amp;amp;content=1&amp;amp;cid=TIMESERIES_GRAPH_AVERAGES_CHART&amp;amp;export=5&amp;amp;w=600&amp;amp;h=330" type="text/javascript"&gt;&lt;/script&gt;
&lt;p&gt;This might look bad for Mercurial, but we need to remember that git started from a similar percentage, so all is not&amp;nbsp;lost.&lt;/p&gt;
&lt;p&gt;In the end though, git vs Mercurial is the &lt;span class="caps"&gt;DVCS&lt;/span&gt; version of vi vs emacs, Linux vs &lt;span class="caps"&gt;BSD&lt;/span&gt;, etc. They both have essentially the same functionality and a typical team would do fine with&amp;nbsp;either.&lt;/p&gt;</summary><category term="git"></category><category term="scm"></category><category term="hg"></category><category term="GitHub"></category><category term="BitBucket"></category><category term="DVCS"></category></entry><entry><title>Disqus andÂ privacy</title><link href="https://fuzz.me.uk/disqus-privacy/" rel="alternate"></link><updated>2013-12-10T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-12-10:disqus-privacy/</id><summary type="html">&lt;p&gt;Remember when I said that I prefer Google+ commenting to other systems because it tries to enforce real names, and thus less trolling and better thought of posts, than other&amp;nbsp;platforms?&lt;/p&gt;
&lt;p&gt;Well, it looks like Disqus, which is used by around 50 million users world wide and 750 000 media sites and blogs, and which allows users to use whatever nickname they want, has been hacked - though I guess hack is not exactly the proper term to&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;The Swedish company Resarchgruppen has cracked the Disqus commenting system, enabling them to identify Disqus users by their e-mail addresses. The problem is that this hack relies on the public &lt;span class="caps"&gt;API&lt;/span&gt; to extract &lt;span class="caps"&gt;MD5&lt;/span&gt; hashes of user e-mail&amp;nbsp;addresses.&lt;/p&gt;
&lt;p&gt;For example, registering to use the &lt;span class="caps"&gt;API&lt;/span&gt; and then replacing the api_secret with a valid one, then running the following command would give you the &lt;span class="caps"&gt;MD5&lt;/span&gt; hash of my Disqus associated email&amp;nbsp;address.&lt;/p&gt;
&lt;!-- language: bash --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl 'https://disqus.com/api/3.0/users/details.json?user=username:fuzzmz&amp;amp;api_secret=REPLACE_ME'
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;An attacker can then match those hashes to email databases, like those from the recent Adobe hack (over 150 million email addresses) thus revealing the true identity of the&amp;nbsp;user.&lt;/p&gt;
&lt;p&gt;Now, true, this is against the Disqus &lt;span class="caps"&gt;TOS&lt;/span&gt; for the &lt;span class="caps"&gt;API&lt;/span&gt;, specifically the parts regarding &lt;em&gt;collecting or harvesting any personally identifiable information&lt;/em&gt;, but let&amp;rsquo;s be honest here, which hacker would really care about&amp;nbsp;that?&lt;/p&gt;</summary><category term="privacy"></category><category term="hacking"></category><category term="social"></category></entry><entry><title>SmartÂ animations</title><link href="https://fuzz.me.uk/smart-animations/" rel="alternate"></link><updated>2013-11-28T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-11-28:smart-animations/</id><summary type="html">&lt;p&gt;&lt;img alt="Android animation speed" class="img-responsive" src="/images/smart-animations/animation_scale.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;We spend more and more time on mobile devices which means that a lot of our time is devoted to looking at a screen and waiting for something to happen. The problem is that I feel like we&amp;rsquo;re spending too much time on watching animations instead of actually getting to our content or results&amp;nbsp;faster.&lt;/p&gt;
&lt;p&gt;This article was spawned based on a talk with a friend who recently upgraded to iOS 7 and was complaining about everything feeling out of sync, or slower if you will, coming from older versions of the operating system, because animations now take longer overall despite them being fluid and psyhicsy and&amp;nbsp;stuff.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sure how iOS handles that as I don&amp;rsquo;t own any Apple products nor have I had enough time to play with one to form my own opinion, but the same thing is valid on Android, and to some extent applies to desktop platforms as&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;On Android you can set the animation and transition speeds globally; you want them faster, make them faster, and so on, but why should you have to do that? Especially considering that they&amp;rsquo;re hidden away under developer settings. Wouldn&amp;rsquo;t it be nice if applications had the option to intelligently determine how fast you want things to&amp;nbsp;be?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m imagining installing a content reading app (be it &lt;span class="caps"&gt;RSS&lt;/span&gt; feeds, books, tweets, whatever) which has gorgeous animations and transitions. Sure, it&amp;rsquo;s awesome at first to look at just how beautiful that page turn is, or that new pane swings in from the side, but as I start using the app more frequently I want to get to my content faster, which means that I want to spend as little time on visual bling as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;Why not have an application reduce or increase the time a transition takes, or the &amp;ldquo;springiness&amp;rdquo; of it based on how long you&amp;rsquo;ve used the app for? Say it has the system default settings for the first 5 hours of total use, and then starts slowly ramping up the speed so you get to do things faster? Or it notices that you haven&amp;rsquo;t used the app for some time and reduces the speed of things so you can get acclimated to it&amp;nbsp;again?&lt;/p&gt;
&lt;p&gt;This might seem a bit counter-intuitive - &amp;ldquo;wouldn&amp;rsquo;t varying the graphical speed make me miss targets?&amp;rdquo;, but I think that if the speed-curve is properly done then you wouldn&amp;rsquo;t even notice. In the end, as we get more proficient with a tool we can use it faster (think going from using a &lt;span class="caps"&gt;GUI&lt;/span&gt; to using keyboard shortcuts on a regular &lt;span class="caps"&gt;OS&lt;/span&gt;), so why not make the app adaptable so that it meets us half-way based on our usage&amp;nbsp;patterns?&lt;/p&gt;</summary><category term="mobile"></category><category term="usage patterns"></category><category term="usability"></category></entry><entry><title>Google+ comment numbers inÂ Ghost</title><link href="https://fuzz.me.uk/gplus-comment-number-ghost/" rel="alternate"></link><updated>2013-11-11T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-11-11:gplus-comment-number-ghost/</id><summary type="html">&lt;p&gt;As you might now, this site is running on the &lt;a href="https://ghost.org/"&gt;Ghost&lt;/a&gt; blogging platform. One of the &amp;ldquo;disadvantages&amp;rdquo; of using Ghost is that it doesn&amp;rsquo;t include a native commenting&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;Now, the reason why I used quote marks when saying disadvantage is because this forces you to make your own mind about what tool you want to use to power your comments instead of relying on what the platform&amp;nbsp;provides.&lt;/p&gt;
&lt;p&gt;Me, being the Google fanboy that I am decided to go with using Google+ for the commenting system, thanks to the great guide provided by &lt;a href="http://bioselemental.com/ghost-adding-google-comments/"&gt;Bios Elemental&lt;/a&gt; and tweaks by &lt;a href="http://seo-michael.co.uk/add-google-plus-comments-to-ghost/"&gt;&lt;span class="caps"&gt;SEO&lt;/span&gt; Michael&lt;/a&gt;. One thing was missing though, and that thing was a way to display the number of comments a post&amp;nbsp;has.&lt;/p&gt;
&lt;p&gt;This turns out to be not such a hard thing to implement, though it requires some more steps than just modifying the theme&amp;nbsp;template.&lt;/p&gt;
&lt;h3 id="1-linking-your-google-profile-to-the-content"&gt;1. Linking your Google+ profile to the&amp;nbsp;content&lt;/h3&gt;
&lt;p&gt;The first step we need to take is to link our Google+ profile to the website we blog&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;To do this we first need to modify our theme so that Google knows that we&amp;rsquo;re the&amp;nbsp;authors.&lt;/p&gt;
&lt;p&gt;To do this we need to add &lt;code&gt;&amp;lt;a href="[profile_url]?rel=author"&amp;gt;Google&amp;lt;/a&amp;gt;&lt;/code&gt; somewhere in our theme, replacing &lt;code&gt;[profile_url]&lt;/code&gt; with our Google+ profile &lt;span class="caps"&gt;ID&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;I chose to make this change in the footer of the website which is found in the &lt;code&gt;default.hbs&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For example, this is how my footer section looks like, with the linking code in the copyright&amp;nbsp;section:&lt;/p&gt;
&lt;script src="https://gist.github.com/fuzzmz/7420741.js"&gt;&lt;/script&gt;
&lt;p&gt;After making this change you need&amp;nbsp;to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://profiles.google.com/me/about"&gt;Sign in to your Google+&amp;nbsp;profile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Edit the links section (just click edit on any category and go to the links&amp;nbsp;tab)&lt;/li&gt;
&lt;li&gt;Under &lt;em&gt;Contributor to&lt;/em&gt; click on &lt;em&gt;Add custom link&lt;/em&gt; add the link to your blog and save the&amp;nbsp;changes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Google+ contributor link" class="img-responsive" src="/images/gplus-comment-number-ghost/gcontrib.png"/&gt;&lt;/p&gt;
&lt;p&gt;To check that your content is now linked to Google+ you can go to the &lt;a href="http://www.google.com/webmasters/tools/richsnippets"&gt;structured data testing tool&lt;/a&gt; and check your &lt;span class="caps"&gt;URL&lt;/span&gt;; if everything is working correctly you should have a message informing you that &lt;em&gt;Authorship is working for this&amp;nbsp;webpage.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Authorship is working" class="img-responsive" src="/images/gplus-comment-number-ghost/autorship.png"/&gt;&lt;/p&gt;
&lt;h3 id="2-insert-the-comments-counter"&gt;2. Insert the comments&amp;nbsp;counter&lt;/h3&gt;
&lt;p&gt;Now that we have our blog and Google+ account linked up, it&amp;rsquo;s time to actually display the number of comments for each&amp;nbsp;article.&lt;/p&gt;
&lt;p&gt;To do this we need to edit the &lt;code&gt;index.hbs&lt;/code&gt; file which is responsible with displaying our, well, index&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;I think that the best location to display the number a comments an article has is right next to the article title, so we&amp;rsquo;ll modify the &lt;code&gt;post-title&lt;/code&gt; class to include our counter by adding the following code (this can be used wherever you want the counter to&amp;nbsp;appear):&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;div class="g-commentcount" data-href="{{@blog.url}}{{url}}"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For example, my article class now looks like this (note the counter code added to the post-title&amp;nbsp;class):&lt;/p&gt;
&lt;script src="https://gist.github.com/fuzzmz/7421039.js"&gt;&lt;/script&gt;
&lt;p&gt;And that&amp;rsquo;s it, restart Ghost and you&amp;rsquo;re good to&amp;nbsp;go!&lt;/p&gt;</summary><category term="google"></category><category term="ghost"></category><category term="social"></category></entry><entry><title>InÂ transit</title><link href="https://fuzz.me.uk/in-transit/" rel="alternate"></link><updated>2013-11-10T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-11-10:in-transit/</id><summary type="html">&lt;p&gt;I enjoy flying. I like spending time in airports, going through security, watching the people wait and wonder about where they&amp;rsquo;re headed. I even have a sort of masochistic love for planes despite most of them having cramped&amp;nbsp;seats.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lift-off" class="img-responsive" src="/images/in-transit/flight_grid-1.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;I get bored easily unless something really piques my interest, I might even have a short attention span, I ramble. I try, I do my best to keep interested in things, in people, but at times I just have to fake it. I guess I should make all my friends read &lt;a href="http://randsinrepose.com/archives/the-nerd-handbook/"&gt;The Nerd Handbook&lt;/a&gt; to understand that me being distant at times doesn&amp;rsquo;t mean I don&amp;rsquo;t care, it just means that I need a break from, well, them&amp;nbsp;:)&lt;/p&gt;
&lt;p&gt;I guess that I&amp;rsquo;m always searching for something, not really something new, as I find myself revisiting people, places, thoughts more often than I should, but something to keep me going, to keep me out of my own&amp;nbsp;head.&lt;/p&gt;
&lt;p&gt;Can you give yourself Stockholm Syndrome? Because that&amp;rsquo;s how I feel when spending too much time in the same&amp;nbsp;mood.&lt;/p&gt;
&lt;p&gt;I guess I&amp;rsquo;m just stuck in&amp;nbsp;transit.&lt;/p&gt;</summary><category term="rants"></category><category term="self"></category></entry><entry><title>Short on NexusÂ 5</title><link href="https://fuzz.me.uk/short-nexus5/" rel="alternate"></link><updated>2013-11-07T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-11-07:short-nexus5/</id><summary type="html">&lt;p&gt;I&amp;rsquo;ve been playing a bit with the Nexus5 , and coming from a Galaxy Nexus this thing is blazing fast! Google Now starts instantly, apps work great and haven&amp;rsquo;t seen any lag so far, not even when installing&amp;nbsp;apps.&lt;/p&gt;
&lt;p&gt;On the other hand, as I was expecting, I&amp;rsquo;m missing things present in Cyanogenmod , such as custom profiles (default, home, work, etc.), customizing the notification &lt;span class="caps"&gt;LED&lt;/span&gt; straight from the &lt;span class="caps"&gt;OS&lt;/span&gt; and other small things such as the advanced power menu with reboot, screenshot and so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Oh, and right now the Xposed Framework isn&amp;rsquo;t working on KitKat , so if you were using it and Greenify to both hibernate apps but still get push notifications for the ones using &lt;span class="caps"&gt;GCM&lt;/span&gt;, you&amp;rsquo;re out of&amp;nbsp;luck.&lt;/p&gt;
&lt;p&gt;Going to see how the battery holds, but I&amp;rsquo;m sure that once Xposed gets going things will be even&amp;nbsp;better.&lt;/p&gt;</summary><category term="google"></category><category term="android"></category><category term="nexus"></category></entry><entry><title>*poof* there goes myÂ data</title><link href="https://fuzz.me.uk/poof-there-goes-my-data/" rel="alternate"></link><updated>2013-10-25T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-10-25:poof-there-goes-my-data/</id><summary type="html">&lt;p&gt;I was recently playing around with some Linux VMs for work and from time to time I&amp;rsquo;d end up with the &lt;span class="caps"&gt;VM&lt;/span&gt;&amp;nbsp;restarting.&lt;/p&gt;
&lt;p&gt;This in itself was annyoing, but the thing that was really interesting was that some text files weren&amp;rsquo;t modified despite closing the editor some time before the restarts&amp;nbsp;happened.&lt;/p&gt;
&lt;p&gt;With this in mind (and blaming myself for being too lazy to install vim and instead used nano) I went ahead and did an strace. What did I find? Saving a file and exiting nano entirely doesn&amp;rsquo;t normally imply an fsync. This means that the file isn&amp;rsquo;t instantly written to disk, but instead it&amp;rsquo;s deferred until the &lt;span class="caps"&gt;OS&lt;/span&gt; does it&amp;rsquo;s clock fsync, which just happens was around the same length of time between me saving the file and the guest &lt;span class="caps"&gt;OS&lt;/span&gt;&amp;nbsp;restarting.&lt;/p&gt;
&lt;p&gt;This startx after ^x to exit for a new file named &amp;ldquo;test&amp;rdquo; that contains the text&amp;nbsp;&amp;ldquo;hello\n&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Preparing to&amp;nbsp;save&lt;/p&gt;
&lt;!-- language: bash --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;write(1, "\r\33(B\33[0;7mFile Name to Write: te"..., 313) = 313
rt_sigaction(SIGTSTP, {SIG_IGN, [], SA_RESTORER, 0x397b635a90}, NULL, 8) = 0
read(0, "\r", 1)                        = 1
rt_sigprocmask(SIG_BLOCK, [WINCH], NULL, 8) = 0
rt_sigprocmask(SIG_UNBLOCK, [WINCH], NULL, 8) = 0
select(1, [0], NULL, NULL, {0, 0})      = 0 (Timeout)
getcwd("/home/fuzzmz", 4097)            = 13
stat("test", 0x7fffabd65d00)            = -1 ENOENT (No such file or directory)
getcwd("/home/fuzzmz", 4097)            = 13
stat("test", 0x7fffabd65d00)            = -1 ENOENT (No such file or directory)
stat("/home/fuzzmz/test", 0x7fffabd65e10) = -1 ENOENT (No such file or directory)
lstat("test", 0x7fffabd65ce0)           = -1 ENOENT (No such file or directory)
stat("test", 0x7fffabd65c50)            = -1 ENOENT (No such file or directory)
umask(0)                                = 02
umask(02)                               = 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The important&amp;nbsp;part:&lt;/p&gt;
&lt;!-- language: bash --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;open("test", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 3
umask(02)                               = 02
fcntl(3, F_GETFL)                       = 0x8001 (flags O_WRONLY|O_LARGEFILE)
fstat(3, {st_mode=S_IFREG|0664, st_size=0, ...}) = 0
mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fb3975af000
lseek(3, 0, SEEK_CUR)                   = 0
write(3, "hello\n", 6)                  = 6
close(3)                                = 0
munmap(0x7fb3975af000, 4096)            = 0
stat("test", {st_mode=S_IFREG|0664, st_size=6, ...}) = 0
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Process exit and terminal clean&amp;nbsp;up:&lt;/p&gt;
&lt;!-- language: bash --&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rt_sigaction(SIGTSTP, {SIG_IGN, [], SA_RESTORER|SA_RESTART, 0x397b635a90}, {SIG_IGN, [], SA_RESTORER, 0x397b635a90}, 8) = 0
select(1, [0], NULL, NULL, {0, 0})      = 0 (Timeout)
select(1, [0], NULL, NULL, {0, 0})      = 0 (Timeout)
write(1, "\r\33[58d\33[39;49m\33(B\33[m\33[J\33[1;95H\33("..., 109) = 109
rt_sigaction(SIGTSTP, {SIG_IGN, [], SA_RESTORER, 0x397b635a90}, NULL, 8) = 0
write(1, "\33[59;1H\33[?1049l\r\33[?1l\33&amp;gt;", 23) = 23
ioctl(1, SNDCTL_TMR_STOP or SNDRV_TIMER_IOCTL_GINFO or TCSETSW, {B38400 opost isig icanon echo ...}) = 0
ioctl(0, SNDCTL_TMR_START or SNDRV_TIMER_IOCTL_TREAD or TCSETS, {B38400 opost isig icanon echo ...}) = 0
ioctl(0, SNDCTL_TMR_TIMEBASE or SNDRV_TIMER_IOCTL_NEXT_DEVICE or TCGETS, {B38400 opost isig icanon echo ...}) = 0
exit_group(0)                           = ?
+++ exited with 0 +++
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Emacs does not fsync() either. However, vi does&amp;nbsp;fysync().&lt;/p&gt;
&lt;p&gt;I seriously thought &lt;span class="caps"&gt;ANY&lt;/span&gt; application that opened a file for write would end up doing an fsync when it closed normally. Like, without even trying specifically in the code to do so - I thought just closing the filehandle would do&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;I guess part of the problem was that historically file systems didn&amp;rsquo;t handle fsync well. A fsync to any file caused the entire file system to sync, making the call extremely&amp;nbsp;expensive.&lt;/p&gt;
&lt;p&gt;One thing to remember though is that over &lt;span class="caps"&gt;NFS&lt;/span&gt; a close() implies an implicit fsync(), due to the way the &lt;span class="caps"&gt;NFS&lt;/span&gt; consistency model works, but not on a local&amp;nbsp;fs.&lt;/p&gt;</summary><category term="linux"></category><category term="strace"></category><category term="debug"></category></entry><entry><title>Prettify your git logÂ graphs</title><link href="https://fuzz.me.uk/git-graph-pretty/" rel="alternate"></link><updated>2013-10-03T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-10-03:git-graph-pretty/</id><summary type="html">&lt;p&gt;If you&amp;rsquo;re using git as a version control system you must know of the awesomeness that is &lt;code&gt;git log --graph&lt;/code&gt;; this displays your commits in a nice tree&amp;nbsp;form.&lt;/p&gt;
&lt;p&gt;The downside to this is that it can be loooong and hard to parse, so let&amp;rsquo;s prettify&amp;nbsp;it!&lt;/p&gt;
&lt;p&gt;By making the following alias you&amp;nbsp;get:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;colors&lt;/li&gt;
&lt;li&gt;graph of&amp;nbsp;commits&lt;/li&gt;
&lt;li&gt;one commit per&amp;nbsp;line&lt;/li&gt;
&lt;li&gt;abbreviated commit&amp;nbsp;IDs&lt;/li&gt;
&lt;li&gt;dates relative to&amp;nbsp;now&lt;/li&gt;
&lt;li&gt;commit&amp;nbsp;references&lt;/li&gt;
&lt;li&gt;author of the&amp;nbsp;commit&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And the alias&amp;nbsp;is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git config --global alias.lg "log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&amp;lt;%an&amp;gt;%Creset' --abbrev-commit --date=relative"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What you&amp;rsquo;ll see will be similar&amp;nbsp;to:&lt;/p&gt;
&lt;p&gt;&lt;img alt="git pretty graph log" class="img-responsive" src="/images/git-graph-pretty/git_lg.png"/&gt;&lt;/p&gt;</summary><category term="git"></category><category term="scm"></category></entry><entry><title>SSH with two-factorÂ auth</title><link href="https://fuzz.me.uk/ssh-tfa/" rel="alternate"></link><updated>2013-09-27T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-09-27:ssh-tfa/</id><summary type="html">&lt;p&gt;The&amp;nbsp;reason&lt;/p&gt;
&lt;p&gt;Most of the servers I manage used to be locked down using certificates so it&amp;rsquo;s really hard to break in; this had the advantage of being more secure than a password but, as time went on, the big disadvantage of not being able to log in from PCs which lacked the&amp;nbsp;certs.&lt;/p&gt;
&lt;p&gt;In time I&amp;rsquo;ve went back on my decision to only allow certificate based logins. The downside to this change is that I felt the the server was still exposed despite using a strong&amp;nbsp;password.&lt;/p&gt;
&lt;p&gt;Fortunately Google offers a nice Authenticator application for smartphones as well as offering a &lt;a href="https://code.google.com/p/google-authenticator/"&gt;pluggable authentication module (&lt;span class="caps"&gt;PAM&lt;/span&gt;)&lt;/a&gt; which ties in with the Authenticator app for two-factor authentication on login. This means that besides knowing the username and password, a user would need to have a time-based one-time password generated by the app in order to log in to the&amp;nbsp;server.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="installing-google-authenticator-pam"&gt;Installing google-authenticator &lt;span class="caps"&gt;PAM&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;m running Debian so this guide applies to Debian and Debian-based&amp;nbsp;distributions.&lt;/p&gt;
&lt;p&gt;First of all we&amp;rsquo;re going to need to install the build-essential package which will allow us to actually install the&amp;nbsp;software.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install build-essential
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After we&amp;rsquo;ve got them installed we&amp;rsquo;re going to install some dependencies needed for the &lt;span class="caps"&gt;PAM&lt;/span&gt; module to work (libpam-dev) as well as to retrieve (git) and easily configure the software&amp;nbsp;(libqrencode-dev).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install git libpam-dev libqrencode-dev libpam0g-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let&amp;rsquo;s go ahead and download the&amp;nbsp;code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://code.google.com/p/google-authenticator/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This grabs the files from Google&amp;rsquo;s server and creates a local copy. After that&amp;rsquo;s done navigate to the google-authenticator/libpam directory and&amp;nbsp;run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we&amp;rsquo;ve got everything installed it&amp;rsquo;s time to actually set up the application. This is extremely easy, just run &lt;code&gt;google-authenticator&lt;/code&gt; which will generate a &lt;span class="caps"&gt;QR&lt;/span&gt; code (thanks to the libqrencode-dev package); scan this code in the Google Authenticator mobile app (or enter the information by hand) and head back to your &lt;span class="caps"&gt;PC&lt;/span&gt; to finish setting up the software by answering the questions it&amp;nbsp;asks.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="setting-up-the-os-to-use-challenge-response-authentication"&gt;Setting up the &lt;span class="caps"&gt;OS&lt;/span&gt; to use Challenge Response&amp;nbsp;Authentication&lt;/h3&gt;
&lt;p&gt;Once the previous step is done we need to let the &lt;span class="caps"&gt;OS&lt;/span&gt; know that is has to use the newly installed &lt;span class="caps"&gt;PAM&lt;/span&gt; module. To do this we need to edit the &lt;code&gt;/etc/pam.d/common-auth&lt;/code&gt; (by running &lt;code&gt;sudo vim /etc/pam.d/common-auth&lt;/code&gt; for example) and adding the following&amp;nbsp;line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auth    required  pam_google_authenticator.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next up is the ssh_config file in order to allow &lt;span class="caps"&gt;SSH&lt;/span&gt; to send challenge&amp;nbsp;requests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find the line containing &lt;code&gt;ChallengeResponseAuthentication&lt;/code&gt; and set it to yes (also uncomment it if it&amp;rsquo;s commented out) so that it looks&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ChallengeResponseAuthentication yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now all there&amp;rsquo;s left to do is restart the &lt;span class="caps"&gt;SSH&lt;/span&gt; server and to test the&amp;nbsp;change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/ssh restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next time you&amp;rsquo;ll log in you should be greeted with a message asking for a verification code after entering the username and&amp;nbsp;password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh user@host
Password:
Verification code:
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h3 id="bonus-points"&gt;Bonus&amp;nbsp;points&lt;/h3&gt;
&lt;p&gt;One advantage to this is the fact that even if you log in using a certificate (which bypasses the two-factor authentication) you are still asked for a verification code when trying to elevate to root via sudo for&amp;nbsp;example.&lt;/p&gt;</summary><category term="google"></category><category term="security"></category><category term="authentication"></category><category term="two-factor auth"></category></entry><entry><title>PresenceÂ indicators</title><link href="https://fuzz.me.uk/presence-indicators/" rel="alternate"></link><updated>2013-09-26T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-09-26:presence-indicators/</id><summary type="html">&lt;script src="https://apis.google.com/js/plusone.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;blockquote&gt;
&lt;p&gt;/&amp;gt; is there anybody out&amp;nbsp;there?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;No, really. With the advent of mobile devices we are more connected than ever to all of our friends, acquaintances or random people who happen to have our &lt;span class="caps"&gt;IM&lt;/span&gt; handles. So in this always-connected world do presence indicators have a place of their&amp;nbsp;own?&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="availablebusyaway"&gt;Available/Busy/Away&lt;/h3&gt;
&lt;p&gt;In the olden days, when geeks were tied to their computers, &lt;span class="caps"&gt;IM&lt;/span&gt; programs came with this wonderful concept of presence indicators such as &lt;em&gt;available&lt;/em&gt;, &lt;em&gt;busy&lt;/em&gt; or &lt;em&gt;away&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;They were meant let the other people around know if you were or not paying attention to the &lt;span class="caps"&gt;IM&lt;/span&gt; application, or, in the case of the most useful status of all &lt;strong&gt;offline / invisible&lt;/strong&gt;, make them leave you alone&amp;nbsp;all-together.&lt;/p&gt;
&lt;p&gt;But as time passed and people got more and more used to IMing the relevance of the presence indicator diminished; it didn&amp;rsquo;t matter if you were available or busy because 99% of the time you&amp;rsquo;d end up with a &lt;code&gt;hey, got a minute?&lt;/code&gt; on your screen. Not even the mighty &lt;em&gt;invisible&lt;/em&gt; managed to keep them away as services evolved to store offline messages until you&amp;rsquo;d get back&amp;nbsp;online.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="social-anxiety"&gt;Social&amp;nbsp;anxiety&lt;/h3&gt;
&lt;p&gt;And because just having people ignore your presence indicator wasn&amp;rsquo;t enough, some insidious developers decided that it would be a good idea to take things a step further and tell you if the other person closed the conversation&amp;nbsp;window.&lt;/p&gt;
&lt;p&gt;No, really, just hover or tap on the image above to see what I&amp;rsquo;m talking&amp;nbsp;about.&lt;/p&gt;
&lt;script type="text/javascript"&gt;function onHover1()
{
    $("#menuImg1").attr('src', '/images/presence-indicators/im_off_blur.png');
}

function offHover1()
{
    $("#menuImg1").attr('src', '/images/presence-indicators/im_on_blur.png');
}&lt;/script&gt;
&lt;p&gt;&lt;img alt="IM window open indicator" class="img-responsive" id="menuImg1" onmouseout="offHover1();" onmouseover="onHover1();" src="/images/presence-indicators/im_on_blur.png"/&gt;&lt;/p&gt;
&lt;p&gt;This leads to awkward situations when you don&amp;rsquo;t close the window immediately after a heated discussion of fear that the other guy thinking that you&amp;rsquo;re being passive&amp;nbsp;aggressive.&lt;/p&gt;
&lt;p&gt;It also makes people assume that just because that indicator is shown (which, unless you&amp;rsquo;re actually offline, is always displayed) you&amp;rsquo;ve read the message and are starting a lengthy response to his 3 word query, in turn leading to presence indicators being even more&amp;nbsp;worthless.&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="always-connected"&gt;Always-connected&lt;/h3&gt;
&lt;p&gt;But here we are now, with mobile phones and data plans in our pockets, a complete disregard for presence indicators and always-on &lt;span class="caps"&gt;IM&lt;/span&gt;&amp;nbsp;clients.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s the role of the presence indicator now? I think it&amp;rsquo;s time to move away from the concept of &lt;em&gt;instant messaging&lt;/em&gt; towards simply &lt;em&gt;messaging&lt;/em&gt; - the idea being, online state doesn&amp;rsquo;t matter, you just send your message anytime and the person reads and responds to it when they&amp;rsquo;re&amp;nbsp;able.&lt;/p&gt;
&lt;p&gt;Google tried to do this with the Hangouts app but the backlash was so huge that in the most recent version they reinstated (though in a somewhat half-assed fashion) presence&amp;nbsp;indicators.&lt;/p&gt;
&lt;script type="text/javascript"&gt;function onHover2()
{
    $("#menuImg2").attr('src', '/images/presence-indicators/hangouts_new.png');
}

function offHover2()
{
    $("#menuImg2").attr('src', '/images/presence-indicators/hangouts_old-1.png');
}&lt;/script&gt;
&lt;p&gt;&lt;img alt="Old Hangouts layout" class="img-responsive" id="menuImg2" onmouseout="offHover2();" onmouseover="onHover2();" src="/images/presence-indicators/hangouts_old-1.png"/&gt;&lt;/p&gt;
&lt;p&gt;But what&amp;rsquo;s curious is that even the darlings of the &lt;span class="caps"&gt;IM&lt;/span&gt; world, Apple&amp;rsquo;s iMessage and WhatsApp seem to have forgone presence&amp;nbsp;indicators.&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;ldquo;&lt;/span&gt;But WhatsApp still has them!&amp;rdquo; you might say. To this I can only reply&amp;nbsp;with:&lt;/p&gt;
&lt;p&gt;&lt;img alt="WhatsApp contact list" class="img-responsive" src="/images/presence-indicators/whatsapp.png"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h3 id="the-future-of-presence"&gt;The future of&amp;nbsp;presence&lt;/h3&gt;
&lt;p&gt;Presence needs to change. it needs to be less about idle, away, etc. and more about where it learns how to notify&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;If you never answer when writing an email or using an &lt;span class="caps"&gt;IDE&lt;/span&gt; (or whatever work-related tool) it learns to wait or set up more passive notifications; then when you move over to a game, it pops up about X messages to answer. Or if you only answer certain people during certain hours, to tell you about those and not other&amp;nbsp;people.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve been having lots and lots of data about our usage, now all that&amp;rsquo;s left is applying some intelligence to that&amp;nbsp;data.&lt;/p&gt;
&lt;p&gt;And here&amp;rsquo;s a small poll for those so&amp;nbsp;inclined.&lt;/p&gt;
&lt;div class="g-post" data-href="https://plus.google.com/109419825267811970601/posts/TXTrELakTfs"&gt;&lt;/div&gt;
&lt;p&gt;And as usual, I look forward to your comments down&amp;nbsp;below.&lt;/p&gt;</summary><category term="google"></category><category term="hangouts"></category><category term="IM"></category><category term="chat"></category></entry><entry><title>Oh hiÂ there</title><link href="https://fuzz.me.uk/oh-hi-there/" rel="alternate"></link><updated>2013-09-25T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2013-09-25:oh-hi-there/</id><summary type="html">&lt;p&gt;Hello there, long time no&amp;nbsp;see.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve come here thanks to the old faithful &lt;strong&gt;&lt;em&gt;&lt;span class="caps"&gt;QWERTY&lt;/span&gt; - fast keystrokes&lt;/em&gt;&lt;/strong&gt; blog please note that it is now in archival mode and at the moment the sources can be found on &lt;a href="https://github.com/fuzzmz/fuzzmz.github.com"&gt;GitHub&lt;/a&gt;. I&amp;rsquo;m doing my best to move it to its own domain so the history will be easier to access, but this here will be a fresh&amp;nbsp;start.&lt;/p&gt;
&lt;p&gt;As you can see, I&amp;rsquo;m trying to keep things as simple as possible, so I&amp;rsquo;ve went ahead and moved to &lt;a href="http://ghost.org/"&gt;Ghost&lt;/a&gt;, a new and kinky blogging platform which is currently under development. It has the main advantage of &lt;a href="http://docs.getpelican.com/en/3.3.0/"&gt;Pelican&lt;/a&gt; (namely its Markdown support) but also offers a really nice editor with live&amp;nbsp;preview.&lt;/p&gt;
&lt;p&gt;Now, if I was to be completely honest, the main reason for moving away from Pelican is that I didn&amp;rsquo;t back up my configs and am too lazy to restore them, so I&amp;rsquo;ll give up the awesomesauce that is GitHub pages hosting in favour of keeping things&amp;nbsp;in-house.&lt;/p&gt;
&lt;p&gt;Speaking of in-house, as you can see down bellow, the comments are powered by &lt;a href="https://plus.google.com"&gt;Google+&lt;/a&gt;; I am fully aware of the fact that this might reduce the number of comments I get, but seeing that I&amp;rsquo;m using my real name to ramble here I&amp;rsquo;d appreciate it if the people I&amp;rsquo;m chatting with do the&amp;nbsp;same.&lt;/p&gt;
&lt;p&gt;So in closing, welcome, beware of the cookie monster and remember to grab a mug of coffee as I&amp;rsquo;ll do my best to keep you&amp;nbsp;entertained.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img alt="Coffee Owns!" class="img-responsive" src="/images/oh-hi-there/own.jpg"/&gt;&lt;/p&gt;</summary><category term="intro"></category></entry><entry><title>Share me onÂ G+</title><link href="https://fuzz.me.uk/gplus-sharing/" rel="alternate"></link><updated>2012-12-09T22:43:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-12-09:gplus-sharing/</id><summary type="html">&lt;p&gt;It&amp;rsquo;s not something of a secret that I&amp;rsquo;m a fan of Google+ and would like more people to get on there rather than stay on&amp;nbsp;Facebook.&lt;/p&gt;
&lt;p&gt;Considering this I&amp;rsquo;ve added a G+ +1 button on articles on this blog, so if you see something share-worthy don&amp;rsquo;t hesitate to hit it with great&amp;nbsp;passion!&lt;/p&gt;
&lt;p&gt;The associated GitHub issue&amp;nbsp;is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/10"&gt;issue #10 - add Google+ share&amp;nbsp;button&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can also easily find and circle me by using &lt;a href="http://gplus.to/fuzzmz"&gt;this link&lt;/a&gt;.&lt;/p&gt;</summary><category term="Google Plus"></category><category term="G+"></category><category term="social"></category></entry><entry><title>Fast filenameÂ replace</title><link href="https://fuzz.me.uk/filename-replace/" rel="alternate"></link><updated>2012-12-09T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-12-09:filename-replace/</id><summary type="html">&lt;p&gt;This is a short article for a short PowerShell&amp;nbsp;command.&lt;/p&gt;
&lt;p&gt;Have you ever had a folder filled with files wheree you wanted to replace all spaces in the file names with dashes for example? If yes, then this script will work wonders for&amp;nbsp;you.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;get-childitem&lt;/span&gt; &lt;span class="p"&gt;*.&lt;/span&gt;&lt;span class="n"&gt;mp3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="k"&gt;foreach&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nb"&gt;rename-item&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt; &lt;span class="nv"&gt;$_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;" "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"_"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That command replaces all spaces with underscores in all mp3 files in the folder it&amp;rsquo;s run. The syntax is pretty explicit, &lt;code&gt;get-childitem&lt;/code&gt; tells powershell to get all the contents of the folder with the extension specified (in our case it&amp;rsquo;s &lt;code&gt;*.mp3&lt;/code&gt;) and makes a loop over all elements (&lt;code&gt;foreach&lt;/code&gt;) where it replaces all spaces with underscores for each item found with that&amp;nbsp;extension.&lt;/p&gt;</summary><category term="PowerShell"></category><category term="scripting"></category></entry><entry><title>AtomÂ feeds</title><link href="https://fuzz.me.uk/atom-feeds/" rel="alternate"></link><updated>2012-11-26T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-11-26:atom-feeds/</id><summary type="html">&lt;p&gt;Feeds are now available for this website in case you want to keep up to date using a feed reader such as &lt;a href="http://reader.google.com"&gt;Google Reader&lt;/a&gt;. The general feed can be found at &lt;a href="http://feeds.feedburner.com/qwertyfuzz/main"&gt;http://feeds.feedburner.com/qwertyfuzz/main&lt;/a&gt; in case your browser doesn&amp;rsquo;t display any feed availability notifier in its&amp;nbsp;interface.&lt;/p&gt;
&lt;p&gt;Currently the per category feeds aren&amp;rsquo;t properly working (see &lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/7"&gt;issue #7 - fix feeds for categories&lt;/a&gt;) but I hope to get them up and running as soon as&amp;nbsp;possible.&lt;/p&gt;
&lt;p&gt;The associated GitHub issues regarding generating feeds&amp;nbsp;are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/4"&gt;issue #4 - Serve feeds through&amp;nbsp;FeedBurner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/5"&gt;issue #5 - Change feed location for Feedburner&amp;nbsp;transition&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/6"&gt;issue #6 - Feed not enabled in html&amp;nbsp;header&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="feeds"></category><category term="Atom"></category><category term="FeedBurner"></category></entry><entry><title>View articleÂ source</title><link href="https://fuzz.me.uk/view-source/" rel="alternate"></link><updated>2012-11-26T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-11-26:view-source/</id><summary type="html">&lt;p&gt;You can now view the article markdown source by clicking on the &lt;strong&gt;view: article source&lt;/strong&gt; in the article info pane, just beneath the associated tags&amp;nbsp;list.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re curious about the changes made in the backend for this to function you can always take a look at the &lt;em&gt;&lt;a href="https://github.com/fuzzmz/fuzzmz.github.com/issues/1"&gt;Add &amp;lsquo;View Article Source&amp;rsquo; link&lt;/a&gt;&lt;/em&gt; issue on&amp;nbsp;GitHub.&lt;/p&gt;</summary><category term="Pelican"></category><category term="GitHub"></category><category term="Markdown"></category></entry><entry><title>Two-factor auth with GoogleÂ Authenticator</title><link href="https://fuzz.me.uk/tfa-google-auth/" rel="alternate"></link><updated>2012-11-20T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-11-20:tfa-google-auth/</id><summary type="html">&lt;h2 id="the-reason"&gt;The&amp;nbsp;reason&lt;/h2&gt;
&lt;p&gt;As you may remember I&amp;rsquo;ve went through &lt;a href="//fuzz.me.uk/locked-out/"&gt;a bit of an ordeal&lt;/a&gt; trying to secure my server by allowing users to log in only with certificates. This had the advantage of being more secure than a password but, as time went on, the big disadvantage of not being able to log in from PCs which lacked the&amp;nbsp;certs.&lt;/p&gt;
&lt;p&gt;Moving forward (and doing a fresh install on the &lt;span class="caps"&gt;VPS&lt;/span&gt;, which I&amp;rsquo;ll address in a future post) I&amp;rsquo;ve went back on my decision to only allow certificate based logins. The downside to this change is that I felt the the server was still exposed despite using a strong&amp;nbsp;password.&lt;/p&gt;
&lt;p&gt;Fortunately Google offers a nice Authenticator application for smartphones as well as offering a &lt;a href="https://code.google.com/p/google-authenticator/"&gt;pluggable authentication module (&lt;span class="caps"&gt;PAM&lt;/span&gt;)&lt;/a&gt; which ties in with the Authenticator app for two-factor authentication on login. This means that besides knowing the username and password someone would need to have a time-based one-time password generated by the app in order to log in to the&amp;nbsp;site.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="installing-google-authenticator-pam"&gt;Installing google-authenticator &lt;span class="caps"&gt;PAM&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;m running Debian so this guide applies to Debian and Debian-based&amp;nbsp;distributions.&lt;/p&gt;
&lt;p&gt;First of all we&amp;rsquo;re going to need to install the build-essential package which will allow us to actually install the&amp;nbsp;software.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install build-essential
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After we&amp;rsquo;ve got them installed we&amp;rsquo;re going to install some dependencies needed for the &lt;span class="caps"&gt;PAM&lt;/span&gt; module to work (libpam-dev) as well as to retrieve (git) and easily configure the software&amp;nbsp;(libqrencode-dev).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install git libpam-dev libqrencode-dev libpam0g-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now let&amp;rsquo;s go ahead and download the&amp;nbsp;code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://code.google.com/p/google-authenticator/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This grabs the files from Google&amp;rsquo;s server and creates a local copy. After that&amp;rsquo;s done navigate to the google-authenticator/libpam directory and&amp;nbsp;run&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo make install
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we&amp;rsquo;ve got everything installed it&amp;rsquo;s time to actually set up the application. This is extremely easy, just run &lt;code&gt;google-authenticator&lt;/code&gt; which will generate a &lt;span class="caps"&gt;QR&lt;/span&gt; code (thanks to the libqrencode-dev package); scan this code in the Google Authenticator mobile app (or enter the information by hand) and head back to your &lt;span class="caps"&gt;PC&lt;/span&gt; to finish setting up the software by answering the questions it&amp;nbsp;asks.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="setting-up-the-os-to-use-challenge-response-authentication"&gt;Setting up the &lt;span class="caps"&gt;OS&lt;/span&gt; to use Challenge Response&amp;nbsp;Authentication&lt;/h2&gt;
&lt;p&gt;Once the previous step is done we need to let the &lt;span class="caps"&gt;OS&lt;/span&gt; know that is has to use the newly installed &lt;span class="caps"&gt;PAM&lt;/span&gt; module. To do this we need to edit the &lt;code&gt;/etc/pam.d/common-auth&lt;/code&gt; (by running &lt;code&gt;sudo vim /etc/pam.d/common-auth&lt;/code&gt; for example) and adding the following&amp;nbsp;line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;auth    required                        pam_google_authenticator.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next up is the ssh_config file in order to allow &lt;span class="caps"&gt;SSH&lt;/span&gt; to send challenge&amp;nbsp;requests:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/ssh/sshd_config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Find the line containing &lt;code&gt;ChallengeResponseAuthentication&lt;/code&gt; and set it to yes (also uncomment it if it&amp;rsquo;s commented out) so that it looks&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ChallengeResponseAuthentication yes
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now all there&amp;rsquo;s left to do is restart the &lt;span class="caps"&gt;SSH&lt;/span&gt; server and to test the&amp;nbsp;change:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo /etc/init.d/ssh restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The next time you&amp;rsquo;ll log in you should be greeted with a message asking for a verification code after entering the username and&amp;nbsp;password.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh user@host
Password:
Verification code:
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="bonus-points"&gt;Bonus&amp;nbsp;points&lt;/h2&gt;
&lt;p&gt;One advantage to this is the fact that even if you log in using a certificate (which bypasses the two-factor authentication) you are still asked for a verification code when trying to elevate to root via sudo for&amp;nbsp;example.&lt;/p&gt;</summary><category term="Debian"></category><category term="Google"></category><category term="security"></category><category term="TFA"></category><category term="T-FA"></category><category term="2FA"></category></entry><entry><title>Git revert toÂ commit</title><link href="https://fuzz.me.uk/git-revert-specific/" rel="alternate"></link><updated>2012-11-19T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-11-19:git-revert-specific/</id><summary type="html">&lt;p&gt;Have you ever made a git commit only to figure out that it wasn&amp;rsquo;t such a good idea? How about wanting to go back in your history and reverting to a specific commit? It&amp;rsquo;s actually simple once you know how to do&amp;nbsp;it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git reset 56e05fced
git reset --soft HEAD@{1}
git commit -m "Revert to 56e05fced"
git reset --hard
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just replace 56e05fced with the commit code you want to revert&amp;nbsp;to.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first line resets the index to a former commit (56e05fced in this&amp;nbsp;case).&lt;/li&gt;
&lt;li&gt;The second line moves the pointer back to the previous&amp;nbsp;head.&lt;/li&gt;
&lt;li&gt;Third line is self explanatory (commits the changes with a&amp;nbsp;message).&lt;/li&gt;
&lt;li&gt;Last tine updates the working copy to reflect the new&amp;nbsp;commit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Then all you have to do is push the changes with a &lt;code&gt;git push origin master&lt;/code&gt; or whatever your branch may&amp;nbsp;be.&lt;/p&gt;</summary><category term="git"></category><category term="revert"></category><category term="undo"></category></entry><entry><title>Quick command prompt toÂ path</title><link href="https://fuzz.me.uk/quickcmd/" rel="alternate"></link><updated>2012-09-08T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-09-08:quickcmd/</id><summary type="html">&lt;p&gt;If you&amp;rsquo;re working a lot with the command prompt and Windows Explorer you find yourself either having to copy/paste a lot of paths into cmd.exe or just wasting time writing them by hand. Windows 8 addresses that with a (more visible) open command prompt here button, but the functionality already exists in Windows 7 and maybe even&amp;nbsp;earlier.&lt;/p&gt;
&lt;p&gt;The first way in achieving that is &lt;strong&gt;shift+right clicking&lt;/strong&gt; on a folder and clicking on the option &amp;ldquo;Open command window&amp;nbsp;here&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="shift-right-click" class="img-responsive" src="/images/imported-old/cmd_click.png"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;The second way is something that&amp;rsquo;s even more hidden. Say for example you have a long path such&amp;nbsp;as&lt;/p&gt;
&lt;p&gt;&lt;img alt="long_path" class="img-responsive" src="/images/imported-old/long_path.PNG"/&gt;&lt;/p&gt;
&lt;p&gt;All you&amp;rsquo;d have to do is edit it and type cmd at the beginning of the string followed by a space to separate the command from the path, then hit&amp;nbsp;Enter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="cmd_in_long_path" class="img-responsive" src="/images/imported-old/cmd_path.png"/&gt;&lt;/p&gt;
&lt;p&gt;And&amp;nbsp;voil&amp;agrave;!&lt;/p&gt;
&lt;p&gt;&lt;img alt="cmd_to_long_path" class="img-responsive" src="/images/imported-old/cmd_to_path.PNG"/&gt;&lt;/p&gt;</summary><category term="Windows"></category><category term="cmd"></category><category term="tips"></category></entry><entry><title>Let there beÂ Prometheus</title><link href="https://fuzz.me.uk/prometheus/" rel="alternate"></link><updated>2012-06-13T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-06-13:prometheus/</id><summary type="html">&lt;p&gt;I thought the movie was good, great even if you haven&amp;rsquo;t watched any of the trailers. Michael Fassbender played a perfect evil android, from the stiff posture to the robotic reactions to things around him. I wasn&amp;rsquo;t exactly sold on Noomi&amp;rsquo;s character but she did a great job with it anyway. I don&amp;rsquo;t normally like Charlize but she did pretty damn good, too. For a while, I was curious if she was a droid,&amp;nbsp;too.&lt;/p&gt;
&lt;p&gt;The movie provided some possible answers to other questions. One that we now know for certain is that the company knew exactly what was going on on &lt;span class="caps"&gt;LV&lt;/span&gt;-426 once the language in the &lt;span class="caps"&gt;SOS&lt;/span&gt; was deciphered. Second, we know that the Engineer who died on that ship made a mistake, but was clearly headed for some system where they intended to deploy the aliens (while &lt;span class="caps"&gt;AVP&lt;/span&gt; has provided some great comics and novels, I find this a more interesting premise than a yautja male initiation rite). Third, the aliens were definitely biological weapons as opposed to a naturally evolved&amp;nbsp;species.&lt;/p&gt;
&lt;p&gt;After that, the movie lets you make up your mind on a few things. Captain Janek notes that the Engineers are smart enough to build their biological weapons someplace other than their backyard. They are also smart enough to give their creations a map to the bio depots instead of their homeworld - would you want your creations showing up at your doorstep with who knows what microbes and military weapons? Now, Shaw is leaving the depot to go back to their homeworld. Flying a ship that&amp;rsquo;s likely loaded down with biological weapons. There might be a very good reason that the Engineers don&amp;rsquo;t have any future involvement with&amp;nbsp;humankind.&lt;/p&gt;
&lt;p&gt;Another thing is that Janek notes this planet is a &amp;ldquo;lab&amp;rdquo;. Earth is another &amp;ldquo;lab&amp;rdquo;. Shaw isn&amp;rsquo;t going to get the answer she wants when she heads back to their homeworld, assuming she gets an answer at all. She&amp;rsquo;s probably going to hear that humanity didn&amp;rsquo;t fuck up, they were just another petri dish and they were going to see what happens when two dishes combine. That answers the biggest question: Why? Because they could. Just like us, their&amp;nbsp;descendents.&lt;/p&gt;
&lt;p&gt;The only real question I have that I couldn&amp;rsquo;t intuit an answer for is what happened in the opening scene. It almost looks like that Engineer was exiled, or left behind, and decided to commit suicide. Not sure why that would be worth the scene, though, so I think there&amp;rsquo;s another reason it was&amp;nbsp;there.&lt;/p&gt;</summary><category term="Prometheus"></category><category term="movies"></category></entry><entry><title>Enhancâ¦ erm,Â extract!</title><link href="https://fuzz.me.uk/extract-archive-recursively/" rel="alternate"></link><updated>2012-06-08T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-06-08:extract-archive-recursively/</id><summary type="html">&lt;p&gt;We&amp;rsquo;ve all been there, haven&amp;rsquo;t we? We just downloaded the latest seaso&amp;hellip; erm, Linux distro and it came with lots of folders which in turn contain lots of archives, one folder per episode. One way to do things is to just extract each episode&amp;hellip; erm, distro, by hand, watch it, move to the next and so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;Another way would be to write a Windows batch script to make &lt;a href="www.7-zip.org/"&gt;7-zip&lt;/a&gt; go through all the archives and extract their contents, which means you run it once and end up with all the files&amp;nbsp;out.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; /D /r &lt;span class="se"&gt;%%&lt;/span&gt;F &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="k"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;%CD%&lt;/span&gt;
    &lt;span class="k"&gt;cd&lt;/span&gt; &lt;span class="se"&gt;%%&lt;/span&gt;F
        &lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="se"&gt;%%&lt;/span&gt;X &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;*.rar *.zip&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="s2"&gt;"C:\Program Files\7-zip\7z.exe"&lt;/span&gt; x &lt;span class="se"&gt;%%&lt;/span&gt;X
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;popd&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if you&amp;rsquo;re running a 64bit &lt;span class="caps"&gt;OS&lt;/span&gt; but don&amp;rsquo;t have the 64bit version of 7-zip installed you need to change &amp;ldquo;C:\Program Files\7-zip\7z.exe&amp;rdquo; x %%X into &amp;ldquo;C:\Program Files (x86)\7-zip\7z.exe&amp;rdquo; x&amp;nbsp;%%X&lt;/p&gt;
&lt;p&gt;Launch the bat, and all rar&amp;rsquo;s/zips will be extracted into the folder they are contained&amp;nbsp;in.&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s be helpful and dissect the script, shall&amp;nbsp;we?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; /D /r &lt;span class="se"&gt;%%&lt;/span&gt;F &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a simple for loop to go through all folders in the current directory, and put the path into a variable&amp;nbsp;%%F.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;pushd&lt;/span&gt; &lt;span class="nv"&gt;%CD%&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Put the current directory into&amp;nbsp;memory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;cd&lt;/span&gt; &lt;span class="se"&gt;%%&lt;/span&gt;F
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Set the folder from variable %%F as the current&amp;nbsp;directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FOR&lt;/span&gt; &lt;span class="se"&gt;%%&lt;/span&gt;X &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;*.rar *.zip&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;DO&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For all the archives (rar and zip) in the current folder,&amp;nbsp;do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="s2"&gt;"C:\Program Files\7-zip\7z.exe"&lt;/span&gt; x &lt;span class="se"&gt;%%&lt;/span&gt;X
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Run 7-zip on the files with the extract parameter (basically call the command line version of 7-zip telling it to extract the current&amp;nbsp;archive)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;popd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Return to the previous directory stored in&amp;nbsp;memory.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s it! Pretty simple and efficient, isn&amp;rsquo;t&amp;nbsp;it?&lt;/p&gt;</summary><category term="7-zip"></category><category term="recursive"></category><category term="archives"></category><category term="bat"></category></entry><entry><title>Quick &amp; dirty with the Last.fmÂ beta</title><link href="https://fuzz.me.uk/last-fm-scrobbler-beta/" rel="alternate"></link><updated>2012-05-13T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-05-13:last-fm-scrobbler-beta/</id><summary type="html">&lt;p&gt;&lt;img class="img-responsive" src="/images/imported-old/lastfm.PNG" style="float:left; padding-right:10px"/&gt;&lt;/p&gt;
&lt;p&gt;Last.fm released a &lt;a href="http://www.last.fm/group/Audioscrobbler+Beta"&gt;beta version&lt;/a&gt; of their audioscrobbler, the software that sits on your &lt;span class="caps"&gt;PC&lt;/span&gt; and lets you stream their radio as well as sends the plays to their web&amp;nbsp;interface.&lt;/p&gt;
&lt;p&gt;Now, I&amp;rsquo;m a pretty big user of the old client, mostly because I disliked listening to the radio in my browser as that tends to not stay always open, while the music is everpresent, so I was pretty excited to find out about the new version. I didn&amp;rsquo;t have any problems with the old software, and the only gripe with it is that it didn&amp;rsquo;t notify you of the name of the track if the window was&amp;nbsp;minimized.&lt;/p&gt;
&lt;p&gt;With this in mind, I&amp;rsquo;m really happy with how the new scrobbler looks; it most certainly is based on &lt;a href="https://github.com/twitter/twui"&gt;twui&lt;/a&gt;, the &lt;span class="caps"&gt;UI&lt;/span&gt; framework designed by Twitter and used in their Mac client (also used by the GitHub Mac application) and shares the look and feel with them. The interface is really responsive, though there are still some issues like not being able to click on the icons to mute or maximize the audio level, as well as the keyboard shortcuts being displayed using the Mac notation in the settings, but hey, it&amp;rsquo;s a beta! Another omission is the lack of jumplists on Windows 7, but that&amp;rsquo;s not really important as it usually stays minimized to tray; speaking of which, it would be nice if they&amp;rsquo;ll include global shorts for playback, as the ones available only work while the app is in&amp;nbsp;focus.&lt;/p&gt;
&lt;p&gt;Oh, and did I tell you that it also brings the notifications I was craving for? :D Yes, no more having to open the client in order to see what track just started&amp;nbsp;playing.&lt;/p&gt;
&lt;p&gt;Stability seems to be great during my testing with no crash whatsoever, though resource consumption is higher compared to the previous client (around &lt;span class="caps"&gt;40MB&lt;/span&gt; versus 12); fortunately that seems to be constant with no spikes or memory leaks which means that it can very well stay open&amp;nbsp;24/7.&lt;/p&gt;
&lt;hr/&gt;
&lt;p align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="360" src="http://www.youtube-nocookie.com/embed/jclAWeuPUjk?rel=0" width="480"&gt;&lt;/iframe&gt;&lt;/p&gt;</summary><category term="Last.fm"></category><category term="audioscrobbler"></category><category term="beta"></category></entry><entry><title>My Linux on theÂ Desktop</title><link href="https://fuzz.me.uk/my-linux-on-desktop/" rel="alternate"></link><updated>2012-05-07T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-05-07:my-linux-on-desktop/</id><summary type="html">&lt;p&gt;As some of you know I&amp;rsquo;m a big Microsoft fanboy as 90% of what I do is based around &lt;span class="caps"&gt;MS&lt;/span&gt; tech (be it C#, .&lt;span class="caps"&gt;NET&lt;/span&gt;, &lt;span class="caps"&gt;SQL&lt;/span&gt; Server and so on); with this in mind I always find myself amused by the eternal &amp;ldquo;next year will be the year of Linux on &lt;span class="caps"&gt;PC&lt;/span&gt;&amp;rdquo;, which is now accentuated by the lukewarm feelings parts of the internet has over Windows&amp;nbsp;8.&lt;/p&gt;
&lt;p&gt;The problem with Linux on the Desktop is that it doesn&amp;rsquo;t bring anything to the table that can&amp;rsquo;t be achieved in an easier/cleaner fashion using another &lt;span class="caps"&gt;OS&lt;/span&gt;, be it Windows or Mac &lt;span class="caps"&gt;OS&lt;/span&gt; X if you&amp;rsquo;re a Unix&amp;nbsp;fan.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Now imagine the following Linux&amp;nbsp;install:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xen Hypervisor (&lt;span class="caps"&gt;GPL2&lt;/span&gt;)&lt;/li&gt;
&lt;li&gt;Mint as the main &lt;span class="caps"&gt;OS&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Point updates are downloaded without interruption of the &amp;ldquo;default&amp;rdquo; main &lt;span class="caps"&gt;OS&lt;/span&gt;; when the user clicks on &amp;ldquo;Upgrade now&amp;rdquo; the boot process just points to a different image on the disk. If something doesn&amp;rsquo;t work, the user can just use a previous version that did&amp;nbsp;work.&lt;/li&gt;
&lt;li&gt;A new package&amp;nbsp;manager&lt;/li&gt;
&lt;li&gt;The user directory is &amp;ldquo;protected&amp;rdquo; by Next3 (or Next4), so that if the &amp;ldquo;Upgrade now&amp;rdquo; process creates an incompatible data set, the &amp;ldquo;Rollback&amp;rdquo; feature can automatically move back to the correct version of the&amp;nbsp;data.&lt;/li&gt;
&lt;li&gt;All of the above happens without any user visibility other than &amp;ldquo;Upgrade&amp;rdquo; and &amp;ldquo;Rollback&amp;rdquo;; if architected properly the Rollback can be on a per app basis such that different versions of the &lt;span class="caps"&gt;OS&lt;/span&gt; are loaded&amp;nbsp;simultaneously!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Of course this feature isn&amp;rsquo;t going to be consumer desired, but it does fix a problem consumers have; systems getting out of date and compatibility when systems do get updated. When coupled with Next3 you can also implement a safety net for data backup, for example, that file versioning can be used to implement a &amp;ldquo;backup vault&amp;rdquo; to protect the user from accidental deletes and&amp;nbsp;changes.&lt;/p&gt;
&lt;p&gt;Even better if you&amp;rsquo;ve already got the setup for Xen+Multiple OSes, you can bake in &amp;ldquo;read only&amp;rdquo; features to improve the security of the system. If something appears to &amp;ldquo;compromise&amp;rdquo; one of the guest OSes, it can be re-initialized and the user warned of which site/activity/program caused the&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;So that immediately gives Linux the possibility of an &lt;span class="caps"&gt;OS&lt;/span&gt; advantage if an &lt;span class="caps"&gt;OEM&lt;/span&gt; were to take advantage of these features. Continuous update, continuous compatibility, and continuous backup/restore are all features currently lacking from &amp;ldquo;mainstream&amp;rdquo; Linux today that are actually rather valuable. It&amp;rsquo;s also worth noting that &lt;span class="caps"&gt;OS&lt;/span&gt; X and Windows already offer something like &amp;ldquo;Continuous update&amp;rdquo;, but don&amp;rsquo;t truly promise &amp;ldquo;continuous&amp;nbsp;compatibility&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;The sandboxing is also a good feature even if it isn&amp;rsquo;t in of itself a strong selling&amp;nbsp;point.&lt;/p&gt;
&lt;p&gt;To further mix it up the App Store model can be implemented ala the stable/unstable channel, adding another dimension of trusted/untrusted, where untrusted code/apps are &amp;ldquo;uncurated&amp;rdquo; and trusted code is &amp;ldquo;curated&amp;rdquo;. Users can have the advantages of iOS as well as the flexibility of &lt;span class="caps"&gt;OSS&lt;/span&gt; and &amp;ldquo;open&amp;rdquo; app stores. With the sandbox and hypervisor the threat of untrusted code is also diminished if untrusted apps are launched into special guest&amp;nbsp;OSes.&lt;/p&gt;</summary><category term="linux"></category><category term="PC"></category><category term="desktop"></category><category term="virtualization"></category></entry><entry><title>Google Drive - Not Ready forÂ Primetime</title><link href="https://fuzz.me.uk/google-drive-thoughts/" rel="alternate"></link><updated>2012-05-04T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-05-04:google-drive-thoughts/</id><summary type="html">&lt;p&gt;&lt;img class="img-responsive" src="/images/imported-old/google-drive.PNG" style="float:left; padding-right:10px"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://drive.google.com"&gt;Google Drive&lt;/a&gt; has been available for some time now and I&amp;rsquo;ve been playing with it for a bit. I just want to mention right now that I&amp;rsquo;m a big Dropbox fan and also a user of Microsoft&amp;rsquo;s&amp;nbsp;SkyDrive.&lt;/p&gt;
&lt;p&gt;Going back to Google Drive, there&amp;rsquo;s no burying the lead, it sucks. I&amp;rsquo;ve been testing the desktop app for automatically syncing files and there are some fatal flaws that makes it unreliable and&amp;nbsp;unusable.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;First, it doesn&amp;rsquo;t work. I was able to get the program to error out, just like &lt;a href="http://productforums.google.com/forum/#!topic/drive/8DNEH3U6vbE"&gt;seemingly everyone else&lt;/a&gt;. Since the error can occur during the initializing phase of the program as well as afterwards, it stops functioning and sometimes cannot be started again without always erroring out. The only fix is to &amp;lsquo;disconnect&amp;rsquo; the drive which is one of the biggest mistakes of&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;Why is that the biggest mistake of all? Because you can only &amp;lsquo;reconnect&amp;rsquo; the drive to an empty folder. If the program gets in an infinite error loop, the only fix is to &amp;lsquo;disconnect&amp;rsquo; the GDrive. When doing so, you are presented with an ominous message that seems like it will delete everything in the GDrive folder, and this isn&amp;rsquo;t too far from the truth. You cannot re-enable the program without pointing it to an empty folder. If you think you&amp;rsquo;re clever, you&amp;rsquo;d just try to sneak the files back into the folder to work around this strange requirement. This is what I tried and it failed miserably. The program would silently download the files anyway and save one version with a number in the&amp;nbsp;filename.&lt;/p&gt;
&lt;p&gt;Now, since the program errors out and requires a re-download of everything, I have to download 90,000 files again. I gave up on this process after 3 days, because I just knew it was going to finish and then decided to error out&amp;nbsp;again.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Second, it&amp;rsquo;s slow. No, I&amp;rsquo;m not talking about upload bandwidth and a currently overloaded service. I mean the method it uses to scan the files and sync them to the cloud version is clumsily done. The overhead for this process is insanely high: there is no way to check for blocks of files, so it must check each file individually. I had only 3 megs worth of files and 2000 updates took a very, very long time. I included some more folders that used many small files (around 90,000 files) and it took days to&amp;nbsp;synchronize.&lt;/p&gt;
&lt;p&gt;Also, while copying the files to the folder, the file copy process slowed to a crawl &amp;mdash; a 1 minute process was going to take an hour to finish. I was able to close the program to complete the copy in a normal amount of time. So, file operations are much, much slower when working in this folder and this ties into the third issue&amp;nbsp;below.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;Third, it only supports a single folder location. This means you&amp;rsquo;d have to use a link (junction/hardlink,symlink) to other folders outside the &amp;lsquo;drive&amp;rsquo; folder. Because the program only monitors the single folder, any changes to the linked folders will not register and may only be seen and updated during the initial scan at startup. To counter this, folders must be moved to this location and then links placed in the original position. It&amp;rsquo;s just as easy to do as otherwise, but it&amp;rsquo;s extremely counter intuitive and takes a while to figure out through trial and&amp;nbsp;error.&lt;/p&gt;
&lt;p&gt;Now, you may say that Dropbox and SkyDrive also support only a single folder location, but at least they know how to parse and use links so that if something in a linked folder changes it gets uploaded then instead of at&amp;nbsp;startup.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;To sum it up: It&amp;rsquo;s broken, slow enough to make it impractical, &amp;lsquo;works&amp;rsquo; only on a single folder, and the files on your computer are a treated as a &amp;lsquo;second class&amp;nbsp;citizen&amp;rsquo;.&lt;/p&gt;</summary><category term="Google"></category><category term="Google Drive"></category><category term="sync"></category></entry><entry><title>Meum PerlumÂ equum</title><link href="https://fuzz.me.uk/perl_in_latin/" rel="alternate"></link><updated>2012-05-02T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-05-02:perl_in_latin/</id><summary type="html">&lt;p&gt;I&amp;rsquo;m not one of the fans of Perl and would chose Python over it every day of the week, but I still have to admit that it has some really fun things built around&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;So, you know how, in order to have a good programming language, you need to have a good lexical structure. Most programming languages are based on English, which, let&amp;rsquo;s be honest here, isn&amp;rsquo;t the most consistent language out there when it comes to grammar and structure. This would also mean that programming languages based on English could be improved if they were based on some other language,&amp;nbsp;right?&lt;/p&gt;
&lt;p&gt;Well, someone though about that and decided to write a module that makes it possible to write Perl programs in Latin. You can find the module and the reasoning behind it &lt;a href="http://www.csse.monash.edu.au/~damian/papers/HTML/Perligata.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Just for fun, here&amp;rsquo;s the code for the &lt;a href="http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"&gt;sieve of Eratosthenes&lt;/a&gt; (sic, it&amp;rsquo;s a Greek mathematical algorithm for finding all the prime numbers up to a given&amp;nbsp;limit.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="nn"&gt;Lingua::Romana::&lt;/span&gt;&lt;span class="n"&gt;Perligata&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;inquementum&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;biguttam&lt;/span&gt; &lt;span class="n"&gt;egresso&lt;/span&gt; &lt;span class="n"&gt;scribe&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;meo&lt;/span&gt; &lt;span class="n"&gt;maximo&lt;/span&gt; &lt;span class="n"&gt;vestibulo&lt;/span&gt; &lt;span class="n"&gt;perlegamentum&lt;/span&gt; &lt;span class="n"&gt;da&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;da&lt;/span&gt; &lt;span class="n"&gt;duo&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;maximum&lt;/span&gt; &lt;span class="n"&gt;conscribementa&lt;/span&gt; &lt;span class="n"&gt;meis&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;dum&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt; &lt;span class="n"&gt;decapitamentum&lt;/span&gt; &lt;span class="n"&gt;damentum&lt;/span&gt; &lt;span class="n"&gt;nexto&lt;/span&gt;
    &lt;span class="n"&gt;fac&lt;/span&gt; &lt;span class="n"&gt;sic&lt;/span&gt;
        &lt;span class="n"&gt;nextum&lt;/span&gt; &lt;span class="n"&gt;tum&lt;/span&gt; &lt;span class="n"&gt;novumversum&lt;/span&gt; &lt;span class="n"&gt;scribe&lt;/span&gt; &lt;span class="n"&gt;egresso&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
        &lt;span class="n"&gt;lista&lt;/span&gt; &lt;span class="n"&gt;sic&lt;/span&gt; &lt;span class="n"&gt;hoc&lt;/span&gt; &lt;span class="n"&gt;recidementum&lt;/span&gt; &lt;span class="n"&gt;nextum&lt;/span&gt; &lt;span class="n"&gt;cis&lt;/span&gt; &lt;span class="n"&gt;vannementa&lt;/span&gt; &lt;span class="n"&gt;da&lt;/span&gt; &lt;span class="n"&gt;listis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
    &lt;span class="n"&gt;cis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Believe it or not that is absolutely grammatically correct&amp;nbsp;Latin.&lt;/p&gt;</summary><category term="perl"></category><category term="latin"></category><category term="geek"></category></entry><entry><title>SQL vsÂ insert_language_here</title><link href="https://fuzz.me.uk/sql_vs_other_lang/" rel="alternate"></link><updated>2012-04-27T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-04-27:sql_vs_other_lang/</id><summary type="html">&lt;p&gt;I was chatting online a few days ago about why people use &lt;span class="caps"&gt;SQL&lt;/span&gt; instead of writing regular code in whatever language you use to do data storage, querying and manipulation. It was a fun and long conversation stemming from the fact that the one who started it knew next to nothing about &lt;span class="caps"&gt;SQL&lt;/span&gt; as a language nor did he want to&amp;nbsp;learn.&lt;/p&gt;
&lt;p&gt;But this made me think about a good example to show why one would chose &lt;span class="caps"&gt;SQL&lt;/span&gt; instead of reinventing the wheel, and, because I was hungry as hell at that point, this is what I came up&amp;nbsp;with.&lt;/p&gt;
&lt;p&gt;Think of it like this. Say I want a pizza, and I have to tell a computer how to make&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;In C#, it would&amp;nbsp;be:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Flour&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Flour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FlourType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Wheat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Water&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Water&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;WaterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Filtered&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Yeast&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Yeast&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;TomatoSauce&lt;/span&gt; &lt;span class="n"&gt;ts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TomatoSauce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Ragu"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Sausage&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Sausage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"pork"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Spiciness&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Medium&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Pepperoni&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Pepperoni&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;CheeseMix&lt;/span&gt; &lt;span class="n"&gt;cm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;CheeseMix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"mozzarella"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"cheddar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"parmesan"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="n"&gt;Mixer&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Mixer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;Dough&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Mix&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Knead&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;Roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;ts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Spread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;using&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Oven&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Oven&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Degrees&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fahrenheit&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Bake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;Thread&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In &lt;span class="caps"&gt;SQL&lt;/span&gt; the same thing would be described&amp;nbsp;as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;
    &lt;span class="n"&gt;pizza&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;topping&lt;/span&gt;
&lt;span class="k"&gt;from&lt;/span&gt;
    &lt;span class="n"&gt;Pizzas&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;
    &lt;span class="k"&gt;cross&lt;/span&gt; &lt;span class="k"&gt;join&lt;/span&gt; &lt;span class="n"&gt;Toppings&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;
&lt;span class="k"&gt;where&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;topping&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'tomato sauce'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cheese'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'sausage'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'pepperoni'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, what would you chose? And do you have any other good&amp;nbsp;examples?&lt;/p&gt;</summary><category term="SQL"></category><category term="geek"></category></entry><entry><title>xkcd April FoolsÂ gag</title><link href="https://fuzz.me.uk/xkcd-april-fools-2012/" rel="alternate"></link><updated>2012-04-01T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-04-01:xkcd-april-fools-2012/</id><summary type="html">&lt;p&gt;A nice and geeky xkcd strip for this year&amp;rsquo;s April Fools day talking about perception bias in the form of&amp;nbsp;umwelt.&lt;/p&gt;
&lt;p&gt;The alt text&amp;nbsp;reads:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Umwelt is the idea that because their senses pick up on different things, different animals in the same ecosystem actually live in very different worlds. Everything about you shapes the world you inhabit&amp;mdash;from your ideology to your glasses prescription to your browser window&amp;nbsp;size.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The strips seem to be generated based on what browser the user is using, as well as the size of the window and the &lt;span class="caps"&gt;IP&lt;/span&gt;&amp;nbsp;address.&lt;/p&gt;
&lt;p&gt;&lt;iframe class="imgur-album" frameborder="0" height="550" src="//imgur.com/a/C4j2F/embed" width="100%"&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;As usual, Randall Munroe proves to be&amp;nbsp;awesome.&lt;/p&gt;</summary><category term="xkcd"></category><category term="april fools"></category><category term="comic"></category></entry><entry><title>Bip to Energymech IRC logÂ converter</title><link href="https://fuzz.me.uk/bip-to-energymech/" rel="alternate"></link><updated>2012-03-27T00:00:00+03:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-03-27:bip-to-energymech/</id><summary type="html">&lt;p&gt;The great thing about knowing how to code is being able to build things that help you&amp;nbsp;out.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve recently had to convert some &lt;span class="caps"&gt;IRC&lt;/span&gt; logs from the &lt;a href="http://bip.milkypond.org/"&gt;Bip&lt;/a&gt; format to the Energymech format used by &lt;a href="http://wiki.znc.in/"&gt;&lt;span class="caps"&gt;ZNC&lt;/span&gt;&lt;/a&gt; in order to be able to then generate some statistics from them using &lt;a href="http://pisg.sourceforge.net/"&gt;pisg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My first approach was to hack together some macros and just plow through the logs (fortunately there weren&amp;rsquo;t that many), but this had several&amp;nbsp;downsides:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;by using macros I had to take out certain data which could be used to generate&amp;nbsp;statistics&lt;/li&gt;
&lt;li&gt;it&amp;rsquo;s a manual job and doesn&amp;rsquo;t scale well time-wise, despite being able to automate it to some&amp;nbsp;extent&lt;/li&gt;
&lt;li&gt;can&amp;rsquo;t be easily shared with&amp;nbsp;others&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;After finishing parsing the logs I decided that it&amp;rsquo;s best to make a learning experience out of it and code a Python script that goes through all the logs and generates the correct output; I knew it wasn&amp;rsquo;t a difficult task (heck, I&amp;rsquo;ve thrown it together in around 3 hours of coding and debugging overall) so all I had to do was get&amp;nbsp;cracking.&lt;/p&gt;
&lt;p&gt;The largest issue I had with it was regarding the way Python handles regex&amp;nbsp;substitution.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p&gt;Whoever makes me understand why this Python regex substitution doesn&amp;rsquo;t work gets a cookie and my eternal gratitude. &lt;a href="http://t.co/fj8Nn6i4" title="http://bit.ly/GP8lM3"&gt;bit.ly/GP8lM3&lt;/a&gt;&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a data-datetime="2012-03-27T00:09:01+00:00" href="https://twitter.com/fuzzmz/status/184431795746516992"&gt;March 27, 2012&lt;/a&gt;&lt;/blockquote&gt;
&lt;script charset="utf-8" src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;
&lt;p&gt;Thanks to the great wonder that is the Internet I could get an answer to my question in a couple of hours and continue on my marry&amp;nbsp;way.&lt;/p&gt;
&lt;blockquote class="twitter-tweet tw-align-center"&gt;&lt;p&gt;D&amp;rsquo;oh, strings in Python are immutable so my re.sub doesn&amp;rsquo;t modify the string in place which means I need to, you know, save the&amp;nbsp;result!&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a data-datetime="2012-03-27T03:20:19+00:00" href="https://twitter.com/fuzzmz/status/184479937229627392"&gt;March 27, 2012&lt;/a&gt;&lt;/blockquote&gt;
&lt;script charset="utf-8" src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;
&lt;p&gt;Another nice tip I got was to pre-compile the regex before going through the loop which speeds up things considerably when dealing with lots of text. It was as simple as&amp;nbsp;a:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;

&lt;span class="n"&gt;talk_mask&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'\!.*?\:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;connect_mask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'\!.*?\has'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;quit_info&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'\quit.*?\]'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;find_nick&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'\&amp;lt;* .*?\!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;time_mask&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'([0-1]\d|2[0-3]):([0-5]\d):([0-5]\d)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="download"&gt;&lt;a href="https://github.com/fuzzmz/bip-to-energymech"&gt;Download&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve of course made the code public. It can be found and downloaded from &lt;a href="https://github.com/fuzzmz/bip-to-energymech"&gt;GitHub&lt;/a&gt; which is also the place to report bugs or make&amp;nbsp;suggestions.&lt;/p&gt;</summary><category term="irc"></category><category term="python"></category><category term="bip"></category><category term="energymech"></category><category term="log"></category><category term="log converter"></category></entry><entry><title>Short thoughts on Windows 8 &amp;Â Metro</title><link href="https://fuzz.me.uk/thoughts-on-metro/" rel="alternate"></link><updated>2012-03-07T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-03-07:thoughts-on-metro/</id><summary type="html">&lt;p&gt;There&amp;rsquo;s been a lot of talk about the recent release of the Windows 8 Consumer Preview and of the new Start Screen and Metro interface. I&amp;rsquo;ve been running it for some time now and will post a full article containing my impressions sometime next week, but until then I wanted to talk a bit about the most polarizing aspect of the new &lt;span class="caps"&gt;OS&lt;/span&gt;: the new start screen and the Metro design&amp;nbsp;language.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img alt="Windows 8 Beta fish" class="img-responsive" src="/images/imported-old/win8_header.png"/&gt;&lt;/p&gt;
&lt;p&gt;A lot of people say that the new design is for kids, it&amp;rsquo;s &amp;ldquo;Fisher Price&amp;rdquo; (going back to the same term used when Windows &lt;span class="caps"&gt;XP&lt;/span&gt; first launched), it isn&amp;rsquo;t serious enough and looks like&amp;nbsp;crap.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s not &amp;lsquo;twee&amp;rsquo; to me. It&amp;rsquo;s not Fisher Price. It&amp;rsquo;s akihabara and Vegas. It&amp;rsquo;s bold, brash, American, neon, digital, masculine. It&amp;rsquo;s true that they didn&amp;rsquo;t go skeumorphic. There is no car interior that looks this digital. There are very few home interiors that look like this. It&amp;rsquo;s about media, very tech magazine-ish. And the colors don&amp;rsquo;t&amp;nbsp;match.&lt;/p&gt;
&lt;p&gt;Now, before I continue, let me say I&amp;rsquo;m among the few that like Metro as a desktop improvement. Finally they fixed notifications, widgets and online integration. Perhaps in time my need for chrome will fade away, who knows? Certainly it&amp;rsquo;s easier to recommend to family&amp;nbsp;members.&lt;/p&gt;
&lt;p&gt;But talking purely aesthetically, there&amp;rsquo;s a proportion of the non-techy world that is female and I&amp;rsquo;m guessing won&amp;rsquo;t like this. It&amp;rsquo;s like Media Center, which was also savagely&amp;nbsp;off-putting.&lt;/p&gt;
&lt;p&gt;Just look at it for a second. What does it remind you of? Bricks. Legos. Banner ads. A crazy quilt, perhaps. Anecdotally, by the way, Lego has had to re-design, re-brand and re-package LEGOs to appeal to girls. So I think there might be a gender disconnect&amp;nbsp;here.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s functionally better, but I think that aesthetics will influence sales. Particularly business sales. And it&amp;rsquo;s so subjective, while it might matter, I&amp;rsquo;m not predicting rejection or revulsion or anything specific. But I think &lt;span class="caps"&gt;MS&lt;/span&gt;, like certain car makers, skews masculine at times and I think Metro shows this more than the traditional desktop that was less in your face and less geometric, where you&amp;rsquo;d see a wallpaper of a green field (and yes I know the desktop is still there). Not that necessarily women have any problem with LEGOs or geometry or bricks, but statistically they seems to find those less appealing, again, afaict, imo and ymmv and all that, not meaning to caricature the female gender or paint with broad strokes, we&amp;rsquo;re all different after&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;Also, we can take a peek at Android to see how &amp;ldquo;male design&amp;rdquo; has influenced sales: it also skews masculine due to Verizon&amp;rsquo;s Droid ads and Google culture, but seems to be doing pretty well for himself, especially considering the &lt;span class="caps"&gt;ICS&lt;/span&gt; redesign which, as Metro, gets rid of most skeumorphism in favour of lines and strong colours and&amp;nbsp;typography.&lt;/p&gt;
&lt;p&gt;Back to Metro, perhaps they need a live tile with, &amp;ldquo;Don&amp;rsquo;t Panic,&amp;rdquo; written in large friendly letters. But the truth is that nothing stops you from having a start screen that is visually made up mostly of pictures of your friends &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; family which shows their latest messages &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt;&amp;nbsp;updates.&lt;/p&gt;</summary><category term="Windows"></category><category term="Metro"></category><category term="Windows 8"></category><category term="Microsoft"></category><category term="design"></category><category term="UX"></category><category term="UI"></category><category term="skeumorphic"></category></entry><entry><title>A look atÂ FTPbox</title><link href="https://fuzz.me.uk/ftpbox-review/" rel="alternate"></link><updated>2012-02-22T00:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-02-22:ftpbox-review/</id><summary type="html">&lt;p&gt;&lt;img class="img-responsive" src="/images/imported-old/ftpbox.png" style="float:left; padding-right:10px"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.dropbox.com/"&gt;Dropbox&lt;/a&gt; is one of the most well known syncing services, and deservedly so, but one downside is that you have to use their servers for storing data, and with that, the account space limits they have in place. But what if you could use your own server to act as a repository for your synced&amp;nbsp;files?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ftpbox.org/"&gt;FTPbox&lt;/a&gt; comes to solve just that problem, or at least tries, by offering a way to synchronize your files to your own host, via &lt;span class="caps"&gt;FTP&lt;/span&gt;. The reason I say tries is that FTPbox is still in beta and has a few problems, some caused by the software itself, others caused by the fact that you&amp;rsquo;re limited by what your hosting provider is offering you (in terms of &lt;span class="caps"&gt;FTP&lt;/span&gt; availability and&amp;nbsp;options).&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="the-software"&gt;The&amp;nbsp;software&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;d first like to address the problems that are strictly tied to the application. First of all, the version I tested (beta 1.8) wanted to write and read its settings file in the \Program Files\FTPbox directory, which always caused an error and eventually crashed on Windows 7 (and it should act the same on Vista) unless it was being run as administrator, which granted read/write privileges for the Program Files folder. Fortunately, because the application is open-source, I&amp;rsquo;ve submitted a patch which fixes this problem by saving the settings file under %AppData%, where it should&amp;nbsp;belong.&lt;/p&gt;
&lt;p&gt;You also need to use the same location for the sync folder on all computers; if you don&amp;rsquo;t the application will create multiple folders corresponding to the location of the sync folder on the remote computer (see video for more clear&amp;nbsp;example).&lt;/p&gt;
&lt;p&gt;Secondly, it feels sluggish and tends to eat up a lot of resources, which makes me think that the application isn&amp;rsquo;t properly threaded (and the code confirms that to some extent); at first I thought that my .Net Framework 4 install got hosed somehow, but after throwing it in a &lt;span class="caps"&gt;VM&lt;/span&gt; the problem&amp;nbsp;persisted.&lt;/p&gt;
&lt;p&gt;Another small inconvenience, at least compared to Dropbox, is the fact that it can only watch a single folder, so all the data you want synced must reside in that folder. Add to that the lack of icon overlays to give you visual feedback on the state of the files and folders (syncing, synced, etc.), no indication of the speed of the synchronization process (or a percentage for the current sync) and no shell integration except the tray&amp;nbsp;icon.&lt;/p&gt;
&lt;p&gt;What it does offer though is a web interface to manage your files remotely, which currently consists only of uploading files, deleting them or sharing them with other people. So in short, it&amp;rsquo;s pretty basic at this point in time. I need to stress though that this is still a beta, so a work in progress, and a lot of the things I mentioned above can, and hopefully will get&amp;nbsp;fixed.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="the-service"&gt;The&amp;nbsp;Service&lt;/h2&gt;
&lt;p&gt;Now, the application is only one part of what FTPbox is trying to be, and that is a a synchronizing service. The main problem is that the most important aspects of the service are dependent on your hosting&amp;nbsp;provider.&lt;/p&gt;
&lt;p&gt;The first thing that comes to mind is the available space, which tends not to be that large of a problem, with most hosting services offering hundreds of gigabytes of space. What might become a problem though is the maximum bandwidth allowed: if you&amp;rsquo;re trying to sync really large files on multiple computers you can exhaust your available bandwidth relatively easy, especially if you also want to share those files with other&amp;nbsp;people.&lt;/p&gt;
&lt;p&gt;The second thing is upload speed, which can vary greatly depending on how close you are to the server; if large services tend to use multiple servers scattered throughout the world which get you good speeds, you&amp;rsquo;re stuck with what you have. And even if the speed might be great for you, it might be extremely slow for your friend in the &lt;span class="caps"&gt;US&lt;/span&gt; with whom you&amp;rsquo;re sharing your files&amp;nbsp;with.&lt;/p&gt;
&lt;p&gt;Another aspect to consider is that other services usually backup their data, which means that if anything goes wrong they still have copies. This isn&amp;rsquo;t that large of an issue though considering that you&amp;rsquo;re syncing the files, so they should exist on at least a computer, which in turn will get synced to the cloud - well, to your&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;But the most important part is security. Despite being advertised as secure, it&amp;rsquo;s up to your hosting provider to offer &lt;span class="caps"&gt;SFTP&lt;/span&gt; access for transfer through &lt;span class="caps"&gt;SSH&lt;/span&gt;, or &lt;span class="caps"&gt;FTPS&lt;/span&gt; for &lt;span class="caps"&gt;TLS&lt;/span&gt;/&lt;span class="caps"&gt;SSL&lt;/span&gt; encryption; in case your hosting provider doesn&amp;rsquo;t offer them it means that your data is sent in the clear and anyone listening it can have access to it. You also need to take into account that the files aren&amp;rsquo;t encrypted on the server, which means that there&amp;rsquo;s the possibility that your server admin can view&amp;nbsp;it.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="the-video"&gt;The&amp;nbsp;video&lt;/h2&gt;
&lt;p&gt;Unfortunately, because the application is currently in beta, there were some problems during the recording of the video. I chose to keep everything as is to show the problems a user might face while using&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Please remember though that FTPbox is a work in progress and this not represent the final version of the&amp;nbsp;software.&lt;/p&gt;
&lt;p&gt;Also, sorry for the lack of the mouse cursor, just now noticed that it&amp;rsquo;s&amp;nbsp;missing.&lt;/p&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="360" src="http://www.youtube-nocookie.com/embed/tEzhMorMohU?rel=0" width="640"&gt;&lt;/iframe&gt;</summary><category term="FTPbox"></category><category term="Dropbox"></category><category term="syncing"></category></entry><entry><title>GitHub Pages - free websiteÂ hosting</title><link href="https://fuzz.me.uk/github-hosting/" rel="alternate"></link><updated>2012-02-21T01:37:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-02-21:github-hosting/</id><summary type="html">&lt;p&gt;From time to time I run into people who want to host a simple (or not so simple, as we&amp;rsquo;ll show later on in this post) website online but don&amp;rsquo;t want to spend money on hosting or even a domain&amp;nbsp;name.&lt;/p&gt;
&lt;p&gt;I know there are a lot of alternatives out there for just such a thing, but now I&amp;rsquo;ll talk about one which has the promise of keeping your files online without trying at the same time to fill your pages with ads, referral links or spam the living hell out of&amp;nbsp;you.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img alt="GitHub + html = love" class="img-responsive" src="/images/imported-old/github_pages_hosting.png"/&gt;&lt;/p&gt;
&lt;p&gt;Many regular internet users don&amp;rsquo;t know about GitHub, and it&amp;rsquo;s something I find normal. GitHub is a place to share code, and a lot of open source projects have their home there for users to view and contribute to&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;One nice feature that GitHub offers though is something called &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, which is a feature that allows users to publish content to the web by pushing the files to a GitHub repository. An easier way to put things is that they are hosting your website for you, free of&amp;nbsp;charge.&lt;/p&gt;
&lt;p&gt;Now, one of the downsides is the fact that they don&amp;rsquo;t offer advanced functions, such as a database, so popular blogging systems such as Wordpress can&amp;rsquo;t be hosted on GitHub Pages, which only serves .html pages. On the other hand, the majority of users don&amp;rsquo;t really need the full functionality Wordpress offers for example, and could very well use a static blog generator (a system which simply builds .html pages with your content) such as &lt;a href="http://readthedocs.org/docs/pelican/en/2.7.2/"&gt;Pelican&lt;/a&gt; - which allows you to write your posts in &lt;a href="http://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt; or &lt;a href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; and then generates the html files, even allowing comments by using &lt;a href="http://disqus.com"&gt;Disqus&lt;/a&gt; - or host an image gallery, a personal portfolio, or anything which can be built with &lt;span class="caps"&gt;HTML&lt;/span&gt;+&lt;span class="caps"&gt;CSS&lt;/span&gt;+&lt;span class="caps"&gt;JS&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;All it takes is to &lt;a href="http://help.github.com/win-set-up-git/"&gt;set up Git&lt;/a&gt;, optionally install a &lt;span class="caps"&gt;GUI&lt;/span&gt; interface such as &lt;a href="http://code.google.com/p/tortoisegit/"&gt;TortoiseGit&lt;/a&gt;,  &lt;a href="https://github.com/signup/free"&gt;create an account&lt;/a&gt; on GitHub and then follow the simple instructions on &lt;a href="http://pages.github.com/"&gt;Introduction to Pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I know this sounds complicated and might put off people, but trust me, it&amp;rsquo;s a fast setup, taking only around 10 minutes to get everything up and running; and once that is done you&amp;rsquo;ve got yourself a really safe place to host your website for free, which can withstand a huge influx of visitors (if one of your articles becomes really popular really fast), and without any risks to your data or online&amp;nbsp;identity.&lt;/p&gt;
&lt;p&gt;Oh, and they also allow you to use your own domain name for free if you have one&amp;nbsp;available.&lt;/p&gt;</summary><category term="hosting"></category><category term="github"></category><category term="github pages"></category><category term="free"></category></entry><entry><title>ArsTechnica February SC2Â Tournament</title><link href="https://fuzz.me.uk/ars-feb-sc2-tourn/" rel="alternate"></link><updated>2012-02-18T21:50:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-02-18:ars-feb-sc2-tourn/</id><summary type="html">&lt;p&gt;Well, it&amp;rsquo;s time for the somewhat monthly ArsTechnica Starcraft 2 tournament where almost every month I try and make less and less of a fool of myself and my incredibly bad play&amp;nbsp;style.&lt;/p&gt;
&lt;p&gt;You can also find live streams of the tournament on TwitchTV&amp;nbsp;at:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/h2ogoldfire"&gt;H20goldfire&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv"&gt;lorcasTV&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/creamfilling1"&gt;Creamfilling1&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="tournament-bracket"&gt;Tournament&amp;nbsp;bracket&lt;/h2&gt;
&lt;p&gt;&lt;a href="images/imported-old/arsfeb2.jpg" rel="lightbox" title="ArsTechnica February Starcraft 2 Tournament Brackets"&gt; &lt;img alt="" class="img-responsive" height="284" src="images/imported-old/arsfeb-thumb.jpg" width="600"/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="tournament-replays"&gt;Tournament&amp;nbsp;replays&lt;/h2&gt;
&lt;p&gt;The Starcraft 2 in-game replays can be downloaded either as a zip file from &lt;a href="http://bit.ly/arsfebsc2"&gt;here&lt;/a&gt; or individually from &lt;a href="http://drop.sc/packs/564"&gt;drop.sc&lt;/a&gt;. Please note that so far the archive isn&amp;rsquo;t complete, so not all games played are there. Currently I&amp;rsquo;m missing the following&amp;nbsp;matches:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Winners Round 1 - oremj vs&amp;nbsp;Creamfilling&lt;/li&gt;
&lt;li&gt;Winners Round 2 - &lt;span class="caps"&gt;MAXPOWER&lt;/span&gt; vs&amp;nbsp;Ravebomb&lt;/li&gt;
&lt;li&gt;Winners Round 2 - dajaaj vs&amp;nbsp;oremj&lt;/li&gt;
&lt;li&gt;Winners Round 3 - MooBob vs&amp;nbsp;oremj&lt;/li&gt;
&lt;li&gt;Losers Round 1 - &lt;span class="caps"&gt;MAXPOWER&lt;/span&gt; vs&amp;nbsp;Creamfilling&lt;/li&gt;
&lt;li&gt;Losers Round 3 - Ravebomb vs&amp;nbsp;dajaaj&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="tournament-videos"&gt;Tournament&amp;nbsp;videos&lt;/h2&gt;
&lt;p&gt;Bellow is a list of commentated videos of some of the&amp;nbsp;games:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309104917"&gt;Winners Bracket - lorcas vs MooBob -&amp;nbsp;ZvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105241"&gt;Winners Bracket - TheMantis vs Heartless -&amp;nbsp;PvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105409"&gt;Losers Bracket - lorcas vs TheMantis - ZvP - part&amp;nbsp;1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309105682"&gt;Losers Bracket - lorcas vs TheMantis - ZvP - part&amp;nbsp;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106051"&gt;Losers Bracket - lorcas vs &lt;span class="caps"&gt;MAXPOWER&lt;/span&gt; -&amp;nbsp;ZvT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106525"&gt;Losers Bracket - &lt;span class="caps"&gt;MAXPOWER&lt;/span&gt; vs MooBob - TvR - part&amp;nbsp;1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309106780"&gt;Losers Bracket - &lt;span class="caps"&gt;MAXPOWER&lt;/span&gt; vs MooBob - TvR - part&amp;nbsp;2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309107169"&gt;Losers Finals - dajaaj vs MooBob -&amp;nbsp;PvR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.twitch.tv/lorcastv/b/309107551"&gt;Grand Final - Heartless vs MooBob -&amp;nbsp;RvR&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="gaming"></category><category term="ArsTechnica"></category><category term="StarCraft 2"></category><category term="tournament"></category></entry><entry><title>Consistency</title><link href="https://fuzz.me.uk/consistency/" rel="alternate"></link><updated>2012-02-06T12:00:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-02-06:consistency/</id><summary type="html">&lt;p&gt;When living in a foreign country you get accustomed to its idiosyncrasies and adapt, but it&amp;rsquo;s still funny as hell to see other people struggle with the weirdness of a new&amp;nbsp;place.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;UK&lt;/span&gt; is no exception to this, and despite officially using the metric system there are still a lot of things that leave you scratching your&amp;nbsp;head.&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s do a small rundown of the current &lt;abbr title="A confused or chaotic state; a mess."&gt;&lt;span class="caps"&gt;SNAFU&lt;/span&gt;&lt;/abbr&gt;:&lt;/p&gt;
&lt;h2 id="distance-on-the-scale-of-roads"&gt;Distance on the scale of&amp;nbsp;roads&lt;/h2&gt;
&lt;p&gt;We all know road signs, right? The plates which tell us where a certain road leads to, or after what distance a certain exit will suddenly appear. Well, in the &lt;span class="caps"&gt;UK&lt;/span&gt; they use miles for distance for distances over 0.5 miles and meters under that; so one sign says junction in 1/2 miles; then were is a 300, 200 100, meter count down to the slip&amp;nbsp;road.&lt;/p&gt;
&lt;h2 id="distance-on-the-scale-of-houses-and-building-materials"&gt;Distance on the scale of houses and building&amp;nbsp;materials&lt;/h2&gt;
&lt;p&gt;Remember the totally typical American 2x4 (2 by 4)? Well, dimensions here are officially metric, but are conveniently foot sized. E.g. sheet plaster board is &amp;ldquo;nominally 8x4&amp;rdquo;, but officially&amp;nbsp;1220mmx2440mm.&lt;/p&gt;
&lt;h2 id="beer-draught"&gt;Beer&amp;nbsp;Draught&lt;/h2&gt;
&lt;p&gt;Small scale - multiples of 1/2 pints no exceptions that I&amp;rsquo;m aware of, the kegs are metric now. 50l I&amp;nbsp;think.&lt;/p&gt;
&lt;h2 id="beer-packaged"&gt;Beer&amp;nbsp;packaged&lt;/h2&gt;
&lt;p&gt;Mostly 330 or&amp;nbsp;500ml.&lt;/p&gt;
&lt;h2 id="fuel-petrol-diesel-heating-oil-propanebutanelpg-for-use-in-cars"&gt;Fuel petrol, diesel, heating oil, propane/butane(&lt;span class="caps"&gt;LPG&lt;/span&gt;) for use in&amp;nbsp;cars&lt;/h2&gt;
&lt;p&gt;Sold as &amp;ldquo;litres&amp;rdquo; but it&amp;rsquo;s really a density corrected volume that takes into account temperature and additive mixture so isn&amp;rsquo;t really litres that comes out the nozzle, but there is approximately zero general understanding of l/100km as a unit of fuel consumption miles per gallon is used&amp;nbsp;officially.&lt;/p&gt;
&lt;h2 id="fuel-propanebutanelpg-not-for-use-in-cars"&gt;Fuel propane/butane(&lt;span class="caps"&gt;LPG&lt;/span&gt;) not for use in&amp;nbsp;cars&lt;/h2&gt;
&lt;p&gt;Kg, unless it&amp;rsquo;s tanker delivered when it&amp;rsquo;s usually&amp;nbsp;litres.&lt;/p&gt;
&lt;h2 id="fuel-natural-gas"&gt;Fuel Natural&amp;nbsp;Gas&lt;/h2&gt;
&lt;p&gt;Therms (density corrected metric-ised cubic&amp;nbsp;feet).&lt;/p&gt;
&lt;h2 id="tyres"&gt;Tyres&lt;/h2&gt;
&lt;p&gt;mm and inches, there are too many old vehicles for genuine inches to have&amp;nbsp;disappeared.&lt;/p&gt;
&lt;h2 id="weight-everything-except-people"&gt;Weight (everything except&amp;nbsp;people)&lt;/h2&gt;
&lt;p&gt;Pretty much Kg and Tonnes&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;Except amusingly, lots of things are sold in metric amounts corresponding to their imperial equivalents eg 454g = 1 pound. They do the same thing with some (but not all) liquids sold in bottles. For instance, I get my milk delivered in glass bottles of about one pint, but I suspect that officially they are actually 574ml. If I buy milk in a supermarket in a plastic bottle it will be marked in fractional litres, corresponding to 0.5, 1, 2, 4 pints. &lt;span class="caps"&gt;BUT&lt;/span&gt; if I buy say, lemonade or other sugary carbonated type drinks, it will be in a 1.5 or 2 litre&amp;nbsp;bottle.&lt;/p&gt;
&lt;h2 id="weight-people"&gt;Weight&amp;nbsp;(people)&lt;/h2&gt;
&lt;p&gt;Stones and&amp;nbsp;pounds.&lt;/p&gt;
&lt;h2 id="temperature-not-the-weather"&gt;Temperature (not the&amp;nbsp;weather)&lt;/h2&gt;
&lt;p&gt;Celsius (but a significant proportion call it centigrade) and &amp;ldquo;Gas Mark&amp;rdquo; a weird unit that will not die still marked on some&amp;nbsp;ovens.&lt;/p&gt;
&lt;h2 id="temperature-weather"&gt;Temperature&amp;nbsp;(weather)&lt;/h2&gt;
&lt;p&gt;Celsius, but usually with Fahrenheit&amp;nbsp;available.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;All clear? But hey, the British always have high standards&amp;nbsp;:D&lt;/p&gt;</summary><category term="SI"></category><category term="metric system"></category><category term="UK"></category><category term="idiosyncrasy"></category></entry><entry><title>Patterns</title><link href="https://fuzz.me.uk/patterns/" rel="alternate"></link><updated>2012-01-26T03:28:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-01-26:patterns/</id><summary type="html">&lt;p&gt;&lt;img alt="No sleep &amp;amp; regrets" class="img-responsive" src="/images/imported-old/sleep_late.jpg"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;From time to time I my life warps and distorts and I manage to get myself stuck in a loop: go to bed at 9am, wake up at 4pm, spend the rest of the &amp;ldquo;day&amp;rdquo; coding, listening to music and chatting with&amp;nbsp;people.&lt;/p&gt;
&lt;p&gt;I guess this behavior is also enabled by the fact that nothing much happens during my new sleep hours; let&amp;rsquo;s be honest here, most normal people are either at work or school during that interval, or it&amp;rsquo;s too early for the &lt;span class="caps"&gt;US&lt;/span&gt; denizens to be online, so starting the day at 4pm actually makes sense, in a weird and twisted way, not to mention the fact that I love the night and the tranquility it brings. There&amp;rsquo;s nothing like looking outside at the darkness, counting the few passing cars between writing lines of code. Maybe it&amp;rsquo;s a bit too romanced but night seems to be the time of day when I manage to focus the&amp;nbsp;best.&lt;/p&gt;
&lt;p&gt;I also find myself procrastinating a whole lot more than before, despite being more productive than I&amp;rsquo;ve been in ages; what&amp;rsquo;s even weirder is that procrastination takes the form of reading: I&amp;rsquo;ve slowly started to read again, and to my huge surprise actually devoured a book in only two nights between coding&amp;nbsp;sessions.&lt;/p&gt;
&lt;p&gt;This might also have something to do with the book, &lt;a href="http://www.amazon.co.uk/dp/1846059372"&gt;Ready Player One&lt;/a&gt; by Ernest Cline, a book aptly defined as nostalgia porn&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;, built around a contest deeply connected to all things 80s geek, set in a virtual world, filled with danger and mistery. I actually read it as a sort of Neverending Story for the inner-geek and will most likely go through it again after watching the movies it quoted that I&amp;rsquo;ve, to my dire shame, missed. In any case, you can find &lt;a href="http://www.goodreads.com/review/show/264852855"&gt;my review of the book&lt;/a&gt;, and trust me, you&amp;rsquo;ll love this book regardless of your views on geekdom, the 80s and fantasy&amp;nbsp;stories.&lt;/p&gt;
&lt;p&gt;But I digresss, so let&amp;rsquo;s get back to the unknown thing I was trying to write&amp;nbsp;about.&lt;/p&gt;
&lt;p&gt;The main reason I love coding is because it&amp;rsquo;s a perfect form of escapism: what better way to escape a life you&amp;rsquo;re not really thrilled with, at least at this current point, than to know that you have absolute control, which is what code gives you. You are the one manipulating the world under your fingers, in a much more personal and direct way than just playing a computer game, for example; everything that happens is a direct consequence of your actions and everything is self-reliant and safe from outside influences. Put it simply, there&amp;rsquo;s no one else to blame for the shit that happens except&amp;nbsp;yourself.&lt;/p&gt;
&lt;p&gt;And escapism is the thing I need most dearly right now, despite not really being able to afford it. Why is that? Because every time I&amp;rsquo;m stuck in this loop things tend to start deteriorating: I get less and less sleep, neglect eating, my social interactions start to suffer (despite being online 99% of the time I&amp;rsquo;m awake), and then eventually I&amp;rsquo;ll start losing my&amp;nbsp;focus.&lt;/p&gt;
&lt;p&gt;Now, losing focus is a bit of a fortunate event during this time, because it means I&amp;rsquo;ll start becoming more and more frustrated with my mistakes and reach a point where I&amp;rsquo;ll either give up, break the pattern and return to a normal life by most standards, or I&amp;rsquo;ll become even more ambitioned and plow my way through what I have to get&amp;nbsp;done.&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;&lt;img alt="Write drunk; edit sober - Ernest Hemmingway" class="img-responsive" src="/images/imported-old/write_edit.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;If you reached this point in the article I congratulate you, and thank you for being stoic enough to put up with my&amp;nbsp;drivel.&lt;/p&gt;
&lt;p&gt;For me though it&amp;rsquo;s time to call it a night, or at least try to. &lt;img class="img-responsive" src="/images/imported-old/baah.gif" style="float:right; padding-right:10px"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;&lt;a href="http://www.goodreads.com/review/show/173171387"&gt;Flannery&amp;rsquo;s review on Goodreads&lt;/a&gt;&amp;nbsp;&lt;a class="footnote-backref" href="#fnref:1" rev="footnote" title="Jump back to footnote 1 in the text"&gt;â©&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary><category term="sleep"></category><category term="self"></category></entry><entry><title>Playing withÂ Python</title><link href="https://fuzz.me.uk/playing-with-python/" rel="alternate"></link><updated>2012-01-22T01:37:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-01-22:playing-with-python/</id><summary type="html">&lt;p&gt;I was a bit bored so I decided to make a short screencast in which I solved exercise 26 of &lt;a href="http://learnpythonthehardway.org/"&gt;Learn Python The Hard Way&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It all started because of a thread on the Good Old Games forum where MrWilli &lt;a href="http://www.gog.com/en/forum/general/what_do_i_need_to_learn_my_first_computer_language/post1"&gt;was asking about a good way to start learning programming&lt;/a&gt;, so this is goes out to him and all the nice people over at &lt;a href="http://gog.com"&gt;&lt;span class="caps"&gt;GOG&lt;/span&gt;.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It was all done in mixed environment, where the code editing and versioning was done on Windows using Sublime Text 2 and the actual Python install was under an Ubuntu &lt;span class="caps"&gt;VM&lt;/span&gt; running on top of Oracle Virtualbox, mostly because I didn&amp;rsquo;t want to install Python under&amp;nbsp;Windows.&lt;/p&gt;
&lt;hr/&gt;
&lt;iframe allowfullscreen="" frameborder="0" height="360" src="https://www.youtube-nocookie.com/embed/Xol9gXlsJ8U?rel=0" width="640"&gt;&lt;/iframe&gt;</summary><category term="python"></category><category term="video"></category><category term="coding"></category></entry><entry><title>Up, up,Â backup!</title><link href="https://fuzz.me.uk/backups/" rel="alternate"></link><updated>2012-01-20T03:38:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-01-20:backups/</id><summary type="html">&lt;p&gt;As I was saying at the end of the last post, locking myself out of the server really made me want to have implemented my backup mechanism sooner, especially considering that at this point in the life of &lt;span class="caps"&gt;QWERTY&lt;/span&gt; (my &lt;span class="caps"&gt;VPS&lt;/span&gt;) there isn&amp;rsquo;t that much to back&amp;nbsp;up.&lt;/p&gt;
&lt;p&gt;In short, my backup needs are&amp;nbsp;simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Archive the important data:&lt;ul&gt;
&lt;li&gt;&lt;span class="caps"&gt;IRC&lt;/span&gt; bouncer&amp;nbsp;logs&lt;/li&gt;
&lt;li&gt;git&amp;nbsp;repositories&lt;/li&gt;
&lt;li&gt;configuration&amp;nbsp;settings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Upload the archive to a remote&amp;nbsp;server;&lt;/li&gt;
&lt;li&gt;Repeat 1. and 2.&amp;nbsp;daily.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="archiving-the-data"&gt;Archiving the&amp;nbsp;data&lt;/h2&gt;
&lt;p&gt;This is a really simple bash script which creates a .tar.gz archive of the folders I specify. I could further improve the script by making it do incremental backups instead of creating a new archive each day, but considering that this is a fast and dirty version of it, and that I don&amp;rsquo;t have that much stuff to back up, it&amp;rsquo;ll do for&amp;nbsp;now.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
date
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"############### Backing up files on the system... ###############"&lt;/span&gt;

&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;server_file_backup_&lt;span class="sb"&gt;`&lt;/span&gt;date &lt;span class="s1"&gt;'+%Y-%m-%d'&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"----- Now tar, then zip up all files to be saved -----"&lt;/span&gt;
tar cvf /home/backup/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.tar /home/logs/* /home/stats/pisg.cfg /home/gugu/.znc/configs/znc.conf /home/repos/*
gzip /home/backup/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.tar
rm /home/backup/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.tar
chmod &lt;span class="m"&gt;755&lt;/span&gt; /home/backup/&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;backupfilename&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;.tar.gz

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"############### Completed backing up system... ###############"&lt;/span&gt;
date
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The echo lines aren&amp;rsquo;t really necessary, but I like having them there in case I run the script by hand for debugging&amp;nbsp;purposes.&lt;/p&gt;
&lt;p&gt;What it does is create an archive named server_file_backup_$current-date and adds the folders and files specified on the line starting with &lt;em&gt;tar cvf&lt;/em&gt;. Well, better said it first creates a tar archive, then it gzips it and deletes the original .tar; this is another point where the script could be improved, but hey, it works &lt;span class="caps"&gt;OK&lt;/span&gt; right&amp;nbsp;now.&lt;/p&gt;
&lt;p&gt;The archive is saved under &lt;strong&gt;/home/backup&lt;/strong&gt; and it is given all the rights except the capability for anyone to write to the&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;Then all I have to do is make the script executable&amp;nbsp;with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod +x archive.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="uploading-the-archives"&gt;Uploading the&amp;nbsp;archive(s)&lt;/h2&gt;
&lt;p&gt;A backup wouldn&amp;rsquo;t really be a backup if it lives on the same system you&amp;rsquo;re doing it on, now would it? Now, there are a couple of ways to move the data out, but I decided to simply &lt;span class="caps"&gt;FTP&lt;/span&gt; it out to the webserver which hosts my main&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;I initially tried the script using the built-in ftp utility but didn&amp;rsquo;t manage to get it to work, so I looked around and settled for ncftp; debugging the problem would&amp;rsquo;ve been more interesting and a better learning experience but I wanted to get the backups up and running as soon as possible, so this will be a future exercise on my&amp;nbsp;part.&lt;/p&gt;
&lt;p&gt;The script is a simple one which logs in to the remote server using a provided username and password and uploads all archives to a pre-specified&amp;nbsp;directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;USERNAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ftp_user_name"&lt;/span&gt;
&lt;span class="nv"&gt;PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ftp_password"&lt;/span&gt;
&lt;span class="nv"&gt;SERVER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ftp_server"&lt;/span&gt;

&lt;span class="c1"&gt;# local directory to pick up *.tar.gz file&lt;/span&gt;
&lt;span class="nv"&gt;FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/home/backup"&lt;/span&gt;

&lt;span class="c1"&gt;# remote directory to upload backup&lt;/span&gt;
&lt;span class="nv"&gt;BACKUPDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/back"&lt;/span&gt;

&lt;span class="c1"&gt;# upload file&lt;/span&gt;
ncftp -u&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$USERNAME&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; -p&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$PASSWORD&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="nv"&gt;$SERVER&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt;EOF&lt;/span&gt;
&lt;span class="s"&gt;cd $BACKUPDIR&lt;/span&gt;
&lt;span class="s"&gt;mput $FILE/*.tar.gz&lt;/span&gt;
&lt;span class="s"&gt;quit&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And after running the same &lt;strong&gt;chmod +x&lt;/strong&gt; on up.sh, ensuring it&amp;rsquo;s executable, I&amp;rsquo;ve got a nice setup&amp;nbsp;to&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create the backup&amp;nbsp;archive;&lt;/li&gt;
&lt;li&gt;Upload it to the remote&amp;nbsp;server.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr/&gt;
&lt;h2 id="the-magic-of-cron"&gt;The magic of&amp;nbsp;cron&lt;/h2&gt;
&lt;p&gt;Now all I have to do is make sure that the scripts run daily so that in case of something bad happening I don&amp;rsquo;t have a lot of data missing. Of course, nothing really stops me running the scripts more often than that, but it&amp;rsquo;s a nice trade-off between the size of the files and how much new data there is&amp;nbsp;added.&lt;/p&gt;
&lt;p&gt;Linux has something very similar to the Windows Task Scheduler called cron; what it does is allows users to schedule jobs (commands or shell scripts) to run periodically at certain times or&amp;nbsp;dates.&lt;/p&gt;
&lt;p&gt;In order for my scripts to run periodically I had to add them to the &lt;strong&gt;crontab&lt;/strong&gt; file, the configuration file for cron which tells it when the jobs need to be executed. To get to the list all I had to do was&amp;nbsp;run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;crontab -e
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now I just needed to add the jobs. I wanted to run the archiving script every night at 1am, and then at 1:30am the upload script. Why the 30 minute gap between the jobs? I want to have a margin of error in case I&amp;rsquo;ll add to the script which makes the archive, or in case files get really large, so that I won&amp;rsquo;t have the upload script try and run while the archive is being&amp;nbsp;created.&lt;/p&gt;
&lt;p&gt;Anyway, the code for the jobs&amp;nbsp;is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;* 1 * * * /home/backup.scripts/archive.sh
30 1 * * * /home/backup.scripts/up.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first line tells cron that it has to run archive.sh every day at 1am and up.sh at&amp;nbsp;1:30am.&lt;/p&gt;
&lt;p&gt;And with this I have a backup system in&amp;nbsp;place.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="to-do"&gt;To&amp;nbsp;do&lt;/h2&gt;
&lt;p&gt;I know that things can be improved, and in no way do I say that this is perfect, but it suits my needs at this point in&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;What can (and will be) improved upon are the&amp;nbsp;following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Making incremental backups&lt;/strong&gt; - This would mean that I&amp;rsquo;d set a specific day of the week to be the the full backup day,
                                     when everything gets archived, and then on every other day only the files that changed
                                     get&amp;nbsp;updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use built-in ftp client&lt;/strong&gt;  - Go back and check to see the reason why I couldn&amp;rsquo;t get ftp to work properly so that I
                                     had to use ncftp&amp;nbsp;instead.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I guess that&amp;rsquo;s about it. In all honesty, if I had ssh access to another server I&amp;rsquo;d just use rsync for the backups, but seeing that I don&amp;rsquo;t, this is the best method that came to&amp;nbsp;mind.&lt;/p&gt;
&lt;p&gt;In the next post I&amp;rsquo;ll most likely talk about git and how I&amp;rsquo;ve integrated it with&amp;nbsp;Pelican.&lt;/p&gt;</summary><category term="backup"></category><category term="ftp"></category><category term="archive"></category></entry><entry><title>Lockout: no pass, noÂ key</title><link href="https://fuzz.me.uk/locked-out/" rel="alternate"></link><updated>2012-01-19T23:52:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-01-19:locked-out/</id><summary type="html">&lt;h2 id="a-foreword"&gt;A&amp;nbsp;foreword&lt;/h2&gt;
&lt;p&gt;As you may not know, I&amp;rsquo;m mostly a Microsoft tech junkie venturing into the wonderful world of Linux. I&amp;rsquo;ve visited this land from time to time, but never had the time or motivation to try and settle in, but all this is about to change as one of my New Years resolutions was to get my hands dirty in&amp;nbsp;Linux.&lt;/p&gt;
&lt;p&gt;Every new beginning is a learning experience, and what better way to learn than from the mistakes made (and the process of trying to fix them)? With this, I bring you my first - and probably not last - embarrassing&amp;nbsp;story.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="the-idea"&gt;The&amp;nbsp;idea&lt;/h2&gt;
&lt;p&gt;The goal was noble: &lt;em&gt;try and make my &lt;span class="caps"&gt;VPS&lt;/span&gt; as secure as possible&lt;/em&gt;. And what better way to achieve this than to disable ssh password authentication, only allowing users to connect with public key&amp;nbsp;authentication?&lt;/p&gt;
&lt;p&gt;In the end, it was simple! All I had to do was modify &lt;strong&gt;/etc/ssh/sshd_config&lt;/strong&gt; and&amp;nbsp;add&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PasswordAuthentication no
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After a restart of the ssh server all was good in the&amp;nbsp;world.&lt;/p&gt;
&lt;p&gt;Heck, I was so happy that I managed to get everything running that I even made an excited tweet that would prove to be a bit too prescient for my&amp;nbsp;taste.&lt;/p&gt;
&lt;p align="center"&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p&gt;Finally managed to get git to behave. I feel so victorious I&amp;rsquo;d reinstall the server just to do it again. Which reminds me, need&amp;nbsp;backups.&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a data-datetime="2012-01-17T19:33:00+00:00" href="https://twitter.com/fuzzmz/status/159357579846365185"&gt;January17, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;script charset="utf-8" src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;
&lt;hr/&gt;
&lt;h2 id="the-catalyst"&gt;The&amp;nbsp;catalyst&lt;/h2&gt;
&lt;p&gt;Every time I logged in, the working directory was &lt;strong&gt;/root&lt;/strong&gt; (and yes, I know that I shouldn&amp;rsquo;t use root for my day to day business, but hey, that&amp;rsquo;s why I disabled password authentication) and yet all of my work was done in &lt;strong&gt;/home&lt;/strong&gt;. This in turn lead to a very frustrated Fuzz who sought to fix his&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;I mean, it couldn&amp;rsquo;t be that hard to change the login directory, would it? Heck, Linux even gives you a simple way to do it&amp;nbsp;through&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ usermod -d newdir loginname
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So all I had to do was to run &lt;em&gt;usermod -d /home root&lt;/em&gt; and I&amp;rsquo;d be set. Little did I know&amp;nbsp;that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there is an additional parameter, &lt;em&gt;-m&lt;/em&gt; which moves the contents of the old dir to the new one (*cough*&amp;nbsp;*cough*);&lt;/li&gt;
&lt;li&gt;you can&amp;rsquo;t run the command for the user you&amp;rsquo;re currently logged in&amp;nbsp;with.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This meant that I had to search for an alternative: it was changing the directory directly in the &lt;strong&gt;/etc/passwd&lt;/strong&gt; file, and so I&amp;nbsp;did.&lt;/p&gt;
&lt;p&gt;And things were&amp;nbsp;good!&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="there-are-no-keys-to-this-castle"&gt;There are no keys to this&amp;nbsp;castle&lt;/h2&gt;
&lt;p&gt;A short time passes after changing the passwd file and I decide to do a logout and log back&amp;nbsp;in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Permission denied &lt;span class="o"&gt;(&lt;/span&gt;publickey&lt;span class="o"&gt;)&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;span class="caps"&gt;OK&lt;/span&gt;, this isn&amp;rsquo;t good, this isn&amp;rsquo;t good at&amp;nbsp;all!&lt;/p&gt;
&lt;p&gt;Remember that -m I told you about? Yeah, the one that moves the contents of the old login directory to the new one; well, one of the things it moves is the &lt;strong&gt;.ssh&lt;/strong&gt; folder which contains the authorized_keys&amp;nbsp;file.&lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s so special about that file? Well, it holds the list of rsa keys which are allowed to access the server. Think of them as the keys that open your house door in the absence of people inside (the password, which I disabled) to open the door for&amp;nbsp;you.&lt;/p&gt;
&lt;p&gt;In&amp;nbsp;short:&lt;/p&gt;
&lt;p align="center"&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p&gt;Just as I got everything running the way I wanted I managed to lock myself out of the server. Fucking piece of&amp;nbsp;shit!&lt;/p&gt;&amp;mdash; Serban Constantin (@fuzzmz) &lt;a data-datetime="2012-01-17T20:29:00+00:00" href="https://twitter.com/fuzzmz/status/159371687379484675"&gt;January17, 2012&lt;/a&gt;&lt;/blockquote&gt;&lt;/p&gt;
&lt;script charset="utf-8" src="//platform.twitter.com/widgets.js"&gt;&lt;/script&gt;
&lt;p&gt;Fortunately, while bitching on Twitter about the whole situation &lt;a href="http://twitter.com/Kephu"&gt;Keph&lt;/a&gt; reminds me that I still have access to the server&amp;hellip;&amp;nbsp;somewhat.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="irc-bouncer-to-the-rescue"&gt;&lt;span class="caps"&gt;IRC&lt;/span&gt; bouncer to the&amp;nbsp;rescue!&lt;/h2&gt;
&lt;p&gt;One of the purposes of that &lt;span class="caps"&gt;VPS&lt;/span&gt; is to run &lt;a href="http://wiki.znc.in"&gt;&lt;span class="caps"&gt;ZNC&lt;/span&gt;&lt;/a&gt;, an &lt;span class="caps"&gt;IRC&lt;/span&gt; bouncer which has some nice capabilities, one of them being a module called &lt;em&gt;shell&lt;/em&gt; which allow you to type commands into a query as if it were a&amp;nbsp;terminal.&lt;/p&gt;
&lt;p&gt;&lt;span class="dquo"&gt;&amp;ldquo;&lt;/span&gt;Yay, I am saved!&amp;rdquo; thought I, without realizing that I had &lt;span class="caps"&gt;ZNC&lt;/span&gt; run under a non-admin account, exactly because of the shell module. The reasoning is that in case someone hacks my &lt;span class="caps"&gt;IRC&lt;/span&gt; password they won&amp;rsquo;t be able to do any damage as, either by loging in the server directly through ssh or via the shell&amp;nbsp;module.&lt;/p&gt;
&lt;p&gt;On the upside, even though I couldn&amp;rsquo;t do much I could at least write an authorized_keys file for that user and get ssh access to the server; this in turn meant that I could back up a portion of my data in case I had to reinstall the&amp;nbsp;server.&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="admin-panel-what-admin-panel"&gt;Admin panel? What admin&amp;nbsp;panel?&lt;/h2&gt;
&lt;p&gt;Of course, people both in &lt;span class="caps"&gt;IRC&lt;/span&gt; and on Twitter told me to see if I can get access to the server via the admin panel provided by the &lt;span class="caps"&gt;VPS&lt;/span&gt; host. Fortunately for me, they did indeed provide such access via a serial&amp;nbsp;console.&lt;/p&gt;
&lt;p&gt;&lt;img class="img-responsive" src="/images/imported-old/magic-button.PNG" style="float:left; padding-right:10px"/&gt;&lt;/p&gt;
&lt;p&gt;I had seen this magic button and tried it even before embarking on the amazing &lt;span class="caps"&gt;IRC&lt;/span&gt;-hackathon journey, I, in my eternal wisdom, decided to replace the default username in the dialogue that popped up when I pressed it with root, which in turn led me to the same &amp;ldquo;Permission denied(publickey)&amp;rdquo; error&amp;nbsp;message.&lt;/p&gt;
&lt;p&gt;This time though, this time it would be different! This time I would leave the default username and gaze upon the wonders&amp;nbsp;of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;root@qwerty:~#
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Yes, I was in and&amp;nbsp;victorious!&lt;/p&gt;
&lt;p&gt;I quickly created a .ssh/authorized_keys file under my new login directory and started working on my backup&amp;nbsp;strategy.&lt;/p&gt;
&lt;p&gt;But about that, in the next blog&amp;nbsp;update.&lt;/p&gt;</summary><category term="Linux"></category><category term="d'oh"></category></entry><entry><title>HelloÂ world!</title><link href="https://fuzz.me.uk/hello-world/" rel="alternate"></link><updated>2012-01-18T00:02:00+02:00</updated><author><name>fuzzmz</name></author><id>tag:fuzz.me.uk,2012-01-18:hello-world/</id><summary type="html">&lt;p&gt;This is my attempt at getting the &lt;a class="reference external" href="http://pelican.readthedocs.org/en/2.7.2/index.html"&gt;Pelican&lt;/a&gt; blog system installed on my new &lt;span class="caps"&gt;VPS&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;This is also a first &lt;strong&gt;Hello World&lt;/strong&gt; blog post, as is customary. So, hello! I&amp;rsquo;m not sure yet what this blog is going to be about, most likely about my adventures in learning more about the wonderful word of Linux server administration and&amp;nbsp;geekiness.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s also a bit weird to write this as I haven&amp;rsquo;t learned much about the reStructredText format, which is used behind the scenes to write the&amp;nbsp;posts.&lt;/p&gt;
&lt;p&gt;In any case, hope you&amp;rsquo;ll have fun reading this as I have writing&amp;nbsp;it.&lt;/p&gt;
</summary><category term="Pelican"></category><category term="blog"></category></entry></feed>